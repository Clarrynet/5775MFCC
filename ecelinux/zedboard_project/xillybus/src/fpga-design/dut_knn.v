// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_knn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 37'b1;
parameter    ap_ST_st2_fsm_1 = 37'b10;
parameter    ap_ST_st3_fsm_2 = 37'b100;
parameter    ap_ST_st4_fsm_3 = 37'b1000;
parameter    ap_ST_st5_fsm_4 = 37'b10000;
parameter    ap_ST_st6_fsm_5 = 37'b100000;
parameter    ap_ST_st7_fsm_6 = 37'b1000000;
parameter    ap_ST_st8_fsm_7 = 37'b10000000;
parameter    ap_ST_st9_fsm_8 = 37'b100000000;
parameter    ap_ST_st10_fsm_9 = 37'b1000000000;
parameter    ap_ST_st11_fsm_10 = 37'b10000000000;
parameter    ap_ST_st12_fsm_11 = 37'b100000000000;
parameter    ap_ST_st13_fsm_12 = 37'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 37'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 37'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 37'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 37'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 37'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 37'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 37'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 37'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 37'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 37'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 37'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 37'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 37'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 37'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 37'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 37'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 37'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 37'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 37'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 37'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 37'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 37'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 37'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 37'b1000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_3E4CCCCD = 32'b111110010011001100110011001101;
parameter    ap_const_lv14_3D5 = 14'b1111010101;
parameter    ap_const_lv14_3E8 = 14'b1111101000;
parameter    ap_const_lv9_13 = 9'b10011;
parameter    ap_const_lv4_E = 4'b1110;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv14_3D4 = 14'b1111010100;
parameter    ap_const_lv10_32 = 10'b110010;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv6_31 = 6'b110001;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv14_2AE = 14'b1010101110;
parameter    ap_const_lv10_31 = 10'b110001;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv9_181 = 9'b110000001;
parameter    ap_const_lv8_7F = 8'b1111111;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv5_4 = 5'b100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_54;
wire   [13:0] training_data_V_address0;
reg    training_data_V_ce0;
wire   [5:0] training_data_V_q0;
wire   [13:0] next_mul8_fu_515_p2;
reg   [13:0] next_mul8_reg_1120;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_80;
wire   [13:0] next_mul6_fu_521_p2;
reg   [13:0] next_mul6_reg_1125;
wire   [8:0] next_mul4_fu_527_p2;
reg   [8:0] next_mul4_reg_1130;
wire   [3:0] j_6_fu_539_p2;
reg   [3:0] j_6_reg_1138;
reg   [13:0] training_data2_addr_reg_1143;
wire   [0:0] exitcond10_fu_533_p2;
wire   [9:0] next_mul2_fu_556_p2;
reg   [9:0] next_mul2_reg_1148;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_101;
wire   [9:0] i_cast_cast_fu_562_p1;
reg   [9:0] i_cast_cast_reg_1153;
wire   [4:0] i_6_fu_572_p2;
reg   [4:0] i_6_reg_1161;
wire   [0:0] exitcond9_fu_566_p2;
wire   [5:0] k_2_fu_603_p2;
reg   [5:0] k_2_reg_1174;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_120;
wire   [0:0] exitcond8_fu_597_p2;
wire   [9:0] next_mul_fu_630_p2;
reg   [9:0] next_mul_reg_1184;
wire   [13:0] tmp_55_fu_639_p2;
reg   [13:0] tmp_55_reg_1189;
reg   [5:0] training_data_V_load_reg_1194;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_137;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_146;
wire   [31:0] grp_fu_504_p1;
reg   [31:0] tmp_48_reg_1204;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_155;
wire   [31:0] grp_fu_507_p1;
reg   [31:0] tmp_42_reg_1209;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_164;
wire   [13:0] next_mul3_fu_653_p2;
reg   [13:0] next_mul3_reg_1214;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_173;
wire   [9:0] i1_cast_cast_fu_659_p1;
reg   [9:0] i1_cast_cast_reg_1219;
wire   [4:0] i_5_fu_669_p2;
reg   [4:0] i_5_reg_1227;
wire   [13:0] next_mul9_fu_675_p2;
reg   [13:0] next_mul9_reg_1232;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_186;
wire   [9:0] j2_cast_fu_681_p1;
reg   [9:0] j2_cast_reg_1237;
wire   [3:0] j_7_fu_691_p2;
reg   [3:0] j_7_reg_1245;
wire   [5:0] k_3_fu_703_p2;
reg   [5:0] k_3_reg_1253;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_199;
wire   [9:0] next_mul10_fu_709_p2;
reg   [9:0] next_mul10_reg_1258;
wire   [0:0] exitcond5_fu_697_p2;
wire   [9:0] next_mul12_fu_729_p2;
reg   [9:0] next_mul12_reg_1268;
wire   [13:0] tmp_53_fu_738_p2;
reg   [13:0] tmp_53_reg_1273;
wire   [13:0] next_mul5_fu_748_p2;
reg   [13:0] next_mul5_reg_1278;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_219;
wire   [9:0] next_mul7_fu_754_p2;
reg   [9:0] next_mul7_reg_1283;
wire   [4:0] i_7_fu_766_p2;
reg   [4:0] i_7_reg_1291;
reg   [4:0] min_distance_addr_reg_1296;
wire   [0:0] exitcond4_fu_760_p2;
reg   [4:0] group_addr_reg_1301;
wire   [13:0] next_mul11_fu_790_p2;
reg   [13:0] next_mul11_reg_1306;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_239;
wire   [9:0] j5_cast6_fu_796_p1;
reg   [9:0] j5_cast6_reg_1311;
wire   [3:0] j_8_fu_806_p2;
reg   [3:0] j_8_reg_1319;
reg   [13:0] training_data2_addr_3_reg_1324;
wire   [0:0] exitcond3_fu_800_p2;
reg   [3:0] distance_addr_reg_1329;
wire   [5:0] k_4_fu_834_p2;
reg   [5:0] k_4_reg_1337;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_259;
wire   [0:0] exitcond_fu_828_p2;
wire   [9:0] next_mul13_fu_855_p2;
reg   [9:0] next_mul13_reg_1347;
reg   [31:0] input_load_reg_1357;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_276;
wire   [31:0] training_instance_q0;
reg   [31:0] training_instance_load_reg_1362;
wire   [31:0] grp_fu_500_p2;
reg   [31:0] p_x_assign_reg_1367;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_287;
wire   [0:0] tmp_6_fu_927_p2;
reg   [0:0] tmp_6_reg_1372;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_296;
wire   [0:0] tmp_57_fu_940_p2;
reg   [0:0] tmp_57_reg_1376;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_305;
reg   [0:0] p_Result_20_reg_1380;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_314;
wire   [31:0] p_Val2_28_fu_1066_p3;
reg   [31:0] p_Val2_28_reg_1385;
wire   [31:0] group_zero_1_fu_1104_p3;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_325;
wire   [31:0] group_one_1_fu_1112_p3;
reg   [13:0] training_data2_address0;
reg    training_data2_ce0;
reg    training_data2_we0;
reg   [31:0] training_data2_d0;
wire   [31:0] training_data2_q0;
reg   [13:0] training_instance_address0;
reg    training_instance_ce0;
reg    training_instance_we0;
reg    min_distance_ce0;
reg    min_distance_we0;
wire   [31:0] min_distance_q0;
reg    distance_ce0;
reg    distance_we0;
wire   [31:0] distance_d0;
wire   [31:0] distance_q0;
reg    group_ce0;
reg    group_we0;
wire   [31:0] group_d0;
wire   [31:0] group_q0;
reg   [3:0] j_reg_226;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_388;
reg   [8:0] phi_mul3_reg_237;
reg   [13:0] phi_mul5_reg_249;
reg   [13:0] phi_mul7_reg_261;
reg   [4:0] i_reg_273;
reg   [9:0] phi_mul1_reg_284;
reg   [5:0] k_reg_296;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_413;
reg   [9:0] phi_mul_reg_307;
reg   [4:0] i1_reg_318;
wire   [0:0] exitcond6_fu_685_p2;
reg   [13:0] phi_mul2_reg_329;
reg   [3:0] j2_reg_341;
wire   [0:0] exitcond7_fu_663_p2;
reg   [13:0] phi_mul8_reg_352;
reg   [5:0] k3_reg_364;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_445;
reg   [9:0] phi_mul9_reg_375;
reg   [9:0] phi_mul10_reg_386;
reg   [31:0] group_zero_s_reg_397;
reg   [31:0] group_one_s_reg_409;
reg   [4:0] i4_reg_421;
reg   [9:0] phi_mul4_reg_432;
reg   [13:0] phi_mul6_reg_444;
reg   [3:0] j5_reg_456;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_471;
reg   [13:0] phi_mul11_reg_467;
reg   [5:0] k6_reg_478;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_482;
reg   [9:0] phi_mul12_reg_489;
wire   [63:0] tmp_63_cast_fu_551_p1;
wire   [63:0] tmp_47_fu_625_p1;
wire   [63:0] tmp_68_cast_fu_649_p1;
wire   [63:0] tmp_71_cast_fu_724_p1;
wire   [63:0] tmp_72_cast_fu_744_p1;
wire   [63:0] tmp_44_fu_772_p1;
wire   [63:0] tmp_70_cast_fu_823_p1;
wire   [63:0] tmp_51_fu_812_p1;
wire   [63:0] tmp_73_cast_fu_850_p1;
wire   [63:0] tmp_74_cast_fu_870_p1;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_529;
wire   [31:0] grp_fu_504_p0;
wire   [31:0] grp_fu_507_p0;
wire   [31:0] tmp_5_fu_510_p0;
wire   [13:0] tmp_s_fu_545_p2;
wire   [1:0] tmp_fu_578_p4;
wire   [9:0] k_cast1_fu_593_p1;
wire   [9:0] tmp1_fu_609_p2;
wire   [13:0] tmp1_cast_fu_615_p1;
wire   [13:0] tmp_46_fu_619_p2;
wire   [13:0] tmp_52_cast_fu_635_p1;
wire   [13:0] tmp_54_cast_fu_714_p1;
wire   [13:0] tmp_52_fu_718_p2;
wire   [13:0] tmp_56_cast_fu_734_p1;
wire   [0:0] slt_fu_778_p2;
wire   [13:0] tmp_56_fu_817_p2;
wire   [9:0] tmp_58_cast_fu_840_p1;
wire   [9:0] tmp_58_fu_844_p2;
wire   [13:0] tmp_60_cast_fu_860_p1;
wire   [13:0] tmp_59_fu_864_p2;
wire   [31:0] p_Val2_s_fu_875_p1;
wire   [30:0] tmp_49_fu_878_p1;
wire   [31:0] p_Result_s_fu_886_p3;
wire   [7:0] tmp_3_fu_899_p4;
wire   [22:0] tmp_60_fu_882_p1;
wire   [0:0] notrhs_fu_915_p2;
wire   [0:0] notlhs_fu_909_p2;
wire   [0:0] tmp_4_fu_921_p2;
wire   [0:0] tmp_5_fu_510_p2;
wire   [31:0] p_Val2_25_fu_946_p1;
wire   [22:0] loc_V_2_fu_968_p1;
wire   [23:0] p_Result_21_fu_972_p3;
wire   [7:0] loc_V_fu_958_p4;
wire   [8:0] tmp_i_i_i_cast2_fu_984_p1;
wire   [8:0] sh_assign_fu_988_p2;
wire   [7:0] tmp_117_i_i_fu_1002_p2;
wire   [0:0] isNeg_fu_994_p3;
wire  signed [8:0] tmp_117_i_i_cast_fu_1008_p1;
wire   [8:0] sh_assign_1_fu_1012_p3;
wire  signed [31:0] sh_assign_1_cast_fu_1020_p1;
wire  signed [23:0] sh_assign_1_cast_cast_fu_1024_p1;
wire   [77:0] tmp_i_i_fu_980_p1;
wire   [77:0] tmp_118_i_i_fu_1028_p1;
wire   [23:0] tmp_119_i_i_fu_1032_p2;
wire   [0:0] tmp_65_fu_1044_p3;
wire   [77:0] tmp_121_i_i_fu_1038_p2;
wire   [31:0] tmp_62_fu_1052_p1;
wire   [31:0] tmp_63_fu_1056_p4;
wire   [31:0] p_Val2_i_i_fu_1074_p2;
wire   [0:0] tmp_50_fu_1086_p2;
wire   [31:0] group_zero_fu_1092_p2;
wire   [31:0] group_one_fu_1098_p2;
wire   [0:0] rev_fu_784_p2;
reg   [0:0] ap_return_preg;
reg   [36:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'b1;
#0 ap_return_preg = 1'b0;
end

dut_knn_training_data_V #(
    .DataWidth( 6 ),
    .AddressRange( 14000 ),
    .AddressWidth( 14 ))
training_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_address0),
    .ce0(training_data_V_ce0),
    .q0(training_data_V_q0)
);

dut_knn_training_data2 #(
    .DataWidth( 32 ),
    .AddressRange( 13734 ),
    .AddressWidth( 14 ))
training_data2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data2_address0),
    .ce0(training_data2_ce0),
    .we0(training_data2_we0),
    .d0(training_data2_d0),
    .q0(training_data2_q0)
);

dut_knn_training_instance #(
    .DataWidth( 32 ),
    .AddressRange( 13720 ),
    .AddressWidth( 14 ))
training_instance_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_instance_address0),
    .ce0(training_instance_ce0),
    .we0(training_instance_we0),
    .d0(training_data2_q0),
    .q0(training_instance_q0)
);

dut_knn_min_distance #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
min_distance_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(min_distance_addr_reg_1296),
    .ce0(min_distance_ce0),
    .we0(min_distance_we0),
    .d0(distance_q0),
    .q0(min_distance_q0)
);

dut_knn_distance #(
    .DataWidth( 32 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
distance_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(distance_addr_reg_1329),
    .ce0(distance_ce0),
    .we0(distance_we0),
    .d0(distance_d0),
    .q0(distance_q0)
);

dut_knn_min_distance #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
group_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(group_addr_reg_1301),
    .ce0(group_ce0),
    .we0(group_we0),
    .d0(group_d0),
    .q0(group_q0)
);

dut_fsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fsub_32ns_32ns_32_5_full_dsp_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_load_reg_1357),
    .din1(training_instance_load_reg_1362),
    .ce(1'b1),
    .dout(grp_fu_500_p2)
);

dut_uitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_uitofp_32ns_32_6_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_504_p0),
    .ce(1'b1),
    .dout(grp_fu_504_p1)
);

dut_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_sitofp_32ns_32_6_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_507_p0),
    .ce(1'b1),
    .dout(grp_fu_507_p1)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U16(
    .din0(tmp_5_fu_510_p0),
    .din1(ap_const_lv32_3E4CCCCD),
    .opcode(ap_const_lv5_4),
    .dout(tmp_5_fu_510_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(1'b0 == exitcond4_fu_760_p2))) begin
            ap_return_preg <= rev_fu_784_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond6_fu_685_p2))) begin
        i1_reg_318 <= i_5_reg_1227;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond10_fu_533_p2 == 1'b0))) begin
        i1_reg_318 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & ~(1'b0 == exitcond7_fu_663_p2))) begin
        i4_reg_421 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        i4_reg_421 <= i_7_reg_1291;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_fu_597_p2))) begin
        i_reg_273 <= i_6_reg_1161;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond10_fu_533_p2 == 1'b0))) begin
        i_reg_273 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond5_fu_697_p2))) begin
        j2_reg_341 <= j_7_reg_1245;
    end else if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & (1'b0 == exitcond7_fu_663_p2))) begin
        j2_reg_341 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (1'b0 == exitcond4_fu_760_p2))) begin
        j5_reg_456 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        j5_reg_456 <= j_8_reg_1319;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        j_reg_226 <= j_6_reg_1138;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        j_reg_226 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (1'b0 == exitcond6_fu_685_p2))) begin
        k3_reg_364 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        k3_reg_364 <= k_3_reg_1253;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond3_fu_800_p2))) begin
        k6_reg_478 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        k6_reg_478 <= k_4_reg_1337;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_566_p2))) begin
        k_reg_296 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        k_reg_296 <= k_2_reg_1174;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (1'b0 == exitcond6_fu_685_p2))) begin
        phi_mul10_reg_386 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        phi_mul10_reg_386 <= next_mul12_reg_1268;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (1'b0 == exitcond4_fu_760_p2))) begin
        phi_mul11_reg_467 <= ap_const_lv14_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        phi_mul11_reg_467 <= next_mul11_reg_1306;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond3_fu_800_p2))) begin
        phi_mul12_reg_489 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        phi_mul12_reg_489 <= next_mul13_reg_1347;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond8_fu_597_p2))) begin
        phi_mul1_reg_284 <= next_mul2_reg_1148;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond10_fu_533_p2 == 1'b0))) begin
        phi_mul1_reg_284 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond6_fu_685_p2))) begin
        phi_mul2_reg_329 <= next_mul3_reg_1214;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond10_fu_533_p2 == 1'b0))) begin
        phi_mul2_reg_329 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        phi_mul3_reg_237 <= next_mul4_reg_1130;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        phi_mul3_reg_237 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & ~(1'b0 == exitcond7_fu_663_p2))) begin
        phi_mul4_reg_432 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        phi_mul4_reg_432 <= next_mul7_reg_1283;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        phi_mul5_reg_249 <= next_mul6_reg_1125;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        phi_mul5_reg_249 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & ~(1'b0 == exitcond7_fu_663_p2))) begin
        phi_mul6_reg_444 <= ap_const_lv14_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        phi_mul6_reg_444 <= next_mul5_reg_1278;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        phi_mul7_reg_261 <= next_mul8_reg_1120;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        phi_mul7_reg_261 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond5_fu_697_p2))) begin
        phi_mul8_reg_352 <= next_mul9_reg_1232;
    end else if (((1'b1 == ap_sig_cseq_ST_st19_fsm_18) & (1'b0 == exitcond7_fu_663_p2))) begin
        phi_mul8_reg_352 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (1'b0 == exitcond6_fu_685_p2))) begin
        phi_mul9_reg_375 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        phi_mul9_reg_375 <= next_mul10_reg_1258;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_566_p2))) begin
        phi_mul_reg_307 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        phi_mul_reg_307 <= next_mul_reg_1184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) & (1'b0 == exitcond3_fu_800_p2))) begin
        distance_addr_reg_1329 <= tmp_51_fu_812_p1;
        training_data2_addr_3_reg_1324 <= tmp_70_cast_fu_823_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (1'b0 == exitcond4_fu_760_p2))) begin
        group_addr_reg_1301 <= tmp_44_fu_772_p1;
        min_distance_addr_reg_1296 <= tmp_44_fu_772_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st37_fsm_36)) begin
        group_one_s_reg_409 <= group_one_1_fu_1112_p3;
        group_zero_s_reg_397 <= group_zero_1_fu_1104_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        i1_cast_cast_reg_1219[4 : 0] <= i1_cast_cast_fu_659_p1[4 : 0];
        i_5_reg_1227 <= i_5_fu_669_p2;
        next_mul3_reg_1214 <= next_mul3_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        i_6_reg_1161 <= i_6_fu_572_p2;
        i_cast_cast_reg_1153[4 : 0] <= i_cast_cast_fu_562_p1[4 : 0];
        next_mul2_reg_1148 <= next_mul2_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        i_7_reg_1291 <= i_7_fu_766_p2;
        next_mul5_reg_1278 <= next_mul5_fu_748_p2;
        next_mul7_reg_1283 <= next_mul7_fu_754_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        input_load_reg_1357 <= input_r_q0;
        training_instance_load_reg_1362 <= training_instance_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        j2_cast_reg_1237[3 : 0] <= j2_cast_fu_681_p1[3 : 0];
        j_7_reg_1245 <= j_7_fu_691_p2;
        next_mul9_reg_1232 <= next_mul9_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        j5_cast6_reg_1311[3 : 0] <= j5_cast6_fu_796_p1[3 : 0];
        j_8_reg_1319 <= j_8_fu_806_p2;
        next_mul11_reg_1306 <= next_mul11_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        j_6_reg_1138 <= j_6_fu_539_p2;
        next_mul4_reg_1130 <= next_mul4_fu_527_p2;
        next_mul6_reg_1125 <= next_mul6_fu_521_p2;
        next_mul8_reg_1120 <= next_mul8_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        k_2_reg_1174 <= k_2_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        k_3_reg_1253 <= k_3_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        k_4_reg_1337 <= k_4_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond5_fu_697_p2))) begin
        next_mul10_reg_1258 <= next_mul10_fu_709_p2;
        next_mul12_reg_1268 <= next_mul12_fu_729_p2;
        tmp_53_reg_1273 <= tmp_53_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond_fu_828_p2))) begin
        next_mul13_reg_1347 <= next_mul13_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond8_fu_597_p2))) begin
        next_mul_reg_1184 <= next_mul_fu_630_p2;
        tmp_55_reg_1189 <= tmp_55_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        p_Result_20_reg_1380 <= p_Val2_25_fu_946_p1[ap_const_lv32_1F];
        p_Val2_28_reg_1385 <= p_Val2_28_fu_1066_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        p_x_assign_reg_1367 <= grp_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp_42_reg_1209 <= grp_fu_507_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        tmp_48_reg_1204 <= grp_fu_504_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        tmp_57_reg_1376 <= tmp_57_fu_940_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        tmp_6_reg_1372 <= tmp_6_fu_927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond10_fu_533_p2 == 1'b0))) begin
        training_data2_addr_reg_1143 <= tmp_63_cast_fu_551_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        training_data_V_load_reg_1194 <= training_data_V_q0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(1'b0 == exitcond4_fu_760_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(1'b0 == exitcond4_fu_760_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(1'b0 == exitcond4_fu_760_p2))) begin
        ap_return = rev_fu_784_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_155) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_413) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_164) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_388) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_173) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_54) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_186) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_199) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_445) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_219) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_239) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_259) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_276) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_529) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_80) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_287) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_296) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_482) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_305) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_314) begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_471) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_325) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_101) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_120) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_137) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_146) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st32_fsm_31) | (1'b1 == ap_sig_cseq_ST_st33_fsm_32))) begin
        distance_ce0 = 1'b1;
    end else begin
        distance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st33_fsm_32) & ~(1'b0 == tmp_6_reg_1372))) begin
        distance_we0 = 1'b1;
    end else begin
        distance_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st24_fsm_23) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        group_ce0 = 1'b1;
    end else begin
        group_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(1'b0 == tmp_57_reg_1376))) begin
        group_we0 = 1'b1;
    end else begin
        group_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33))) begin
        min_distance_ce0 = 1'b1;
    end else begin
        min_distance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st34_fsm_33) & ~(1'b0 == tmp_57_fu_940_p2))) begin
        min_distance_we0 = 1'b1;
    end else begin
        min_distance_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        training_data2_address0 = training_data2_addr_reg_1143;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        training_data2_address0 = tmp_68_cast_fu_649_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        training_data2_address0 = training_data2_addr_3_reg_1324;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        training_data2_address0 = tmp_71_cast_fu_724_p1;
    end else begin
        training_data2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        training_data2_ce0 = 1'b1;
    end else begin
        training_data2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        training_data2_d0 = tmp_42_reg_1209;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        training_data2_d0 = tmp_48_reg_1204;
    end else begin
        training_data2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) | (1'b1 == ap_sig_cseq_ST_st12_fsm_11))) begin
        training_data2_we0 = 1'b1;
    end else begin
        training_data2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        training_data_V_ce0 = 1'b1;
    end else begin
        training_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        training_instance_address0 = tmp_72_cast_fu_744_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        training_instance_address0 = tmp_74_cast_fu_870_p1;
    end else begin
        training_instance_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st22_fsm_21))) begin
        training_instance_ce0 = 1'b1;
    end else begin
        training_instance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        training_instance_we0 = 1'b1;
    end else begin
        training_instance_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((exitcond10_fu_533_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(1'b0 == exitcond9_fu_566_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond8_fu_597_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        ap_ST_st19_fsm_18 : begin
            if (~(1'b0 == exitcond7_fu_663_p2)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        ap_ST_st20_fsm_19 : begin
            if ((1'b0 == exitcond6_fu_685_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end
        end
        ap_ST_st21_fsm_20 : begin
            if ((1'b0 == exitcond5_fu_697_p2)) begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st23_fsm_22 : begin
            if (~(1'b0 == exitcond4_fu_760_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end
        end
        ap_ST_st24_fsm_23 : begin
            if ((1'b0 == exitcond3_fu_800_p2)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st37_fsm_36;
            end
        end
        ap_ST_st25_fsm_24 : begin
            if (~(1'b0 == exitcond_fu_828_p2)) begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st34_fsm_33 : begin
            if ((1'b0 == tmp_57_fu_940_p2)) begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_st35_fsm_34;
            end
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_101 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_120 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_137 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_146 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_155 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_164 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_173 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_186 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_199 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_219 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_239 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_259 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_276 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_287 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_296 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_305 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_314 = (1'b1 == ap_CS_fsm[ap_const_lv32_22]);
end

always @ (*) begin
    ap_sig_325 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_388 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_413 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_445 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_471 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_482 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_529 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_54 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_80 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

assign distance_d0 = (distance_q0 + ap_const_lv32_1);

assign exitcond10_fu_533_p2 = ((j_reg_226 == ap_const_lv4_E) ? 1'b1 : 1'b0);

assign exitcond3_fu_800_p2 = ((j5_reg_456 == ap_const_lv4_E) ? 1'b1 : 1'b0);

assign exitcond4_fu_760_p2 = ((i4_reg_421 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond5_fu_697_p2 = ((k3_reg_364 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond6_fu_685_p2 = ((j2_reg_341 == ap_const_lv4_E) ? 1'b1 : 1'b0);

assign exitcond7_fu_663_p2 = ((i1_reg_318 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond8_fu_597_p2 = ((k_reg_296 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond9_fu_566_p2 = ((i_reg_273 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond_fu_828_p2 = ((k6_reg_478 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign group_d0 = ((p_Result_20_reg_1380[0:0] === 1'b1) ? p_Val2_i_i_fu_1074_p2 : p_Val2_28_reg_1385);

assign group_one_1_fu_1112_p3 = ((tmp_50_fu_1086_p2[0:0] === 1'b1) ? group_one_s_reg_409 : group_one_fu_1098_p2);

assign group_one_fu_1098_p2 = (group_one_s_reg_409 + ap_const_lv32_1);

assign group_zero_1_fu_1104_p3 = ((tmp_50_fu_1086_p2[0:0] === 1'b1) ? group_zero_fu_1092_p2 : group_zero_s_reg_397);

assign group_zero_fu_1092_p2 = (group_zero_s_reg_397 + ap_const_lv32_1);

assign grp_fu_504_p0 = training_data_V_load_reg_1194;

assign grp_fu_507_p0 = tmp_fu_578_p4;

assign i1_cast_cast_fu_659_p1 = i1_reg_318;

assign i_5_fu_669_p2 = (i1_reg_318 + ap_const_lv5_1);

assign i_6_fu_572_p2 = (i_reg_273 + ap_const_lv5_1);

assign i_7_fu_766_p2 = (i4_reg_421 + ap_const_lv5_1);

assign i_cast_cast_fu_562_p1 = i_reg_273;

assign input_r_address0 = tmp_73_cast_fu_850_p1;

assign isNeg_fu_994_p3 = sh_assign_fu_988_p2[ap_const_lv32_8];

assign j2_cast_fu_681_p1 = j2_reg_341;

assign j5_cast6_fu_796_p1 = j5_reg_456;

assign j_6_fu_539_p2 = (j_reg_226 + ap_const_lv4_1);

assign j_7_fu_691_p2 = (j2_reg_341 + ap_const_lv4_1);

assign j_8_fu_806_p2 = (j5_reg_456 + ap_const_lv4_1);

assign k_2_fu_603_p2 = (k_reg_296 + ap_const_lv6_1);

assign k_3_fu_703_p2 = (k3_reg_364 + ap_const_lv6_1);

assign k_4_fu_834_p2 = (k6_reg_478 + ap_const_lv6_1);

assign k_cast1_fu_593_p1 = k_reg_296;

assign loc_V_2_fu_968_p1 = p_Val2_25_fu_946_p1[22:0];

assign loc_V_fu_958_p4 = {{p_Val2_25_fu_946_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign next_mul10_fu_709_p2 = (i1_cast_cast_reg_1219 + phi_mul9_reg_375);

assign next_mul11_fu_790_p2 = (phi_mul11_reg_467 + ap_const_lv14_3D5);

assign next_mul12_fu_729_p2 = (j2_cast_reg_1237 + phi_mul10_reg_386);

assign next_mul13_fu_855_p2 = (phi_mul12_reg_489 + j5_cast6_reg_1311);

assign next_mul2_fu_556_p2 = (phi_mul1_reg_284 + ap_const_lv10_32);

assign next_mul3_fu_653_p2 = (phi_mul2_reg_329 + ap_const_lv14_2AE);

assign next_mul4_fu_527_p2 = (phi_mul3_reg_237 + ap_const_lv9_13);

assign next_mul5_fu_748_p2 = (phi_mul6_reg_444 + ap_const_lv14_2AE);

assign next_mul6_fu_521_p2 = (phi_mul5_reg_249 + ap_const_lv14_3E8);

assign next_mul7_fu_754_p2 = (phi_mul4_reg_432 + ap_const_lv10_31);

assign next_mul8_fu_515_p2 = (phi_mul7_reg_261 + ap_const_lv14_3D5);

assign next_mul9_fu_675_p2 = (phi_mul8_reg_352 + ap_const_lv14_3D5);

assign next_mul_fu_630_p2 = (i_cast_cast_reg_1153 + phi_mul_reg_307);

assign notlhs_fu_909_p2 = ((tmp_3_fu_899_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_915_p2 = ((tmp_60_fu_882_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_Result_21_fu_972_p3 = {{1'b1}, {loc_V_2_fu_968_p1}};

assign p_Result_s_fu_886_p3 = {{1'b0}, {tmp_49_fu_878_p1}};

assign p_Val2_25_fu_946_p1 = training_data2_q0;

assign p_Val2_28_fu_1066_p3 = ((isNeg_fu_994_p3[0:0] === 1'b1) ? tmp_62_fu_1052_p1 : tmp_63_fu_1056_p4);

assign p_Val2_i_i_fu_1074_p2 = (ap_const_lv32_0 - p_Val2_28_reg_1385);

assign p_Val2_s_fu_875_p1 = p_x_assign_reg_1367;

assign rev_fu_784_p2 = (slt_fu_778_p2 ^ 1'b1);

assign sh_assign_1_cast_cast_fu_1024_p1 = $signed(sh_assign_1_fu_1012_p3);

assign sh_assign_1_cast_fu_1020_p1 = $signed(sh_assign_1_fu_1012_p3);

assign sh_assign_1_fu_1012_p3 = ((isNeg_fu_994_p3[0:0] === 1'b1) ? tmp_117_i_i_cast_fu_1008_p1 : sh_assign_fu_988_p2);

assign sh_assign_fu_988_p2 = ($signed(ap_const_lv9_181) + $signed(tmp_i_i_i_cast2_fu_984_p1));

assign slt_fu_778_p2 = (($signed(group_one_s_reg_409) < $signed(group_zero_s_reg_397)) ? 1'b1 : 1'b0);

assign tmp1_cast_fu_615_p1 = tmp1_fu_609_p2;

assign tmp1_fu_609_p2 = (k_cast1_fu_593_p1 + phi_mul1_reg_284);

assign tmp_117_i_i_cast_fu_1008_p1 = $signed(tmp_117_i_i_fu_1002_p2);

assign tmp_117_i_i_fu_1002_p2 = (ap_const_lv8_7F - loc_V_fu_958_p4);

assign tmp_118_i_i_fu_1028_p1 = $unsigned(sh_assign_1_cast_fu_1020_p1);

assign tmp_119_i_i_fu_1032_p2 = p_Result_21_fu_972_p3 >> sh_assign_1_cast_cast_fu_1024_p1;

assign tmp_121_i_i_fu_1038_p2 = tmp_i_i_fu_980_p1 << tmp_118_i_i_fu_1028_p1;

assign tmp_3_fu_899_p4 = {{p_Val2_s_fu_875_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_44_fu_772_p1 = i4_reg_421;

assign tmp_46_fu_619_p2 = (phi_mul5_reg_249 + tmp1_cast_fu_615_p1);

assign tmp_47_fu_625_p1 = tmp_46_fu_619_p2;

assign tmp_49_fu_878_p1 = p_Val2_s_fu_875_p1[30:0];

assign tmp_4_fu_921_p2 = (notrhs_fu_915_p2 | notlhs_fu_909_p2);

assign tmp_50_fu_1086_p2 = ((group_q0 == ap_const_lv32_0) ? 1'b1 : 1'b0);

assign tmp_51_fu_812_p1 = j5_reg_456;

assign tmp_52_cast_fu_635_p1 = phi_mul_reg_307;

assign tmp_52_fu_718_p2 = (phi_mul8_reg_352 + tmp_54_cast_fu_714_p1);

assign tmp_53_fu_738_p2 = (phi_mul2_reg_329 + tmp_56_cast_fu_734_p1);

assign tmp_54_cast_fu_714_p1 = phi_mul9_reg_375;

assign tmp_55_fu_639_p2 = (phi_mul7_reg_261 + tmp_52_cast_fu_635_p1);

assign tmp_56_cast_fu_734_p1 = phi_mul10_reg_386;

assign tmp_56_fu_817_p2 = (phi_mul11_reg_467 + ap_const_lv14_3D4);

assign tmp_57_fu_940_p2 = (($signed(distance_q0) < $signed(min_distance_q0)) ? 1'b1 : 1'b0);

assign tmp_58_cast_fu_840_p1 = k6_reg_478;

assign tmp_58_fu_844_p2 = (tmp_58_cast_fu_840_p1 + phi_mul4_reg_432);

assign tmp_59_fu_864_p2 = (tmp_60_cast_fu_860_p1 + phi_mul6_reg_444);

assign tmp_5_fu_510_p0 = p_Result_s_fu_886_p3;

assign tmp_60_cast_fu_860_p1 = phi_mul12_reg_489;

assign tmp_60_fu_882_p1 = p_Val2_s_fu_875_p1[22:0];

assign tmp_62_fu_1052_p1 = tmp_65_fu_1044_p3;

assign tmp_63_cast_fu_551_p1 = tmp_s_fu_545_p2;

assign tmp_63_fu_1056_p4 = {{tmp_121_i_i_fu_1038_p2[ap_const_lv32_36 : ap_const_lv32_17]}};

assign tmp_65_fu_1044_p3 = tmp_119_i_i_fu_1032_p2[ap_const_lv32_17];

assign tmp_68_cast_fu_649_p1 = tmp_55_reg_1189;

assign tmp_6_fu_927_p2 = (tmp_4_fu_921_p2 & tmp_5_fu_510_p2);

assign tmp_70_cast_fu_823_p1 = tmp_56_fu_817_p2;

assign tmp_71_cast_fu_724_p1 = tmp_52_fu_718_p2;

assign tmp_72_cast_fu_744_p1 = tmp_53_reg_1273;

assign tmp_73_cast_fu_850_p1 = tmp_58_fu_844_p2;

assign tmp_74_cast_fu_870_p1 = tmp_59_fu_864_p2;

assign tmp_fu_578_p4 = {{phi_mul3_reg_237[ap_const_lv32_8 : ap_const_lv32_7]}};

assign tmp_i_i_fu_980_p1 = p_Result_21_fu_972_p3;

assign tmp_i_i_i_cast2_fu_984_p1 = loc_V_fu_958_p4;

assign tmp_s_fu_545_p2 = (phi_mul7_reg_261 + ap_const_lv14_3D4);

assign training_data_V_address0 = tmp_47_fu_625_p1;

always @ (posedge ap_clk) begin
    i_cast_cast_reg_1153[9:5] <= 5'b00000;
    i1_cast_cast_reg_1219[9:5] <= 5'b00000;
    j2_cast_reg_1237[9:4] <= 6'b000000;
    j5_cast6_reg_1311[9:4] <= 6'b000000;
end

endmodule //dut_knn
