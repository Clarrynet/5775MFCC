// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.583500,HLS_SYN_LAT=1769863,HLS_SYN_TPT=none,HLS_SYN_MEM=99,HLS_SYN_DSP=20,HLS_SYN_FF=3183,HLS_SYN_LUT=5207}" *)

module dut (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_V_V_dout,
        strm_in_V_V_empty_n,
        strm_in_V_V_read,
        strm_out_V_V_din,
        strm_out_V_V_full_n,
        strm_out_V_V_write
);

parameter    ap_ST_st1_fsm_0 = 6'b1;
parameter    ap_ST_st2_fsm_1 = 6'b10;
parameter    ap_ST_st3_fsm_2 = 6'b100;
parameter    ap_ST_st4_fsm_3 = 6'b1000;
parameter    ap_ST_st5_fsm_4 = 6'b10000;
parameter    ap_ST_st6_fsm_5 = 6'b100000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv6_31 = 6'b110001;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv8_81 = 8'b10000001;
parameter    ap_const_lv8_1 = 8'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_V_V_dout;
input   strm_in_V_V_empty_n;
output   strm_in_V_V_read;
output  [31:0] strm_out_V_V_din;
input   strm_out_V_V_full_n;
output   strm_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg strm_in_V_V_read;
reg[31:0] strm_out_V_V_din;
reg strm_out_V_V_write;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_21;
reg    strm_in_V_V_blk_n;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_42;
wire   [0:0] exitcond_fu_158_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_53;
reg    strm_out_V_V_blk_n;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_62;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_69;
wire   [5:0] i_6_fu_130_p2;
reg   [5:0] i_6_reg_197;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_79;
wire   [13:0] tmp_s_fu_152_p2;
reg   [13:0] tmp_s_reg_202;
wire   [0:0] exitcond11_fu_124_p2;
wire   [7:0] j_5_fu_164_p2;
reg   [7:0] j_5_reg_210;
reg    ap_sig_90;
reg   [12:0] stage1_address0;
reg    stage1_ce0;
reg    stage1_we0;
wire   [31:0] stage1_d0;
wire   [31:0] stage1_q0;
wire    grp_dut_mel_into_dct_fu_113_ap_start;
wire    grp_dut_mel_into_dct_fu_113_ap_done;
wire    grp_dut_mel_into_dct_fu_113_ap_idle;
wire    grp_dut_mel_into_dct_fu_113_ap_ready;
wire   [12:0] grp_dut_mel_into_dct_fu_113_z2_address0;
wire    grp_dut_mel_into_dct_fu_113_z2_ce0;
wire   [0:0] grp_dut_mel_into_dct_fu_113_ap_return;
reg   [5:0] i_reg_91;
reg   [7:0] j_reg_102;
reg    ap_reg_grp_dut_mel_into_dct_fu_113_ap_start;
wire   [63:0] tmp_55_cast_fu_184_p1;
wire   [31:0] output_fu_189_p1;
wire   [12:0] tmp_fu_140_p3;
wire   [13:0] tmp_cast_fu_136_p1;
wire   [13:0] p_shl_cast_fu_148_p1;
wire   [13:0] tmp_38_cast_fu_175_p1;
wire   [13:0] tmp_35_fu_179_p2;
reg   [5:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'b1;
#0 ap_reg_grp_dut_mel_into_dct_fu_113_ap_start = 1'b0;
end

dut_stage1 #(
    .DataWidth( 32 ),
    .AddressRange( 6321 ),
    .AddressWidth( 13 ))
stage1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stage1_address0),
    .ce0(stage1_ce0),
    .we0(stage1_we0),
    .d0(stage1_d0),
    .q0(stage1_q0)
);

dut_mel_into_dct grp_dut_mel_into_dct_fu_113(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_mel_into_dct_fu_113_ap_start),
    .ap_done(grp_dut_mel_into_dct_fu_113_ap_done),
    .ap_idle(grp_dut_mel_into_dct_fu_113_ap_idle),
    .ap_ready(grp_dut_mel_into_dct_fu_113_ap_ready),
    .z2_address0(grp_dut_mel_into_dct_fu_113_z2_address0),
    .z2_ce0(grp_dut_mel_into_dct_fu_113_z2_ce0),
    .z2_q0(stage1_q0),
    .ap_return(grp_dut_mel_into_dct_fu_113_ap_return)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_mel_into_dct_fu_113_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond11_fu_124_p2))) begin
            ap_reg_grp_dut_mel_into_dct_fu_113_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_mel_into_dct_fu_113_ap_ready)) begin
            ap_reg_grp_dut_mel_into_dct_fu_113_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_90 & ~(exitcond_fu_158_p2 == 1'b0))) begin
        i_reg_91 <= i_6_reg_197;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_91 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond11_fu_124_p2))) begin
        j_reg_102 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(strm_in_V_V_empty_n == 1'b0))) begin
        j_reg_102 <= j_5_reg_210;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_6_reg_197 <= i_6_fu_130_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_90)) begin
        j_5_reg_210 <= j_5_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond11_fu_124_p2))) begin
        tmp_s_reg_202 <= tmp_s_fu_152_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(strm_out_V_V_full_n == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(strm_out_V_V_full_n == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_21) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_79) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_42) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_53) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_62) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_69) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        stage1_address0 = tmp_55_cast_fu_184_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        stage1_address0 = grp_dut_mel_into_dct_fu_113_z2_address0;
    end else begin
        stage1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~ap_sig_90)) begin
        stage1_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        stage1_ce0 = grp_dut_mel_into_dct_fu_113_z2_ce0;
    end else begin
        stage1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_158_p2 == 1'b0) & ~ap_sig_90)) begin
        stage1_we0 = 1'b1;
    end else begin
        stage1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_158_p2 == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st4_fsm_3))) begin
        strm_in_V_V_blk_n = strm_in_V_V_empty_n;
    end else begin
        strm_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(strm_in_V_V_empty_n == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (exitcond_fu_158_p2 == 1'b0) & ~ap_sig_90))) begin
        strm_in_V_V_read = 1'b1;
    end else begin
        strm_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) | (1'b1 == ap_sig_cseq_ST_st6_fsm_5))) begin
        strm_out_V_V_blk_n = strm_out_V_V_full_n;
    end else begin
        strm_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(strm_out_V_V_full_n == 1'b0))) begin
        strm_out_V_V_din = ap_const_lv32_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~((strm_out_V_V_full_n == 1'b0) | (1'b0 == grp_dut_mel_into_dct_fu_113_ap_done)))) begin
        strm_out_V_V_din = output_fu_189_p1;
    end else begin
        strm_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & ~((strm_out_V_V_full_n == 1'b0) | (1'b0 == grp_dut_mel_into_dct_fu_113_ap_done))) | ((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(strm_out_V_V_full_n == 1'b0)))) begin
        strm_out_V_V_write = 1'b1;
    end else begin
        strm_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond11_fu_124_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (((exitcond_fu_158_p2 == 1'b0) & ~ap_sig_90)) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else if ((~ap_sig_90 & ~(exitcond_fu_158_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(strm_in_V_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~((strm_out_V_V_full_n == 1'b0) | (1'b0 == grp_dut_mel_into_dct_fu_113_ap_done))) begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if (~(strm_out_V_V_full_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_21 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_42 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_53 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_62 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_69 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_79 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_90 = ((exitcond_fu_158_p2 == 1'b0) & (strm_in_V_V_empty_n == 1'b0));
end

assign exitcond11_fu_124_p2 = ((i_reg_91 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond_fu_158_p2 = ((j_reg_102 == ap_const_lv8_81) ? 1'b1 : 1'b0);

assign grp_dut_mel_into_dct_fu_113_ap_start = ap_reg_grp_dut_mel_into_dct_fu_113_ap_start;

assign i_6_fu_130_p2 = (i_reg_91 + ap_const_lv6_1);

assign j_5_fu_164_p2 = (j_reg_102 + ap_const_lv8_1);

assign output_fu_189_p1 = grp_dut_mel_into_dct_fu_113_ap_return;

assign p_shl_cast_fu_148_p1 = tmp_fu_140_p3;

assign stage1_d0 = strm_in_V_V_dout;

assign tmp_35_fu_179_p2 = (tmp_s_reg_202 + tmp_38_cast_fu_175_p1);

assign tmp_38_cast_fu_175_p1 = j_reg_102;

assign tmp_55_cast_fu_184_p1 = tmp_35_fu_179_p2;

assign tmp_cast_fu_136_p1 = i_reg_91;

assign tmp_fu_140_p3 = {{i_reg_91}, {ap_const_lv7_0}};

assign tmp_s_fu_152_p2 = (tmp_cast_fu_136_p1 + p_shl_cast_fu_148_p1);

endmodule //dut
