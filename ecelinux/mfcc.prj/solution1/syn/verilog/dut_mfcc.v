// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_mfcc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sound_file_address0,
        sound_file_ce0,
        sound_file_q0,
        ap_return
);

parameter    ap_ST_st1_fsm_0 = 115'b1;
parameter    ap_ST_st2_fsm_1 = 115'b10;
parameter    ap_ST_st3_fsm_2 = 115'b100;
parameter    ap_ST_st4_fsm_3 = 115'b1000;
parameter    ap_ST_st5_fsm_4 = 115'b10000;
parameter    ap_ST_st6_fsm_5 = 115'b100000;
parameter    ap_ST_st7_fsm_6 = 115'b1000000;
parameter    ap_ST_st8_fsm_7 = 115'b10000000;
parameter    ap_ST_st9_fsm_8 = 115'b100000000;
parameter    ap_ST_st10_fsm_9 = 115'b1000000000;
parameter    ap_ST_st11_fsm_10 = 115'b10000000000;
parameter    ap_ST_st12_fsm_11 = 115'b100000000000;
parameter    ap_ST_st13_fsm_12 = 115'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 115'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 115'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 115'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 115'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 115'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 115'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 115'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 115'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 115'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 115'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 115'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 115'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 115'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 115'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 115'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 115'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 115'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 115'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 115'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 115'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 115'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 115'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 115'b100000000000000000000000000000000000;
parameter    ap_ST_st37_fsm_36 = 115'b1000000000000000000000000000000000000;
parameter    ap_ST_st38_fsm_37 = 115'b10000000000000000000000000000000000000;
parameter    ap_ST_st39_fsm_38 = 115'b100000000000000000000000000000000000000;
parameter    ap_ST_st40_fsm_39 = 115'b1000000000000000000000000000000000000000;
parameter    ap_ST_st41_fsm_40 = 115'b10000000000000000000000000000000000000000;
parameter    ap_ST_st42_fsm_41 = 115'b100000000000000000000000000000000000000000;
parameter    ap_ST_st43_fsm_42 = 115'b1000000000000000000000000000000000000000000;
parameter    ap_ST_st44_fsm_43 = 115'b10000000000000000000000000000000000000000000;
parameter    ap_ST_st45_fsm_44 = 115'b100000000000000000000000000000000000000000000;
parameter    ap_ST_st46_fsm_45 = 115'b1000000000000000000000000000000000000000000000;
parameter    ap_ST_st47_fsm_46 = 115'b10000000000000000000000000000000000000000000000;
parameter    ap_ST_st48_fsm_47 = 115'b100000000000000000000000000000000000000000000000;
parameter    ap_ST_st49_fsm_48 = 115'b1000000000000000000000000000000000000000000000000;
parameter    ap_ST_st50_fsm_49 = 115'b10000000000000000000000000000000000000000000000000;
parameter    ap_ST_st51_fsm_50 = 115'b100000000000000000000000000000000000000000000000000;
parameter    ap_ST_st52_fsm_51 = 115'b1000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st53_fsm_52 = 115'b10000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st54_fsm_53 = 115'b100000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st55_fsm_54 = 115'b1000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st56_fsm_55 = 115'b10000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st57_fsm_56 = 115'b100000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st58_fsm_57 = 115'b1000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st59_fsm_58 = 115'b10000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st60_fsm_59 = 115'b100000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st61_fsm_60 = 115'b1000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st62_fsm_61 = 115'b10000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st63_fsm_62 = 115'b100000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st64_fsm_63 = 115'b1000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st65_fsm_64 = 115'b10000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st66_fsm_65 = 115'b100000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st67_fsm_66 = 115'b1000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st68_fsm_67 = 115'b10000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st69_fsm_68 = 115'b100000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st70_fsm_69 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st71_fsm_70 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st72_fsm_71 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st73_fsm_72 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st74_fsm_73 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st75_fsm_74 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st76_fsm_75 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st77_fsm_76 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st78_fsm_77 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st79_fsm_78 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st80_fsm_79 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st81_fsm_80 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st82_fsm_81 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st83_fsm_82 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st84_fsm_83 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st85_fsm_84 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st86_fsm_85 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st87_fsm_86 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st88_fsm_87 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st89_fsm_88 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st90_fsm_89 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st91_fsm_90 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st92_fsm_91 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st93_fsm_92 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st94_fsm_93 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st95_fsm_94 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st96_fsm_95 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st97_fsm_96 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st98_fsm_97 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st99_fsm_98 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st100_fsm_99 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st101_fsm_100 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st102_fsm_101 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st103_fsm_102 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st104_fsm_103 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st105_fsm_104 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st106_fsm_105 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st107_fsm_106 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st108_fsm_107 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st109_fsm_108 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st110_fsm_109 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st111_fsm_110 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st112_fsm_111 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st113_fsm_112 = 115'b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st114_fsm_113 = 115'b100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_ST_st115_fsm_114 = 115'b1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_24 = 32'b100100;
parameter    ap_const_lv32_46 = 32'b1000110;
parameter    ap_const_lv32_4F = 32'b1001111;
parameter    ap_const_lv32_53 = 32'b1010011;
parameter    ap_const_lv32_69 = 32'b1101001;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_4B = 32'b1001011;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv32_29 = 32'b101001;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_35 = 32'b110101;
parameter    ap_const_lv32_37 = 32'b110111;
parameter    ap_const_lv32_3C = 32'b111100;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv32_42 = 32'b1000010;
parameter    ap_const_lv32_63 = 32'b1100011;
parameter    ap_const_lv32_65 = 32'b1100101;
parameter    ap_const_lv32_66 = 32'b1100110;
parameter    ap_const_lv32_6E = 32'b1101110;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_36 = 32'b110110;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_71 = 32'b1110001;
parameter    ap_const_lv32_72 = 32'b1110010;
parameter    ap_const_lv32_64 = 32'b1100100;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv32_3F800000 = 32'b111111100000000000000000000000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_25 = 32'b100101;
parameter    ap_const_lv32_47 = 32'b1000111;
parameter    ap_const_lv32_6A = 32'b1101010;
parameter    ap_const_lv32_40000000 = 32'b1000000000000000000000000000000;
parameter    ap_const_lv32_40490FD8 = 32'b1000000010010010000111111011000;
parameter    ap_const_lv32_43 = 32'b1000011;
parameter    ap_const_lv32_4C = 32'b1001100;
parameter    ap_const_lv32_50 = 32'b1010000;
parameter    ap_const_lv32_42200000 = 32'b1000010001000000000000000000000;
parameter    ap_const_lv32_54 = 32'b1010100;
parameter    ap_const_lv14_31 = 14'b110001;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv6_31 = 6'b110001;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv13_64 = 13'b1100100;
parameter    ap_const_lv8_1 = 8'b1;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv8_81 = 8'b10000001;
parameter    ap_const_lv10_31 = 10'b110001;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv32_3E64F92E = 32'b111110011001001111100100101110;
parameter    ap_const_lv32_3EA1E89B = 32'b111110101000011110100010011011;
parameter    ap_const_lv16_0 = 16'b0000000000000000;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] sound_file_address0;
output   sound_file_ce0;
input  [31:0] sound_file_q0;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sound_file_ce0;
reg[0:0] ap_return;

(* fsm_encoding = "none" *) reg   [114:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_132;
wire   [7:0] hamming_address0;
reg    hamming_ce0;
wire   [31:0] hamming_q0;
reg   [13:0] xn_input_M_real_address0;
reg    xn_input_M_real_ce0;
reg    xn_input_M_real_we0;
wire   [31:0] xn_input_M_real_q0;
reg   [13:0] xk_output_M_real_address0;
reg    xk_output_M_real_ce0;
reg    xk_output_M_real_we0;
wire   [31:0] xk_output_M_real_d0;
wire   [31:0] xk_output_M_real_q0;
reg   [13:0] xk_output_M_imag_address0;
reg    xk_output_M_imag_ce0;
reg    xk_output_M_imag_we0;
wire   [31:0] xk_output_M_imag_d0;
wire   [31:0] xk_output_M_imag_q0;
wire   [11:0] melfb_address0;
reg    melfb_ce0;
wire   [31:0] melfb_q0;
wire   [31:0] grp_fu_682_p2;
reg   [31:0] reg_717;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_193;
reg    ap_sig_cseq_ST_st37_fsm_36;
reg    ap_sig_200;
reg    ap_sig_cseq_ST_st71_fsm_70;
reg    ap_sig_208;
reg    ap_sig_cseq_ST_st80_fsm_79;
reg    ap_sig_216;
reg    ap_sig_cseq_ST_st84_fsm_83;
reg    ap_sig_224;
reg    ap_sig_cseq_ST_st106_fsm_105;
reg    ap_sig_232;
wire   [31:0] grp_fu_675_p2;
reg   [31:0] reg_725;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_242;
reg    ap_sig_cseq_ST_st76_fsm_75;
reg    ap_sig_249;
wire   [13:0] next_mul3_fu_731_p2;
reg   [13:0] next_mul3_reg_1251;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_259;
wire   [12:0] i_cast_fu_737_p1;
reg   [12:0] i_cast_reg_1256;
wire   [8:0] i_1_fu_747_p2;
reg   [8:0] i_1_reg_1264;
wire   [0:0] exitcond_fu_741_p2;
reg   [31:0] hamming_load_reg_1274;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_277;
wire   [5:0] j_1_fu_764_p2;
reg   [5:0] j_1_reg_1282;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_286;
wire   [12:0] next_mul_fu_770_p2;
reg   [12:0] next_mul_reg_1287;
wire   [0:0] exitcond2_fu_758_p2;
wire   [13:0] tmp_26_fu_790_p2;
reg   [13:0] tmp_26_reg_1297;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_303;
wire   [13:0] next_mul5_fu_800_p2;
reg   [13:0] next_mul5_reg_1307;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_312;
wire   [8:0] i_2_fu_812_p2;
reg   [8:0] i_2_reg_1315;
wire   [14:0] tmp_5_cast_fu_818_p1;
reg   [14:0] tmp_5_cast_reg_1320;
wire   [0:0] exitcond1_fu_806_p2;
wire   [5:0] j_2_fu_828_p2;
reg   [5:0] j_2_reg_1328;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_328;
wire   [14:0] tmp_33_fu_850_p2;
reg   [14:0] tmp_33_reg_1333;
wire   [0:0] exitcond3_fu_822_p2;
wire   [7:0] tmp_2_fu_870_p2;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_344;
wire   [7:0] tmp_12_fu_887_p2;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_353;
wire   [5:0] i_4_fu_910_p2;
reg   [5:0] i_4_reg_1362;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_362;
wire    fft_config_data_V_empty_n;
wire   [0:0] exitcond4_fu_904_p2;
wire    fft_config_data_V_full_n;
reg    ap_sig_379;
wire   [14:0] tmp_47_cast_fu_937_p1;
reg   [14:0] tmp_47_cast_reg_1367;
wire   [8:0] j_3_fu_947_p2;
reg   [8:0] j_3_reg_1376;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_392;
wire   [0:0] exitcond6_fu_941_p2;
wire   [8:0] j_4_fu_991_p2;
reg   [8:0] j_4_reg_1389;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_406;
wire   [14:0] tmp_45_fu_1006_p2;
reg   [14:0] tmp_45_reg_1394;
wire   [0:0] exitcond8_fu_985_p2;
wire   [5:0] frame_1_fu_1046_p2;
reg   [5:0] frame_1_reg_1407;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_422;
wire   [9:0] tmp_17_cast_fu_1052_p1;
reg   [9:0] tmp_17_cast_reg_1412;
wire   [0:0] exitcond5_fu_1040_p2;
wire   [7:0] i_3_fu_1062_p2;
reg   [7:0] i_3_reg_1422;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_436;
wire   [0:0] exitcond7_fu_1056_p2;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_451;
wire   [31:0] grp_fu_690_p2;
reg   [31:0] tmp_21_reg_1449;
wire   [9:0] next_mul7_fu_1087_p2;
reg   [9:0] next_mul7_reg_1454;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_463;
wire   [7:0] j8_cast7_fu_1093_p1;
reg   [7:0] j8_cast7_reg_1459;
wire   [4:0] j_5_fu_1103_p2;
reg   [4:0] j_5_reg_1467;
wire   [11:0] p_shl_fu_1109_p3;
reg   [11:0] p_shl_reg_1472;
wire   [0:0] exitcond9_fu_1097_p2;
wire   [7:0] x_1_fu_1123_p2;
reg   [7:0] x_1_reg_1480;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_481;
wire   [0:0] exitcond11_fu_1117_p2;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_496;
wire   [31:0] z2_q0;
reg    ap_sig_cseq_ST_st42_fsm_41;
reg    ap_sig_506;
wire   [9:0] tmp_47_fu_1153_p2;
reg   [9:0] tmp_47_reg_1510;
reg    ap_sig_cseq_ST_st48_fsm_47;
reg    ap_sig_515;
wire   [31:0] grp_fu_711_p2;
reg   [31:0] tmp_i_reg_1515;
reg    ap_sig_cseq_ST_st54_fsm_53;
reg    ap_sig_524;
wire   [9:0] next_mul1_fu_1162_p2;
reg   [9:0] next_mul1_reg_1520;
reg    ap_sig_cseq_ST_st56_fsm_55;
reg    ap_sig_533;
wire   [31:0] k_cast3_fu_1168_p1;
wire   [4:0] k_1_fu_1179_p2;
reg   [4:0] k_1_reg_1533;
wire   [0:0] tmp_24_fu_1185_p2;
reg   [0:0] tmp_24_reg_1538;
wire   [0:0] exitcond10_fu_1173_p2;
wire   [31:0] p_s_fu_1191_p3;
reg   [31:0] p_s_reg_1543;
reg    ap_sig_cseq_ST_st61_fsm_60;
reg    ap_sig_551;
wire   [31:0] grp_fu_708_p1;
reg   [31:0] tmp_25_reg_1548;
wire   [31:0] n1_cast2_fu_1198_p1;
reg    ap_sig_cseq_ST_st62_fsm_61;
reg    ap_sig_562;
wire   [4:0] n_fu_1209_p2;
reg   [4:0] n_reg_1561;
wire   [9:0] next_mul9_fu_1215_p2;
reg   [9:0] next_mul9_reg_1566;
wire   [0:0] exitcond12_fu_1203_p2;
wire   [9:0] tmp_49_fu_1221_p2;
reg   [9:0] tmp_49_reg_1571;
wire   [9:0] tmp_48_fu_1226_p2;
reg   [9:0] tmp_48_reg_1576;
reg   [31:0] tmp_34_reg_1581;
reg    ap_sig_cseq_ST_st67_fsm_66;
reg    ap_sig_583;
wire   [31:0] grp_fu_703_p2;
reg   [31:0] p_x_assign_2_reg_1586;
reg    ap_sig_cseq_ST_st100_fsm_99;
reg    ap_sig_592;
reg    ap_sig_cseq_ST_st102_fsm_101;
reg    ap_sig_601;
wire    grp_dut_sinf_or_cosf_fu_654_ap_done;
wire   [31:0] grp_dut_sinf_or_cosf_fu_654_ap_return;
reg   [31:0] tmp_i_i_i_i_reg_1596;
wire   [31:0] z_q0;
reg    ap_sig_cseq_ST_st103_fsm_102;
reg    ap_sig_616;
reg    ap_sig_cseq_ST_st111_fsm_110;
reg    ap_sig_624;
reg   [7:0] xn_address0;
reg    xn_ce0;
reg    xn_we0;
reg   [63:0] xn_d0;
reg   [7:0] xk_address0;
reg    xk_ce0;
reg    xk_we0;
wire   [63:0] xk_q0;
reg   [13:0] M_address0;
reg    M_ce0;
reg    M_we0;
wire   [31:0] M_q0;
reg   [9:0] z_address0;
reg    z_ce0;
reg    z_we0;
reg   [7:0] z2_address0;
reg    z2_ce0;
reg    z2_we0;
reg   [9:0] X_address0;
reg    X_ce0;
reg    X_we0;
wire   [31:0] X_q0;
wire    grp_dut_knn_fu_647_ap_start;
wire    grp_dut_knn_fu_647_ap_done;
wire    grp_dut_knn_fu_647_ap_idle;
wire    grp_dut_knn_fu_647_ap_ready;
wire   [9:0] grp_dut_knn_fu_647_input_r_address0;
wire    grp_dut_knn_fu_647_input_r_ce0;
wire   [0:0] grp_dut_knn_fu_647_ap_return;
wire    grp_dut_sinf_or_cosf_fu_654_ap_start;
wire    grp_dut_sinf_or_cosf_fu_654_ap_idle;
wire    grp_dut_sinf_or_cosf_fu_654_ap_ready;
wire    grp_fft_config1_s_fu_667_ap_start;
reg    grp_fft_config1_s_fu_667_ap_ce;
wire    grp_fft_config1_s_fu_667_ap_done;
wire    grp_fft_config1_s_fu_667_ap_idle;
wire    grp_fft_config1_s_fu_667_ap_ready;
wire   [7:0] grp_fft_config1_s_fu_667_xn_address0;
wire    grp_fft_config1_s_fu_667_xn_ce0;
wire    grp_fft_config1_s_fu_667_xn_we0;
wire   [63:0] grp_fft_config1_s_fu_667_xn_d0;
wire   [7:0] grp_fft_config1_s_fu_667_xn_address1;
wire    grp_fft_config1_s_fu_667_xn_ce1;
wire    grp_fft_config1_s_fu_667_xn_we1;
wire   [63:0] grp_fft_config1_s_fu_667_xn_d1;
wire   [7:0] grp_fft_config1_s_fu_667_xk_address0;
wire    grp_fft_config1_s_fu_667_xk_ce0;
wire    grp_fft_config1_s_fu_667_xk_we0;
wire   [63:0] grp_fft_config1_s_fu_667_xk_d0;
wire   [7:0] grp_fft_config1_s_fu_667_xk_address1;
wire    grp_fft_config1_s_fu_667_xk_ce1;
wire    grp_fft_config1_s_fu_667_xk_we1;
wire   [63:0] grp_fft_config1_s_fu_667_xk_d1;
wire   [7:0] grp_fft_config1_s_fu_667_status_data_V_din;
wire    grp_fft_config1_s_fu_667_status_data_V_write;
wire    grp_fft_config1_s_fu_667_config_ch_data_V_read;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_739;
reg   [8:0] i_reg_385;
reg   [13:0] phi_mul2_reg_396;
reg   [5:0] j_reg_408;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_760;
reg   [12:0] phi_mul_reg_419;
reg   [8:0] i1_reg_430;
reg   [13:0] phi_mul4_reg_441;
reg   [5:0] j2_reg_453;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_781;
reg   [7:0] tmp_1_reg_464;
wire   [0:0] tmp_10_fu_881_p2;
reg   [7:0] tmp_11_reg_475;
wire   [0:0] tmp_15_fu_898_p2;
reg   [5:0] i4_reg_486;
reg   [8:0] j5_reg_497;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_811;
reg   [8:0] j6_reg_509;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_822;
reg   [5:0] frame_reg_520;
reg   [7:0] i7_reg_532;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_837;
reg   [4:0] j8_reg_544;
reg    ap_sig_cseq_ST_st55_fsm_54;
reg    ap_sig_846;
reg   [9:0] phi_mul6_reg_555;
reg   [31:0] p_x_assign_reg_567;
reg   [7:0] x_reg_579;
reg   [4:0] k_reg_590;
reg    ap_sig_cseq_ST_st114_fsm_113;
reg    ap_sig_865;
reg   [9:0] phi_mul1_reg_601;
reg   [31:0] sum9_reg_613;
reg   [4:0] n1_reg_625;
reg   [9:0] phi_mul8_reg_636;
reg    ap_reg_grp_dut_knn_fu_647_ap_start;
reg    ap_sig_cseq_ST_st115_fsm_114;
reg    ap_sig_886;
reg    ap_reg_grp_dut_sinf_or_cosf_fu_654_ap_start;
reg    ap_sig_cseq_ST_st101_fsm_100;
reg    ap_sig_903;
reg    ap_reg_grp_fft_config1_s_fu_667_ap_start;
wire   [63:0] tmp_4_fu_753_p1;
wire   [63:0] tmp_9_fu_781_p1;
wire   [63:0] tmp_41_cast_fu_796_p1;
wire   [63:0] tmp_45_cast_fu_861_p1;
wire   [63:0] tmp_44_cast_fu_866_p1;
wire   [63:0] tmp_3_fu_876_p1;
wire   [63:0] tmp_13_fu_893_p1;
wire   [63:0] tmp_48_cast_fu_962_p1;
wire   [63:0] tmp_18_fu_967_p1;
wire   [63:0] tmp_23_fu_997_p1;
wire   [63:0] tmp_51_cast_fu_1011_p1;
wire   [63:0] tmp_44_fu_1076_p1;
wire   [63:0] tmp_19_fu_1082_p1;
wire   [63:0] tmp_28_fu_1143_p1;
wire   [63:0] tmp_29_fu_1148_p1;
wire   [63:0] tmp_53_cast_fu_1158_p1;
wire   [63:0] tmp_57_cast_fu_1231_p1;
wire   [63:0] tmp_55_cast_fu_1235_p1;
wire   [63:0] xn_M_imag_addr_23941_part_set_fu_976_p3;
reg   [31:0] grp_fu_675_p0;
reg   [31:0] grp_fu_675_p1;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_1005;
reg    ap_sig_cseq_ST_st38_fsm_37;
reg    ap_sig_1012;
reg    ap_sig_cseq_ST_st72_fsm_71;
reg    ap_sig_1019;
reg    ap_sig_cseq_ST_st107_fsm_106;
reg    ap_sig_1027;
reg   [31:0] grp_fu_682_p0;
reg   [31:0] grp_fu_682_p1;
reg    ap_sig_cseq_ST_st68_fsm_67;
reg    ap_sig_1039;
reg    ap_sig_cseq_ST_st77_fsm_76;
reg    ap_sig_1046;
reg    ap_sig_cseq_ST_st81_fsm_80;
reg    ap_sig_1053;
reg    ap_sig_cseq_ST_st85_fsm_84;
reg    ap_sig_1065;
reg   [31:0] grp_fu_708_p0;
wire   [12:0] tmp_8_fu_776_p2;
wire   [13:0] tmp_6_cast_fu_786_p1;
wire   [13:0] tmp_32_fu_838_p3;
wire   [14:0] tmp_43_cast_fu_846_p1;
wire   [13:0] tmp_14_cast_fu_834_p1;
wire   [13:0] tmp_40_fu_855_p2;
wire   [13:0] tmp_41_fu_929_p3;
wire   [14:0] tmp_18_cast_fu_953_p1;
wire   [14:0] tmp_42_fu_957_p2;
wire   [31:0] xn_input_M_real_load_toint_fu_972_p1;
wire   [14:0] tmp_23_cast_fu_1002_p1;
wire   [31:0] tmp_46_fu_1016_p1;
wire   [31:0] xk_M_imag_load_new_fu_1025_p4;
wire   [13:0] tmp_43_fu_1068_p3;
wire   [7:0] tmp1_fu_1129_p2;
wire   [11:0] tmp1_cast_fu_1134_p1;
wire   [11:0] tmp_27_fu_1138_p2;
reg   [0:0] ap_return_preg;
reg   [114:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 115'b1;
#0 ap_reg_grp_dut_knn_fu_647_ap_start = 1'b0;
#0 ap_reg_grp_dut_sinf_or_cosf_fu_654_ap_start = 1'b0;
#0 ap_reg_grp_fft_config1_s_fu_667_ap_start = 1'b0;
#0 ap_return_preg = 1'b0;
end

dut_mfcc_hamming #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hamming_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hamming_address0),
    .ce0(hamming_ce0),
    .q0(hamming_q0)
);

dut_mfcc_xn_input_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
xn_input_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xn_input_M_real_address0),
    .ce0(xn_input_M_real_ce0),
    .we0(xn_input_M_real_we0),
    .d0(M_q0),
    .q0(xn_input_M_real_q0)
);

dut_mfcc_xn_input_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
xk_output_M_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xk_output_M_real_address0),
    .ce0(xk_output_M_real_ce0),
    .we0(xk_output_M_real_we0),
    .d0(xk_output_M_real_d0),
    .q0(xk_output_M_real_q0)
);

dut_mfcc_xn_input_M_real #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
xk_output_M_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xk_output_M_imag_address0),
    .ce0(xk_output_M_imag_ce0),
    .we0(xk_output_M_imag_we0),
    .d0(xk_output_M_imag_d0),
    .q0(xk_output_M_imag_q0)
);

dut_mfcc_melfb #(
    .DataWidth( 32 ),
    .AddressRange( 2580 ),
    .AddressWidth( 12 ))
melfb_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(melfb_address0),
    .ce0(melfb_ce0),
    .q0(melfb_q0)
);

dut_mfcc_xn #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
xn_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xn_address0),
    .ce0(xn_ce0),
    .we0(xn_we0),
    .d0(xn_d0)
);

dut_mfcc_xk #(
    .DataWidth( 64 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
xk_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(xk_address0),
    .ce0(xk_ce0),
    .we0(xk_we0),
    .d0(ap_const_lv64_0),
    .q0(xk_q0)
);

dut_mfcc_M #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
M_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(M_address0),
    .ce0(M_ce0),
    .we0(M_we0),
    .d0(grp_fu_682_p2),
    .q0(M_q0)
);

dut_mfcc_z #(
    .DataWidth( 32 ),
    .AddressRange( 980 ),
    .AddressWidth( 10 ))
z_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z_address0),
    .ce0(z_ce0),
    .we0(z_we0),
    .d0(tmp_i_reg_1515),
    .q0(z_q0)
);

dut_mfcc_z2 #(
    .DataWidth( 32 ),
    .AddressRange( 129 ),
    .AddressWidth( 8 ))
z2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_address0),
    .ce0(z2_ce0),
    .we0(z2_we0),
    .d0(reg_725),
    .q0(z2_q0)
);

dut_mfcc_z #(
    .DataWidth( 32 ),
    .AddressRange( 980 ),
    .AddressWidth( 10 ))
X_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(X_address0),
    .ce0(X_ce0),
    .we0(X_we0),
    .d0(grp_fu_682_p2),
    .q0(X_q0)
);

dut_knn grp_dut_knn_fu_647(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_knn_fu_647_ap_start),
    .ap_done(grp_dut_knn_fu_647_ap_done),
    .ap_idle(grp_dut_knn_fu_647_ap_idle),
    .ap_ready(grp_dut_knn_fu_647_ap_ready),
    .input_r_address0(grp_dut_knn_fu_647_input_r_address0),
    .input_r_ce0(grp_dut_knn_fu_647_input_r_ce0),
    .input_r_q0(X_q0),
    .ap_return(grp_dut_knn_fu_647_ap_return)
);

dut_sinf_or_cosf grp_dut_sinf_or_cosf_fu_654(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_sinf_or_cosf_fu_654_ap_start),
    .ap_done(grp_dut_sinf_or_cosf_fu_654_ap_done),
    .ap_idle(grp_dut_sinf_or_cosf_fu_654_ap_idle),
    .ap_ready(grp_dut_sinf_or_cosf_fu_654_ap_ready),
    .t_in(p_x_assign_2_reg_1586),
    .ap_return(grp_dut_sinf_or_cosf_fu_654_ap_return)
);

fft_config1_s grp_fft_config1_s_fu_667(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_fft_config1_s_fu_667_ap_start),
    .ap_ce(grp_fft_config1_s_fu_667_ap_ce),
    .ap_done(grp_fft_config1_s_fu_667_ap_done),
    .ap_idle(grp_fft_config1_s_fu_667_ap_idle),
    .ap_ready(grp_fft_config1_s_fu_667_ap_ready),
    .xn_address0(grp_fft_config1_s_fu_667_xn_address0),
    .xn_ce0(grp_fft_config1_s_fu_667_xn_ce0),
    .xn_we0(grp_fft_config1_s_fu_667_xn_we0),
    .xn_d0(grp_fft_config1_s_fu_667_xn_d0),
    .xn_q0(ap_const_lv64_0),
    .xn_address1(grp_fft_config1_s_fu_667_xn_address1),
    .xn_ce1(grp_fft_config1_s_fu_667_xn_ce1),
    .xn_we1(grp_fft_config1_s_fu_667_xn_we1),
    .xn_d1(grp_fft_config1_s_fu_667_xn_d1),
    .xn_q1(ap_const_lv64_0),
    .xk_address0(grp_fft_config1_s_fu_667_xk_address0),
    .xk_ce0(grp_fft_config1_s_fu_667_xk_ce0),
    .xk_we0(grp_fft_config1_s_fu_667_xk_we0),
    .xk_d0(grp_fft_config1_s_fu_667_xk_d0),
    .xk_q0(ap_const_lv64_0),
    .xk_address1(grp_fft_config1_s_fu_667_xk_address1),
    .xk_ce1(grp_fft_config1_s_fu_667_xk_ce1),
    .xk_we1(grp_fft_config1_s_fu_667_xk_we1),
    .xk_d1(grp_fft_config1_s_fu_667_xk_d1),
    .xk_q1(ap_const_lv64_0),
    .status_data_V_din(grp_fft_config1_s_fu_667_status_data_V_din),
    .status_data_V_full_n(1'b1),
    .status_data_V_write(grp_fft_config1_s_fu_667_status_data_V_write),
    .config_ch_data_V_dout(ap_const_lv16_0),
    .config_ch_data_V_empty_n(1'b1),
    .config_ch_data_V_read(grp_fft_config1_s_fu_667_config_ch_data_V_read)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_675_p0),
    .din1(grp_fu_675_p1),
    .ce(1'b1),
    .dout(grp_fu_675_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_682_p0),
    .din1(grp_fu_682_p1),
    .ce(1'b1),
    .dout(grp_fu_682_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(xk_output_M_imag_q0),
    .din1(xk_output_M_imag_q0),
    .ce(1'b1),
    .dout(grp_fu_690_p2)
);

dut_fdiv_32ns_32ns_32_16 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fdiv_32ns_32ns_32_16_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_717),
    .din1(ap_const_lv32_42200000),
    .ce(1'b1),
    .dout(grp_fu_703_p2)
);

dut_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_sitofp_32ns_32_6_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_708_p0),
    .ce(1'b1),
    .dout(grp_fu_708_p1)
);

dut_flog_32ns_32ns_32_13_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_flog_32ns_32ns_32_13_full_dsp_U28(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_const_lv32_0),
    .din1(p_x_assign_reg_567),
    .ce(1'b1),
    .dout(grp_fu_711_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_knn_fu_647_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & ~(1'b0 == exitcond5_fu_1040_p2))) begin
            ap_reg_grp_dut_knn_fu_647_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_knn_fu_647_ap_ready)) begin
            ap_reg_grp_dut_knn_fu_647_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_sinf_or_cosf_fu_654_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st101_fsm_100)) begin
            ap_reg_grp_dut_sinf_or_cosf_fu_654_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_sinf_or_cosf_fu_654_ap_ready)) begin
            ap_reg_grp_dut_sinf_or_cosf_fu_654_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_fft_config1_s_fu_667_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond6_fu_941_p2))) begin
            ap_reg_grp_fft_config1_s_fu_667_ap_start <= 1'b1;
        end else if ((1'b1 == grp_fft_config1_s_fu_667_ap_ready)) begin
            ap_reg_grp_fft_config1_s_fu_667_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st115_fsm_114) & ~(1'b0 == grp_dut_knn_fu_647_ap_done))) begin
            ap_return_preg <= grp_dut_knn_fu_647_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st56_fsm_55) & ~(1'b0 == exitcond10_fu_1173_p2))) begin
        frame_reg_520 <= frame_1_reg_1407;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~ap_sig_379 & ~(1'b0 == exitcond4_fu_904_p2))) begin
        frame_reg_520 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond3_fu_822_p2))) begin
        i1_reg_430 <= i_2_reg_1315;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_741_p2 == 1'b0))) begin
        i1_reg_430 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == tmp_15_fu_898_p2))) begin
        i4_reg_486 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & ~(1'b0 == exitcond8_fu_985_p2))) begin
        i4_reg_486 <= i_4_reg_1362;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (1'b0 == exitcond5_fu_1040_p2))) begin
        i7_reg_532 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        i7_reg_532 <= i_3_reg_1422;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_758_p2))) begin
        i_reg_385 <= i_1_reg_1264;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_385 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond1_fu_806_p2))) begin
        j2_reg_453 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        j2_reg_453 <= j_2_reg_1328;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        j5_reg_497 <= j_3_reg_1376;
    end else if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == exitcond4_fu_904_p2) & ~ap_sig_379)) begin
        j5_reg_497 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        j6_reg_509 <= j_4_reg_1389;
    end else if (((1'b1 == ap_sig_cseq_ST_st17_fsm_16) & ~(1'b0 == grp_fft_config1_s_fu_667_ap_done))) begin
        j6_reg_509 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond7_fu_1056_p2))) begin
        j8_reg_544 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        j8_reg_544 <= j_5_reg_1467;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_reg_408 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        j_reg_408 <= j_1_reg_1282;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & ~(1'b0 == exitcond9_fu_1097_p2))) begin
        k_reg_590 <= ap_const_lv5_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        k_reg_590 <= k_1_reg_1533;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        n1_reg_625 <= n_reg_1561;
    end else if ((1'b1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        n1_reg_625 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (1'b0 == exitcond9_fu_1097_p2))) begin
        p_x_assign_reg_567 <= ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        p_x_assign_reg_567 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & ~(1'b0 == exitcond9_fu_1097_p2))) begin
        phi_mul1_reg_601 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        phi_mul1_reg_601 <= next_mul1_reg_1520;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond2_fu_758_p2))) begin
        phi_mul2_reg_396 <= next_mul3_reg_1251;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        phi_mul2_reg_396 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond3_fu_822_p2))) begin
        phi_mul4_reg_441 <= next_mul5_reg_1307;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond_fu_741_p2 == 1'b0))) begin
        phi_mul4_reg_441 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond7_fu_1056_p2))) begin
        phi_mul6_reg_555 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        phi_mul6_reg_555 <= next_mul7_reg_1454;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        phi_mul8_reg_636 <= next_mul9_reg_1566;
    end else if ((1'b1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        phi_mul8_reg_636 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        phi_mul_reg_419 <= ap_const_lv13_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        phi_mul_reg_419 <= next_mul_reg_1287;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st111_fsm_110)) begin
        sum9_reg_613 <= grp_fu_675_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        sum9_reg_613 <= ap_const_lv32_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == tmp_10_fu_881_p2))) begin
        tmp_11_reg_475 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & (1'b0 == tmp_15_fu_898_p2))) begin
        tmp_11_reg_475 <= tmp_12_fu_887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond1_fu_806_p2))) begin
        tmp_1_reg_464 <= ap_const_lv8_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == tmp_10_fu_881_p2))) begin
        tmp_1_reg_464 <= tmp_2_fu_870_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (1'b0 == exitcond9_fu_1097_p2))) begin
        x_reg_579 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st42_fsm_41)) begin
        x_reg_579 <= x_1_reg_1480;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        frame_1_reg_1407 <= frame_1_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        hamming_load_reg_1274 <= hamming_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_1264 <= i_1_fu_747_p2;
        i_cast_reg_1256[8 : 0] <= i_cast_fu_737_p1[8 : 0];
        next_mul3_reg_1251 <= next_mul3_fu_731_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        i_2_reg_1315 <= i_2_fu_812_p2;
        next_mul5_reg_1307 <= next_mul5_fu_800_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        i_3_reg_1422 <= i_3_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~ap_sig_379)) begin
        i_4_reg_1362 <= i_4_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        j8_cast7_reg_1459[4 : 0] <= j8_cast7_fu_1093_p1[4 : 0];
        j_5_reg_1467 <= j_5_fu_1103_p2;
        next_mul7_reg_1454 <= next_mul7_fu_1087_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_1_reg_1282 <= j_1_fu_764_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        j_2_reg_1328 <= j_2_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        j_3_reg_1376 <= j_3_fu_947_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        j_4_reg_1389 <= j_4_fu_991_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        k_1_reg_1533 <= k_1_fu_1179_p2;
        next_mul1_reg_1520 <= next_mul1_fu_1162_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        n_reg_1561 <= n_fu_1209_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st62_fsm_61) & (1'b0 == exitcond12_fu_1203_p2))) begin
        next_mul9_reg_1566 <= next_mul9_fu_1215_p2;
        tmp_49_reg_1571 <= tmp_49_fu_1221_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond2_fu_758_p2))) begin
        next_mul_reg_1287 <= next_mul_fu_770_p2;
        tmp_26_reg_1297 <= tmp_26_fu_790_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st61_fsm_60)) begin
        p_s_reg_1543[0] <= p_s_fu_1191_p3[0];
p_s_reg_1543[2] <= p_s_fu_1191_p3[2];
p_s_reg_1543[5 : 4] <= p_s_fu_1191_p3[5 : 4];
p_s_reg_1543[8 : 7] <= p_s_fu_1191_p3[8 : 7];
p_s_reg_1543[12] <= p_s_fu_1191_p3[12];
p_s_reg_1543[16] <= p_s_fu_1191_p3[16];
p_s_reg_1543[18] <= p_s_fu_1191_p3[18];
p_s_reg_1543[23 : 22] <= p_s_fu_1191_p3[23 : 22];
        tmp_25_reg_1548 <= grp_fu_708_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st32_fsm_31) & (1'b0 == exitcond9_fu_1097_p2))) begin
        p_shl_reg_1472[11 : 7] <= p_shl_fu_1109_p3[11 : 7];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st100_fsm_99)) begin
        p_x_assign_2_reg_1586 <= grp_fu_703_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) | (1'b1 == ap_sig_cseq_ST_st37_fsm_36) | (1'b1 == ap_sig_cseq_ST_st71_fsm_70) | (1'b1 == ap_sig_cseq_ST_st80_fsm_79) | (1'b1 == ap_sig_cseq_ST_st84_fsm_83) | (1'b1 == ap_sig_cseq_ST_st106_fsm_105))) begin
        reg_717 <= grp_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st30_fsm_29) | (1'b1 == ap_sig_cseq_ST_st76_fsm_75))) begin
        reg_725 <= grp_fu_675_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) & (1'b0 == exitcond5_fu_1040_p2))) begin
        tmp_17_cast_reg_1412[5 : 0] <= tmp_17_cast_fu_1052_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        tmp_21_reg_1449 <= grp_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st56_fsm_55) & (1'b0 == exitcond10_fu_1173_p2))) begin
        tmp_24_reg_1538 <= tmp_24_fu_1185_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == exitcond3_fu_822_p2))) begin
        tmp_33_reg_1333 <= tmp_33_fu_850_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st67_fsm_66)) begin
        tmp_34_reg_1581 <= grp_fu_708_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st18_fsm_17) & (1'b0 == exitcond8_fu_985_p2))) begin
        tmp_45_reg_1394 <= tmp_45_fu_1006_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == exitcond4_fu_904_p2) & ~ap_sig_379)) begin
        tmp_47_cast_reg_1367[13 : 8] <= tmp_47_cast_fu_937_p1[13 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st48_fsm_47)) begin
        tmp_47_reg_1510 <= tmp_47_fu_1153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st62_fsm_61) & ~(1'b0 == exitcond12_fu_1203_p2))) begin
        tmp_48_reg_1576 <= tmp_48_fu_1226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond1_fu_806_p2))) begin
        tmp_5_cast_reg_1320[8 : 0] <= tmp_5_cast_fu_818_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st102_fsm_101) & ~(1'b0 == grp_dut_sinf_or_cosf_fu_654_ap_done))) begin
        tmp_i_i_i_i_reg_1596 <= grp_dut_sinf_or_cosf_fu_654_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st54_fsm_53)) begin
        tmp_i_reg_1515 <= grp_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        x_1_reg_1480 <= x_1_fu_1123_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_address0 = tmp_41_cast_fu_796_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        M_address0 = tmp_45_cast_fu_861_p1;
    end else begin
        M_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        M_ce0 = 1'b1;
    end else begin
        M_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_we0 = 1'b1;
    end else begin
        M_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        X_address0 = tmp_55_cast_fu_1235_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st115_fsm_114)) begin
        X_address0 = grp_dut_knn_fu_647_input_r_address0;
    end else begin
        X_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        X_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st115_fsm_114)) begin
        X_ce0 = grp_dut_knn_fu_647_input_r_ce0;
    end else begin
        X_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st114_fsm_113)) begin
        X_we0 = 1'b1;
    end else begin
        X_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st115_fsm_114) & ~(1'b0 == grp_dut_knn_fu_647_ap_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st115_fsm_114) & ~(1'b0 == grp_dut_knn_fu_647_ap_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st115_fsm_114) & ~(1'b0 == grp_dut_knn_fu_647_ap_done))) begin
        ap_return = grp_dut_knn_fu_647_ap_return;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (ap_sig_592) begin
        ap_sig_cseq_ST_st100_fsm_99 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st100_fsm_99 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_903) begin
        ap_sig_cseq_ST_st101_fsm_100 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st101_fsm_100 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_601) begin
        ap_sig_cseq_ST_st102_fsm_101 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st102_fsm_101 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_616) begin
        ap_sig_cseq_ST_st103_fsm_102 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st103_fsm_102 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_232) begin
        ap_sig_cseq_ST_st106_fsm_105 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st106_fsm_105 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1027) begin
        ap_sig_cseq_ST_st107_fsm_106 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st107_fsm_106 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_328) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_624) begin
        ap_sig_cseq_ST_st111_fsm_110 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st111_fsm_110 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_865) begin
        ap_sig_cseq_ST_st114_fsm_113 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st114_fsm_113 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_886) begin
        ap_sig_cseq_ST_st115_fsm_114 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st115_fsm_114 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_781) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_344) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_353) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_362) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_392) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_811) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_739) begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_406) begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_822) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_132) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_422) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_436) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_451) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_193) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1005) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_259) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_242) begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_837) begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_463) begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_481) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_496) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_200) begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st37_fsm_36 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1012) begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st38_fsm_37 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_277) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_506) begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st42_fsm_41 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_515) begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st48_fsm_47 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_286) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_524) begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st54_fsm_53 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_846) begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st55_fsm_54 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_533) begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st56_fsm_55 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_303) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_551) begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st61_fsm_60 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_562) begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st62_fsm_61 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_583) begin
        ap_sig_cseq_ST_st67_fsm_66 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st67_fsm_66 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1039) begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st68_fsm_67 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_208) begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st71_fsm_70 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1019) begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st72_fsm_71 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_249) begin
        ap_sig_cseq_ST_st76_fsm_75 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st76_fsm_75 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1046) begin
        ap_sig_cseq_ST_st77_fsm_76 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st77_fsm_76 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_216) begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st80_fsm_79 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1053) begin
        ap_sig_cseq_ST_st81_fsm_80 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st81_fsm_80 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_224) begin
        ap_sig_cseq_ST_st84_fsm_83 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st84_fsm_83 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_1065) begin
        ap_sig_cseq_ST_st85_fsm_84 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st85_fsm_84 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_760) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_312) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond6_fu_941_p2)) | (1'b1 == ap_sig_cseq_ST_st17_fsm_16))) begin
        grp_fft_config1_s_fu_667_ap_ce = 1'b1;
    end else begin
        grp_fft_config1_s_fu_667_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st107_fsm_106)) begin
        grp_fu_675_p0 = sum9_reg_613;
    end else if ((1'b1 == ap_sig_cseq_ST_st38_fsm_37)) begin
        grp_fu_675_p0 = p_x_assign_reg_567;
    end else if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) | (1'b1 == ap_sig_cseq_ST_st72_fsm_71))) begin
        grp_fu_675_p0 = reg_717;
    end else begin
        grp_fu_675_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st72_fsm_71)) begin
        grp_fu_675_p1 = ap_const_lv32_3F800000;
    end else if (((1'b1 == ap_sig_cseq_ST_st38_fsm_37) | (1'b1 == ap_sig_cseq_ST_st107_fsm_106))) begin
        grp_fu_675_p1 = reg_717;
    end else if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        grp_fu_675_p1 = tmp_21_reg_1449;
    end else begin
        grp_fu_675_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st103_fsm_102)) begin
        grp_fu_682_p0 = z_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        grp_fu_682_p0 = reg_717;
    end else if ((1'b1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        grp_fu_682_p0 = reg_725;
    end else if ((1'b1 == ap_sig_cseq_ST_st68_fsm_67)) begin
        grp_fu_682_p0 = tmp_34_reg_1581;
    end else if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        grp_fu_682_p0 = p_s_reg_1543;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_682_p0 = melfb_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_682_p0 = xk_output_M_real_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_682_p0 = sound_file_q0;
    end else begin
        grp_fu_682_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st103_fsm_102)) begin
        grp_fu_682_p1 = tmp_i_i_i_i_reg_1596;
    end else if ((1'b1 == ap_sig_cseq_ST_st81_fsm_80)) begin
        grp_fu_682_p1 = tmp_25_reg_1548;
    end else if ((1'b1 == ap_sig_cseq_ST_st77_fsm_76)) begin
        grp_fu_682_p1 = ap_const_lv32_40490FD8;
    end else if ((1'b1 == ap_sig_cseq_ST_st68_fsm_67)) begin
        grp_fu_682_p1 = ap_const_lv32_40000000;
    end else if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        grp_fu_682_p1 = sum9_reg_613;
    end else if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        grp_fu_682_p1 = z2_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        grp_fu_682_p1 = xk_output_M_real_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_682_p1 = hamming_load_reg_1274;
    end else begin
        grp_fu_682_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st62_fsm_61)) begin
        grp_fu_708_p0 = n1_cast2_fu_1198_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st56_fsm_55)) begin
        grp_fu_708_p0 = k_cast3_fu_1168_p1;
    end else begin
        grp_fu_708_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        hamming_ce0 = 1'b1;
    end else begin
        hamming_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        melfb_ce0 = 1'b1;
    end else begin
        melfb_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        sound_file_ce0 = 1'b1;
    end else begin
        sound_file_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        xk_address0 = tmp_13_fu_893_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        xk_address0 = tmp_23_fu_997_p1;
    end else begin
        xk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) | (1'b1 == ap_sig_cseq_ST_st18_fsm_17))) begin
        xk_ce0 = 1'b1;
    end else begin
        xk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        xk_output_M_imag_address0 = tmp_51_cast_fu_1011_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        xk_output_M_imag_address0 = tmp_44_fu_1076_p1;
    end else begin
        xk_output_M_imag_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        xk_output_M_imag_ce0 = 1'b1;
    end else begin
        xk_output_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        xk_output_M_imag_we0 = 1'b1;
    end else begin
        xk_output_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        xk_output_M_real_address0 = tmp_51_cast_fu_1011_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        xk_output_M_real_address0 = tmp_44_fu_1076_p1;
    end else begin
        xk_output_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) | (1'b1 == ap_sig_cseq_ST_st19_fsm_18))) begin
        xk_output_M_real_ce0 = 1'b1;
    end else begin
        xk_output_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        xk_output_M_real_we0 = 1'b1;
    end else begin
        xk_output_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        xk_we0 = 1'b1;
    end else begin
        xk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        xn_address0 = tmp_18_fu_967_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        xn_address0 = tmp_3_fu_876_p1;
    end else begin
        xn_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        xn_ce0 = 1'b1;
    end else begin
        xn_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        xn_d0 = xn_M_imag_addr_23941_part_set_fu_976_p3;
    end else if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        xn_d0 = ap_const_lv64_0;
    end else begin
        xn_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        xn_input_M_real_address0 = tmp_44_cast_fu_866_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        xn_input_M_real_address0 = tmp_48_cast_fu_962_p1;
    end else begin
        xn_input_M_real_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        xn_input_M_real_ce0 = 1'b1;
    end else begin
        xn_input_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        xn_input_M_real_we0 = 1'b1;
    end else begin
        xn_input_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) | (1'b1 == ap_sig_cseq_ST_st16_fsm_15))) begin
        xn_we0 = 1'b1;
    end else begin
        xn_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        z2_address0 = tmp_19_fu_1082_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        z2_address0 = tmp_29_fu_1148_p1;
    end else begin
        z2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st33_fsm_32) | (1'b1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        z2_ce0 = 1'b1;
    end else begin
        z2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        z2_we0 = 1'b1;
    end else begin
        z2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        z_address0 = tmp_53_cast_fu_1158_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st102_fsm_101)) begin
        z_address0 = tmp_57_cast_fu_1231_p1;
    end else begin
        z_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st102_fsm_101) & ~(1'b0 == grp_dut_sinf_or_cosf_fu_654_ap_done)) | (1'b1 == ap_sig_cseq_ST_st55_fsm_54))) begin
        z_ce0 = 1'b1;
    end else begin
        z_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st55_fsm_54)) begin
        z_we0 = 1'b1;
    end else begin
        z_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond_fu_741_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond2_fu_758_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st9_fsm_8 : begin
            if ((1'b0 == exitcond1_fu_806_p2)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st10_fsm_9 : begin
            if ((1'b0 == exitcond3_fu_822_p2)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st12_fsm_11 : begin
            if (~(1'b0 == tmp_10_fu_881_p2)) begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st13_fsm_12 : begin
            if (~(1'b0 == tmp_15_fu_898_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st14_fsm_13 : begin
            if (((1'b0 == exitcond4_fu_904_p2) & ~ap_sig_379)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else if ((~ap_sig_379 & ~(1'b0 == exitcond4_fu_904_p2))) begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st15_fsm_14 : begin
            if (~(1'b0 == exitcond6_fu_941_p2)) begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st17_fsm_16 : begin
            if (~(1'b0 == grp_fft_config1_s_fu_667_ap_done)) begin
                ap_NS_fsm = ap_ST_st18_fsm_17;
            end else begin
                ap_NS_fsm = ap_ST_st17_fsm_16;
            end
        end
        ap_ST_st18_fsm_17 : begin
            if (~(1'b0 == exitcond8_fu_985_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st19_fsm_18;
            end
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st20_fsm_19 : begin
            if ((1'b0 == exitcond5_fu_1040_p2)) begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end else begin
                ap_NS_fsm = ap_ST_st115_fsm_114;
            end
        end
        ap_ST_st21_fsm_20 : begin
            if (~(1'b0 == exitcond7_fu_1056_p2)) begin
                ap_NS_fsm = ap_ST_st32_fsm_31;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st32_fsm_31 : begin
            if ((1'b0 == exitcond9_fu_1097_p2)) begin
                ap_NS_fsm = ap_ST_st33_fsm_32;
            end else begin
                ap_NS_fsm = ap_ST_st56_fsm_55;
            end
        end
        ap_ST_st33_fsm_32 : begin
            if (~(1'b0 == exitcond11_fu_1117_p2)) begin
                ap_NS_fsm = ap_ST_st43_fsm_42;
            end else begin
                ap_NS_fsm = ap_ST_st34_fsm_33;
            end
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st36_fsm_35;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st37_fsm_36;
        end
        ap_ST_st37_fsm_36 : begin
            ap_NS_fsm = ap_ST_st38_fsm_37;
        end
        ap_ST_st38_fsm_37 : begin
            ap_NS_fsm = ap_ST_st39_fsm_38;
        end
        ap_ST_st39_fsm_38 : begin
            ap_NS_fsm = ap_ST_st40_fsm_39;
        end
        ap_ST_st40_fsm_39 : begin
            ap_NS_fsm = ap_ST_st41_fsm_40;
        end
        ap_ST_st41_fsm_40 : begin
            ap_NS_fsm = ap_ST_st42_fsm_41;
        end
        ap_ST_st42_fsm_41 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st43_fsm_42 : begin
            ap_NS_fsm = ap_ST_st44_fsm_43;
        end
        ap_ST_st44_fsm_43 : begin
            ap_NS_fsm = ap_ST_st45_fsm_44;
        end
        ap_ST_st45_fsm_44 : begin
            ap_NS_fsm = ap_ST_st46_fsm_45;
        end
        ap_ST_st46_fsm_45 : begin
            ap_NS_fsm = ap_ST_st47_fsm_46;
        end
        ap_ST_st47_fsm_46 : begin
            ap_NS_fsm = ap_ST_st48_fsm_47;
        end
        ap_ST_st48_fsm_47 : begin
            ap_NS_fsm = ap_ST_st49_fsm_48;
        end
        ap_ST_st49_fsm_48 : begin
            ap_NS_fsm = ap_ST_st50_fsm_49;
        end
        ap_ST_st50_fsm_49 : begin
            ap_NS_fsm = ap_ST_st51_fsm_50;
        end
        ap_ST_st51_fsm_50 : begin
            ap_NS_fsm = ap_ST_st52_fsm_51;
        end
        ap_ST_st52_fsm_51 : begin
            ap_NS_fsm = ap_ST_st53_fsm_52;
        end
        ap_ST_st53_fsm_52 : begin
            ap_NS_fsm = ap_ST_st54_fsm_53;
        end
        ap_ST_st54_fsm_53 : begin
            ap_NS_fsm = ap_ST_st55_fsm_54;
        end
        ap_ST_st55_fsm_54 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st56_fsm_55 : begin
            if ((1'b0 == exitcond10_fu_1173_p2)) begin
                ap_NS_fsm = ap_ST_st57_fsm_56;
            end else begin
                ap_NS_fsm = ap_ST_st20_fsm_19;
            end
        end
        ap_ST_st57_fsm_56 : begin
            ap_NS_fsm = ap_ST_st58_fsm_57;
        end
        ap_ST_st58_fsm_57 : begin
            ap_NS_fsm = ap_ST_st59_fsm_58;
        end
        ap_ST_st59_fsm_58 : begin
            ap_NS_fsm = ap_ST_st60_fsm_59;
        end
        ap_ST_st60_fsm_59 : begin
            ap_NS_fsm = ap_ST_st61_fsm_60;
        end
        ap_ST_st61_fsm_60 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st62_fsm_61 : begin
            if (~(1'b0 == exitcond12_fu_1203_p2)) begin
                ap_NS_fsm = ap_ST_st112_fsm_111;
            end else begin
                ap_NS_fsm = ap_ST_st63_fsm_62;
            end
        end
        ap_ST_st63_fsm_62 : begin
            ap_NS_fsm = ap_ST_st64_fsm_63;
        end
        ap_ST_st64_fsm_63 : begin
            ap_NS_fsm = ap_ST_st65_fsm_64;
        end
        ap_ST_st65_fsm_64 : begin
            ap_NS_fsm = ap_ST_st66_fsm_65;
        end
        ap_ST_st66_fsm_65 : begin
            ap_NS_fsm = ap_ST_st67_fsm_66;
        end
        ap_ST_st67_fsm_66 : begin
            ap_NS_fsm = ap_ST_st68_fsm_67;
        end
        ap_ST_st68_fsm_67 : begin
            ap_NS_fsm = ap_ST_st69_fsm_68;
        end
        ap_ST_st69_fsm_68 : begin
            ap_NS_fsm = ap_ST_st70_fsm_69;
        end
        ap_ST_st70_fsm_69 : begin
            ap_NS_fsm = ap_ST_st71_fsm_70;
        end
        ap_ST_st71_fsm_70 : begin
            ap_NS_fsm = ap_ST_st72_fsm_71;
        end
        ap_ST_st72_fsm_71 : begin
            ap_NS_fsm = ap_ST_st73_fsm_72;
        end
        ap_ST_st73_fsm_72 : begin
            ap_NS_fsm = ap_ST_st74_fsm_73;
        end
        ap_ST_st74_fsm_73 : begin
            ap_NS_fsm = ap_ST_st75_fsm_74;
        end
        ap_ST_st75_fsm_74 : begin
            ap_NS_fsm = ap_ST_st76_fsm_75;
        end
        ap_ST_st76_fsm_75 : begin
            ap_NS_fsm = ap_ST_st77_fsm_76;
        end
        ap_ST_st77_fsm_76 : begin
            ap_NS_fsm = ap_ST_st78_fsm_77;
        end
        ap_ST_st78_fsm_77 : begin
            ap_NS_fsm = ap_ST_st79_fsm_78;
        end
        ap_ST_st79_fsm_78 : begin
            ap_NS_fsm = ap_ST_st80_fsm_79;
        end
        ap_ST_st80_fsm_79 : begin
            ap_NS_fsm = ap_ST_st81_fsm_80;
        end
        ap_ST_st81_fsm_80 : begin
            ap_NS_fsm = ap_ST_st82_fsm_81;
        end
        ap_ST_st82_fsm_81 : begin
            ap_NS_fsm = ap_ST_st83_fsm_82;
        end
        ap_ST_st83_fsm_82 : begin
            ap_NS_fsm = ap_ST_st84_fsm_83;
        end
        ap_ST_st84_fsm_83 : begin
            ap_NS_fsm = ap_ST_st85_fsm_84;
        end
        ap_ST_st85_fsm_84 : begin
            ap_NS_fsm = ap_ST_st86_fsm_85;
        end
        ap_ST_st86_fsm_85 : begin
            ap_NS_fsm = ap_ST_st87_fsm_86;
        end
        ap_ST_st87_fsm_86 : begin
            ap_NS_fsm = ap_ST_st88_fsm_87;
        end
        ap_ST_st88_fsm_87 : begin
            ap_NS_fsm = ap_ST_st89_fsm_88;
        end
        ap_ST_st89_fsm_88 : begin
            ap_NS_fsm = ap_ST_st90_fsm_89;
        end
        ap_ST_st90_fsm_89 : begin
            ap_NS_fsm = ap_ST_st91_fsm_90;
        end
        ap_ST_st91_fsm_90 : begin
            ap_NS_fsm = ap_ST_st92_fsm_91;
        end
        ap_ST_st92_fsm_91 : begin
            ap_NS_fsm = ap_ST_st93_fsm_92;
        end
        ap_ST_st93_fsm_92 : begin
            ap_NS_fsm = ap_ST_st94_fsm_93;
        end
        ap_ST_st94_fsm_93 : begin
            ap_NS_fsm = ap_ST_st95_fsm_94;
        end
        ap_ST_st95_fsm_94 : begin
            ap_NS_fsm = ap_ST_st96_fsm_95;
        end
        ap_ST_st96_fsm_95 : begin
            ap_NS_fsm = ap_ST_st97_fsm_96;
        end
        ap_ST_st97_fsm_96 : begin
            ap_NS_fsm = ap_ST_st98_fsm_97;
        end
        ap_ST_st98_fsm_97 : begin
            ap_NS_fsm = ap_ST_st99_fsm_98;
        end
        ap_ST_st99_fsm_98 : begin
            ap_NS_fsm = ap_ST_st100_fsm_99;
        end
        ap_ST_st100_fsm_99 : begin
            ap_NS_fsm = ap_ST_st101_fsm_100;
        end
        ap_ST_st101_fsm_100 : begin
            ap_NS_fsm = ap_ST_st102_fsm_101;
        end
        ap_ST_st102_fsm_101 : begin
            if (~(1'b0 == grp_dut_sinf_or_cosf_fu_654_ap_done)) begin
                ap_NS_fsm = ap_ST_st103_fsm_102;
            end else begin
                ap_NS_fsm = ap_ST_st102_fsm_101;
            end
        end
        ap_ST_st103_fsm_102 : begin
            ap_NS_fsm = ap_ST_st104_fsm_103;
        end
        ap_ST_st104_fsm_103 : begin
            ap_NS_fsm = ap_ST_st105_fsm_104;
        end
        ap_ST_st105_fsm_104 : begin
            ap_NS_fsm = ap_ST_st106_fsm_105;
        end
        ap_ST_st106_fsm_105 : begin
            ap_NS_fsm = ap_ST_st107_fsm_106;
        end
        ap_ST_st107_fsm_106 : begin
            ap_NS_fsm = ap_ST_st108_fsm_107;
        end
        ap_ST_st108_fsm_107 : begin
            ap_NS_fsm = ap_ST_st109_fsm_108;
        end
        ap_ST_st109_fsm_108 : begin
            ap_NS_fsm = ap_ST_st110_fsm_109;
        end
        ap_ST_st110_fsm_109 : begin
            ap_NS_fsm = ap_ST_st111_fsm_110;
        end
        ap_ST_st111_fsm_110 : begin
            ap_NS_fsm = ap_ST_st62_fsm_61;
        end
        ap_ST_st112_fsm_111 : begin
            ap_NS_fsm = ap_ST_st113_fsm_112;
        end
        ap_ST_st113_fsm_112 : begin
            ap_NS_fsm = ap_ST_st114_fsm_113;
        end
        ap_ST_st114_fsm_113 : begin
            ap_NS_fsm = ap_ST_st56_fsm_55;
        end
        ap_ST_st115_fsm_114 : begin
            if (~(1'b0 == grp_dut_knn_fu_647_ap_done)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st115_fsm_114;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_1005 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_1012 = (1'b1 == ap_CS_fsm[ap_const_lv32_25]);
end

always @ (*) begin
    ap_sig_1019 = (1'b1 == ap_CS_fsm[ap_const_lv32_47]);
end

always @ (*) begin
    ap_sig_1027 = (1'b1 == ap_CS_fsm[ap_const_lv32_6A]);
end

always @ (*) begin
    ap_sig_1039 = (1'b1 == ap_CS_fsm[ap_const_lv32_43]);
end

always @ (*) begin
    ap_sig_1046 = (1'b1 == ap_CS_fsm[ap_const_lv32_4C]);
end

always @ (*) begin
    ap_sig_1053 = (1'b1 == ap_CS_fsm[ap_const_lv32_50]);
end

always @ (*) begin
    ap_sig_1065 = (1'b1 == ap_CS_fsm[ap_const_lv32_54]);
end

always @ (*) begin
    ap_sig_132 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_193 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_200 = (1'b1 == ap_CS_fsm[ap_const_lv32_24]);
end

always @ (*) begin
    ap_sig_208 = (1'b1 == ap_CS_fsm[ap_const_lv32_46]);
end

always @ (*) begin
    ap_sig_216 = (1'b1 == ap_CS_fsm[ap_const_lv32_4F]);
end

always @ (*) begin
    ap_sig_224 = (1'b1 == ap_CS_fsm[ap_const_lv32_53]);
end

always @ (*) begin
    ap_sig_232 = (1'b1 == ap_CS_fsm[ap_const_lv32_69]);
end

always @ (*) begin
    ap_sig_242 = (1'b1 == ap_CS_fsm[ap_const_lv32_1D]);
end

always @ (*) begin
    ap_sig_249 = (1'b1 == ap_CS_fsm[ap_const_lv32_4B]);
end

always @ (*) begin
    ap_sig_259 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_277 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_286 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_303 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_312 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_328 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_344 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_353 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_362 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_379 = (((fft_config_data_V_empty_n == 1'b0) & (1'b0 == exitcond4_fu_904_p2)) | ((1'b0 == exitcond4_fu_904_p2) & (fft_config_data_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_sig_392 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_406 = (1'b1 == ap_CS_fsm[ap_const_lv32_11]);
end

always @ (*) begin
    ap_sig_422 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_436 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_451 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_463 = (1'b1 == ap_CS_fsm[ap_const_lv32_1F]);
end

always @ (*) begin
    ap_sig_481 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_496 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_506 = (1'b1 == ap_CS_fsm[ap_const_lv32_29]);
end

always @ (*) begin
    ap_sig_515 = (1'b1 == ap_CS_fsm[ap_const_lv32_2F]);
end

always @ (*) begin
    ap_sig_524 = (1'b1 == ap_CS_fsm[ap_const_lv32_35]);
end

always @ (*) begin
    ap_sig_533 = (1'b1 == ap_CS_fsm[ap_const_lv32_37]);
end

always @ (*) begin
    ap_sig_551 = (1'b1 == ap_CS_fsm[ap_const_lv32_3C]);
end

always @ (*) begin
    ap_sig_562 = (1'b1 == ap_CS_fsm[ap_const_lv32_3D]);
end

always @ (*) begin
    ap_sig_583 = (1'b1 == ap_CS_fsm[ap_const_lv32_42]);
end

always @ (*) begin
    ap_sig_592 = (1'b1 == ap_CS_fsm[ap_const_lv32_63]);
end

always @ (*) begin
    ap_sig_601 = (1'b1 == ap_CS_fsm[ap_const_lv32_65]);
end

always @ (*) begin
    ap_sig_616 = (1'b1 == ap_CS_fsm[ap_const_lv32_66]);
end

always @ (*) begin
    ap_sig_624 = (1'b1 == ap_CS_fsm[ap_const_lv32_6E]);
end

always @ (*) begin
    ap_sig_739 = (1'b1 == ap_CS_fsm[ap_const_lv32_10]);
end

always @ (*) begin
    ap_sig_760 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_781 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_811 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_822 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_837 = (1'b1 == ap_CS_fsm[ap_const_lv32_1E]);
end

always @ (*) begin
    ap_sig_846 = (1'b1 == ap_CS_fsm[ap_const_lv32_36]);
end

always @ (*) begin
    ap_sig_865 = (1'b1 == ap_CS_fsm[ap_const_lv32_71]);
end

always @ (*) begin
    ap_sig_886 = (1'b1 == ap_CS_fsm[ap_const_lv32_72]);
end

always @ (*) begin
    ap_sig_903 = (1'b1 == ap_CS_fsm[ap_const_lv32_64]);
end

assign exitcond10_fu_1173_p2 = ((k_reg_590 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond11_fu_1117_p2 = ((x_reg_579 == ap_const_lv8_81) ? 1'b1 : 1'b0);

assign exitcond12_fu_1203_p2 = ((n1_reg_625 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond1_fu_806_p2 = ((i1_reg_430 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond2_fu_758_p2 = ((j_reg_408 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond3_fu_822_p2 = ((j2_reg_453 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond4_fu_904_p2 = ((i4_reg_486 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond5_fu_1040_p2 = ((frame_reg_520 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond6_fu_941_p2 = ((j5_reg_497 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond7_fu_1056_p2 = ((i7_reg_532 == ap_const_lv8_81) ? 1'b1 : 1'b0);

assign exitcond8_fu_985_p2 = ((j6_reg_509 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond9_fu_1097_p2 = ((j8_reg_544 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond_fu_741_p2 = ((i_reg_385 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign fft_config_data_V_empty_n = 1'b1;

assign fft_config_data_V_full_n = 1'b1;

assign frame_1_fu_1046_p2 = (frame_reg_520 + ap_const_lv6_1);

assign grp_dut_knn_fu_647_ap_start = ap_reg_grp_dut_knn_fu_647_ap_start;

assign grp_dut_sinf_or_cosf_fu_654_ap_start = ap_reg_grp_dut_sinf_or_cosf_fu_654_ap_start;

assign grp_fft_config1_s_fu_667_ap_start = ap_reg_grp_fft_config1_s_fu_667_ap_start;

assign hamming_address0 = tmp_4_fu_753_p1;

assign i_1_fu_747_p2 = (i_reg_385 + ap_const_lv9_1);

assign i_2_fu_812_p2 = (i1_reg_430 + ap_const_lv9_1);

assign i_3_fu_1062_p2 = (i7_reg_532 + ap_const_lv8_1);

assign i_4_fu_910_p2 = (i4_reg_486 + ap_const_lv6_1);

assign i_cast_fu_737_p1 = i_reg_385;

assign j8_cast7_fu_1093_p1 = j8_reg_544;

assign j_1_fu_764_p2 = (j_reg_408 + ap_const_lv6_1);

assign j_2_fu_828_p2 = (j2_reg_453 + ap_const_lv6_1);

assign j_3_fu_947_p2 = (j5_reg_497 + ap_const_lv9_1);

assign j_4_fu_991_p2 = (j6_reg_509 + ap_const_lv9_1);

assign j_5_fu_1103_p2 = (j8_reg_544 + ap_const_lv5_1);

assign k_1_fu_1179_p2 = (k_reg_590 + ap_const_lv5_1);

assign k_cast3_fu_1168_p1 = k_reg_590;

assign melfb_address0 = tmp_28_fu_1143_p1;

assign n1_cast2_fu_1198_p1 = n1_reg_625;

assign n_fu_1209_p2 = (n1_reg_625 + ap_const_lv5_1);

assign next_mul1_fu_1162_p2 = (phi_mul1_reg_601 + ap_const_lv10_31);

assign next_mul3_fu_731_p2 = (phi_mul2_reg_396 + ap_const_lv14_31);

assign next_mul5_fu_800_p2 = (phi_mul4_reg_441 + ap_const_lv14_31);

assign next_mul7_fu_1087_p2 = (phi_mul6_reg_555 + ap_const_lv10_31);

assign next_mul9_fu_1215_p2 = (phi_mul8_reg_636 + ap_const_lv10_31);

assign next_mul_fu_770_p2 = (phi_mul_reg_419 + ap_const_lv13_64);

assign p_s_fu_1191_p3 = ((tmp_24_reg_1538[0:0] === 1'b1) ? ap_const_lv32_3E64F92E : ap_const_lv32_3EA1E89B);

assign p_shl_fu_1109_p3 = {{j8_reg_544}, {ap_const_lv7_0}};

assign sound_file_address0 = tmp_9_fu_781_p1;

assign tmp1_cast_fu_1134_p1 = tmp1_fu_1129_p2;

assign tmp1_fu_1129_p2 = (j8_cast7_reg_1459 + x_reg_579);

assign tmp_10_fu_881_p2 = ((tmp_1_reg_464 == ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign tmp_12_fu_887_p2 = (tmp_11_reg_475 + ap_const_lv8_1);

assign tmp_13_fu_893_p1 = tmp_11_reg_475;

assign tmp_14_cast_fu_834_p1 = j2_reg_453;

assign tmp_15_fu_898_p2 = ((tmp_11_reg_475 == ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign tmp_17_cast_fu_1052_p1 = frame_reg_520;

assign tmp_18_cast_fu_953_p1 = j5_reg_497;

assign tmp_18_fu_967_p1 = j5_reg_497;

assign tmp_19_fu_1082_p1 = i7_reg_532;

assign tmp_23_cast_fu_1002_p1 = j6_reg_509;

assign tmp_23_fu_997_p1 = j6_reg_509;

assign tmp_24_fu_1185_p2 = ((k_reg_590 == ap_const_lv5_0) ? 1'b1 : 1'b0);

assign tmp_26_fu_790_p2 = (phi_mul2_reg_396 + tmp_6_cast_fu_786_p1);

assign tmp_27_fu_1138_p2 = (tmp1_cast_fu_1134_p1 + p_shl_reg_1472);

assign tmp_28_fu_1143_p1 = tmp_27_fu_1138_p2;

assign tmp_29_fu_1148_p1 = x_reg_579;

assign tmp_2_fu_870_p2 = (tmp_1_reg_464 + ap_const_lv8_1);

assign tmp_32_fu_838_p3 = {{j2_reg_453}, {ap_const_lv8_0}};

assign tmp_33_fu_850_p2 = (tmp_5_cast_reg_1320 + tmp_43_cast_fu_846_p1);

assign tmp_3_fu_876_p1 = tmp_1_reg_464;

assign tmp_40_fu_855_p2 = (tmp_14_cast_fu_834_p1 + phi_mul4_reg_441);

assign tmp_41_cast_fu_796_p1 = tmp_26_reg_1297;

assign tmp_41_fu_929_p3 = {{i4_reg_486}, {ap_const_lv8_0}};

assign tmp_42_fu_957_p2 = (tmp_47_cast_reg_1367 + tmp_18_cast_fu_953_p1);

assign tmp_43_cast_fu_846_p1 = tmp_32_fu_838_p3;

assign tmp_43_fu_1068_p3 = {{frame_reg_520}, {i7_reg_532}};

assign tmp_44_cast_fu_866_p1 = tmp_33_reg_1333;

assign tmp_44_fu_1076_p1 = tmp_43_fu_1068_p3;

assign tmp_45_cast_fu_861_p1 = tmp_40_fu_855_p2;

assign tmp_45_fu_1006_p2 = (tmp_23_cast_fu_1002_p1 + tmp_47_cast_reg_1367);

assign tmp_46_fu_1016_p1 = xk_q0[31:0];

assign tmp_47_cast_fu_937_p1 = tmp_41_fu_929_p3;

assign tmp_47_fu_1153_p2 = (tmp_17_cast_reg_1412 + phi_mul6_reg_555);

assign tmp_48_cast_fu_962_p1 = tmp_42_fu_957_p2;

assign tmp_48_fu_1226_p2 = (tmp_17_cast_reg_1412 + phi_mul1_reg_601);

assign tmp_49_fu_1221_p2 = (tmp_17_cast_reg_1412 + phi_mul8_reg_636);

assign tmp_4_fu_753_p1 = i_reg_385;

assign tmp_51_cast_fu_1011_p1 = tmp_45_reg_1394;

assign tmp_53_cast_fu_1158_p1 = tmp_47_reg_1510;

assign tmp_55_cast_fu_1235_p1 = tmp_48_reg_1576;

assign tmp_57_cast_fu_1231_p1 = tmp_49_reg_1571;

assign tmp_5_cast_fu_818_p1 = i1_reg_430;

assign tmp_6_cast_fu_786_p1 = j_reg_408;

assign tmp_8_fu_776_p2 = (phi_mul_reg_419 + i_cast_reg_1256);

assign tmp_9_fu_781_p1 = tmp_8_fu_776_p2;

assign x_1_fu_1123_p2 = (x_reg_579 + ap_const_lv8_1);

assign xk_M_imag_load_new_fu_1025_p4 = {{xk_q0[ap_const_lv32_3F : ap_const_lv32_20]}};

assign xk_output_M_imag_d0 = xk_M_imag_load_new_fu_1025_p4;

assign xk_output_M_real_d0 = tmp_46_fu_1016_p1;

assign xn_M_imag_addr_23941_part_set_fu_976_p3 = {{ap_const_lv32_0}, {xn_input_M_real_load_toint_fu_972_p1}};

assign xn_input_M_real_load_toint_fu_972_p1 = xn_input_M_real_q0;

always @ (posedge ap_clk) begin
    i_cast_reg_1256[12:9] <= 4'b0000;
    tmp_5_cast_reg_1320[14:9] <= 6'b000000;
    tmp_47_cast_reg_1367[7:0] <= 8'b00000000;
    tmp_47_cast_reg_1367[14] <= 1'b0;
    tmp_17_cast_reg_1412[9:6] <= 4'b0000;
    j8_cast7_reg_1459[7:5] <= 3'b000;
    p_shl_reg_1472[6:0] <= 7'b0000000;
    p_s_reg_1543[1] <= 1'b1;
    p_s_reg_1543[3:3] <= 1'b1;
    p_s_reg_1543[6:6] <= 1'b0;
    p_s_reg_1543[11:9] <= 3'b100;
    p_s_reg_1543[15:13] <= 3'b111;
    p_s_reg_1543[17:17] <= 1'b0;
    p_s_reg_1543[21:19] <= 3'b100;
    p_s_reg_1543[31:24] <= 8'b00111110;
end

endmodule //dut_mfcc
