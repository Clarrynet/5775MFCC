// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_HH_
#define _dut_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_mel_into_dct.h"
#include "dut_stage1.h"

namespace ap_rtl {

struct dut : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > strm_in_V_V_dout;
    sc_in< sc_logic > strm_in_V_V_empty_n;
    sc_out< sc_logic > strm_in_V_V_read;
    sc_out< sc_lv<32> > strm_out_V_V_din;
    sc_in< sc_logic > strm_out_V_V_full_n;
    sc_out< sc_logic > strm_out_V_V_write;


    // Module declarations
    dut(sc_module_name name);
    SC_HAS_PROCESS(dut);

    ~dut();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dut_stage1* stage1_U;
    dut_mel_into_dct* grp_dut_mel_into_dct_fu_113;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_21;
    sc_signal< sc_logic > strm_in_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_42;
    sc_signal< sc_lv<1> > exitcond_fu_158_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_53;
    sc_signal< sc_logic > strm_out_V_V_blk_n;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_62;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_69;
    sc_signal< sc_lv<6> > i_6_fu_130_p2;
    sc_signal< sc_lv<6> > i_6_reg_197;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_79;
    sc_signal< sc_lv<14> > tmp_s_fu_152_p2;
    sc_signal< sc_lv<14> > tmp_s_reg_202;
    sc_signal< sc_lv<1> > exitcond11_fu_124_p2;
    sc_signal< sc_lv<8> > j_5_fu_164_p2;
    sc_signal< sc_lv<8> > j_5_reg_210;
    sc_signal< bool > ap_sig_90;
    sc_signal< sc_lv<13> > stage1_address0;
    sc_signal< sc_logic > stage1_ce0;
    sc_signal< sc_logic > stage1_we0;
    sc_signal< sc_lv<32> > stage1_d0;
    sc_signal< sc_lv<32> > stage1_q0;
    sc_signal< sc_logic > grp_dut_mel_into_dct_fu_113_ap_start;
    sc_signal< sc_logic > grp_dut_mel_into_dct_fu_113_ap_done;
    sc_signal< sc_logic > grp_dut_mel_into_dct_fu_113_ap_idle;
    sc_signal< sc_logic > grp_dut_mel_into_dct_fu_113_ap_ready;
    sc_signal< sc_lv<13> > grp_dut_mel_into_dct_fu_113_z2_address0;
    sc_signal< sc_logic > grp_dut_mel_into_dct_fu_113_z2_ce0;
    sc_signal< sc_lv<1> > grp_dut_mel_into_dct_fu_113_ap_return;
    sc_signal< sc_lv<6> > i_reg_91;
    sc_signal< sc_lv<8> > j_reg_102;
    sc_signal< sc_logic > ap_reg_grp_dut_mel_into_dct_fu_113_ap_start;
    sc_signal< sc_lv<64> > tmp_55_cast_fu_184_p1;
    sc_signal< sc_lv<32> > output_fu_189_p1;
    sc_signal< sc_lv<13> > tmp_fu_140_p3;
    sc_signal< sc_lv<14> > tmp_cast_fu_136_p1;
    sc_signal< sc_lv<14> > p_shl_cast_fu_148_p1;
    sc_signal< sc_lv<14> > tmp_38_cast_fu_175_p1;
    sc_signal< sc_lv<14> > tmp_35_fu_179_p2;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_st1_fsm_0;
    static const sc_lv<6> ap_ST_st2_fsm_1;
    static const sc_lv<6> ap_ST_st3_fsm_2;
    static const sc_lv<6> ap_ST_st4_fsm_3;
    static const sc_lv<6> ap_ST_st5_fsm_4;
    static const sc_lv<6> ap_ST_st6_fsm_5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<6> ap_const_lv6_31;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_81;
    static const sc_lv<8> ap_const_lv8_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_21();
    void thread_ap_sig_42();
    void thread_ap_sig_53();
    void thread_ap_sig_62();
    void thread_ap_sig_69();
    void thread_ap_sig_79();
    void thread_ap_sig_90();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_exitcond11_fu_124_p2();
    void thread_exitcond_fu_158_p2();
    void thread_grp_dut_mel_into_dct_fu_113_ap_start();
    void thread_i_6_fu_130_p2();
    void thread_j_5_fu_164_p2();
    void thread_output_fu_189_p1();
    void thread_p_shl_cast_fu_148_p1();
    void thread_stage1_address0();
    void thread_stage1_ce0();
    void thread_stage1_d0();
    void thread_stage1_we0();
    void thread_strm_in_V_V_blk_n();
    void thread_strm_in_V_V_read();
    void thread_strm_out_V_V_blk_n();
    void thread_strm_out_V_V_din();
    void thread_strm_out_V_V_write();
    void thread_tmp_35_fu_179_p2();
    void thread_tmp_38_cast_fu_175_p1();
    void thread_tmp_55_cast_fu_184_p1();
    void thread_tmp_cast_fu_136_p1();
    void thread_tmp_fu_140_p3();
    void thread_tmp_s_fu_152_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
