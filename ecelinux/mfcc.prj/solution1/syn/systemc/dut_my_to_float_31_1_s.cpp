// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "dut_my_to_float_31_1_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic dut_my_to_float_31_1_s::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic dut_my_to_float_31_1_s::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> dut_my_to_float_31_1_s::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> dut_my_to_float_31_1_s::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> dut_my_to_float_31_1_s::ap_ST_st3_fsm_2 = "100";
const sc_lv<4> dut_my_to_float_31_1_s::ap_ST_st4_fsm_3 = "1000";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> dut_my_to_float_31_1_s::ap_const_lv1_1 = "1";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_1 = "1";
const sc_lv<1> dut_my_to_float_31_1_s::ap_const_lv1_0 = "0";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_2 = "10";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_3 = "11";
const sc_lv<2> dut_my_to_float_31_1_s::ap_const_lv2_0 = "00";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_F = "1111";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_1E = "11110";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_1F = "11111";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_10 = "10000";
const sc_lv<2> dut_my_to_float_31_1_s::ap_const_lv2_2 = "10";
const sc_lv<2> dut_my_to_float_31_1_s::ap_const_lv2_1 = "1";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_7 = "111";
const sc_lv<32> dut_my_to_float_31_1_s::ap_const_lv32_1D = "11101";
const sc_lv<31> dut_my_to_float_31_1_s::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<8> dut_my_to_float_31_1_s::ap_const_lv8_7F = "1111111";
const sc_lv<8> dut_my_to_float_31_1_s::ap_const_lv8_0 = "00000000";

dut_my_to_float_31_1_s::dut_my_to_float_31_1_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_16_fu_354_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_16_fu_354_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_16_fu_354_p2 );
    sensitive << ( result_write_assign_fu_411_p1 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_ap_sig_21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_64);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_21 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_47 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_64 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_81 );

    SC_METHOD(thread_c_0_fu_244_p3);
    sensitive << ( out_bits_V_load_phi_fu_238_p3 );

    SC_METHOD(thread_c_1_1_fu_252_p3);
    sensitive << ( c_0_s_reg_80 );
    sensitive << ( tmp_24_fu_234_p1 );
    sensitive << ( c_0_fu_244_p3 );

    SC_METHOD(thread_c_1_2_fu_260_p3);
    sensitive << ( c_1_s_reg_92 );
    sensitive << ( tmp_24_fu_234_p1 );
    sensitive << ( c_0_fu_244_p3 );

    SC_METHOD(thread_exitcond_fu_222_p2);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( i1_reg_104 );

    SC_METHOD(thread_i_1_fu_276_p2);
    sensitive << ( i2_reg_137 );

    SC_METHOD(thread_i_fu_228_p2);
    sensitive << ( i1_reg_104 );

    SC_METHOD(thread_in_shift_V_fu_340_p3);
    sensitive << ( isNeg_fu_294_p3 );
    sensitive << ( tmp_27_fu_332_p1 );
    sensitive << ( tmp_28_fu_336_p1 );

    SC_METHOD(thread_isNeg_fu_294_p3);
    sensitive << ( sh_assign_fu_286_p3 );

    SC_METHOD(thread_out_bits_0_V_fu_186_p5);
    sensitive << ( tmp_fu_178_p3 );

    SC_METHOD(thread_out_bits_V_load_phi_fu_238_p3);
    sensitive << ( out_bits_0_V_reg_426 );
    sensitive << ( p_Result_s_reg_431 );
    sensitive << ( tmp_24_fu_234_p1 );

    SC_METHOD(thread_out_exp_V_fu_393_p3);
    sensitive << ( tmp_17_fu_369_p2 );
    sensitive << ( phitmp_fu_387_p2 );

    SC_METHOD(thread_p_Result_19_fu_401_p4);
    sensitive << ( out_exp_V_fu_393_p3 );
    sensitive << ( p_Val2_s_fu_359_p4 );

    SC_METHOD(thread_p_Result_3_fu_168_p4);
    sensitive << ( in_V );

    SC_METHOD(thread_p_Result_s_fu_210_p5);
    sensitive << ( tmp_s_fu_202_p3 );

    SC_METHOD(thread_p_Val2_in_phi_fu_151_p4);
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( in_shift_V_reg_469 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_16_fu_354_p2 );
    sensitive << ( p_Val2_in_reg_148 );

    SC_METHOD(thread_p_Val2_s_fu_359_p4);
    sensitive << ( p_Val2_in_phi_fu_151_p4 );

    SC_METHOD(thread_phitmp_fu_387_p2);
    sensitive << ( tmp_13_fu_377_p2 );
    sensitive << ( tmp_31_fu_383_p1 );

    SC_METHOD(thread_result_write_assign_fu_411_p1);
    sensitive << ( p_Result_19_fu_401_p4 );

    SC_METHOD(thread_sh_assign_2_fu_308_p3);
    sensitive << ( sh_assign_fu_286_p3 );
    sensitive << ( isNeg_fu_294_p3 );
    sensitive << ( tmp_11_fu_302_p2 );

    SC_METHOD(thread_sh_assign_fu_286_p3);
    sensitive << ( c_0_s_reg_80 );
    sensitive << ( c_1_s_reg_92 );
    sensitive << ( tmp_25_fu_282_p1 );

    SC_METHOD(thread_shift_1_phi_fu_161_p4);
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( shift_2_fu_348_p2 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_16_fu_354_p2 );
    sensitive << ( shift_1_reg_158 );

    SC_METHOD(thread_shift_2_fu_348_p2);
    sensitive << ( sh_assign_reg_463 );
    sensitive << ( shift_reg_125 );

    SC_METHOD(thread_tmp_11_fu_302_p2);
    sensitive << ( sh_assign_fu_286_p3 );

    SC_METHOD(thread_tmp_12_fu_316_p1);
    sensitive << ( in_shift_reg_115 );

    SC_METHOD(thread_tmp_13_fu_377_p2);
    sensitive << ( tmp_30_fu_374_p1 );

    SC_METHOD(thread_tmp_14_fu_320_p2);
    sensitive << ( tmp_12_fu_316_p1 );
    sensitive << ( sh_assign_2_fu_308_p3 );

    SC_METHOD(thread_tmp_15_fu_326_p2);
    sensitive << ( tmp_12_fu_316_p1 );
    sensitive << ( sh_assign_2_fu_308_p3 );

    SC_METHOD(thread_tmp_16_fu_354_p2);
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( sh_assign_reg_463 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );

    SC_METHOD(thread_tmp_17_fu_369_p2);
    sensitive << ( in_V );
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_16_fu_354_p2 );

    SC_METHOD(thread_tmp_22_fu_198_p1);
    sensitive << ( in_V );

    SC_METHOD(thread_tmp_23_fu_268_p3);
    sensitive << ( i2_reg_137 );

    SC_METHOD(thread_tmp_24_fu_234_p1);
    sensitive << ( i1_reg_104 );

    SC_METHOD(thread_tmp_25_fu_282_p1);
    sensitive << ( i2_reg_137 );

    SC_METHOD(thread_tmp_27_fu_332_p1);
    sensitive << ( tmp_14_fu_320_p2 );

    SC_METHOD(thread_tmp_28_fu_336_p1);
    sensitive << ( tmp_15_fu_326_p2 );

    SC_METHOD(thread_tmp_30_fu_374_p1);
    sensitive << ( prescale );

    SC_METHOD(thread_tmp_31_fu_383_p1);
    sensitive << ( shift_1_phi_fu_161_p4 );

    SC_METHOD(thread_tmp_fu_178_p3);
    sensitive << ( p_Result_3_fu_168_p4 );

    SC_METHOD(thread_tmp_s_fu_202_p3);
    sensitive << ( tmp_22_fu_198_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond_fu_222_p2 );
    sensitive << ( tmp_23_reg_454 );
    sensitive << ( tmp_16_fu_354_p2 );

    ap_CS_fsm = "0001";
    ap_return_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "dut_my_to_float_31_1_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, in_V, "(port)in_V");
    sc_trace(mVcdFile, prescale, "(port)prescale");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_21, "ap_sig_21");
    sc_trace(mVcdFile, out_bits_0_V_fu_186_p5, "out_bits_0_V_fu_186_p5");
    sc_trace(mVcdFile, out_bits_0_V_reg_426, "out_bits_0_V_reg_426");
    sc_trace(mVcdFile, p_Result_s_fu_210_p5, "p_Result_s_fu_210_p5");
    sc_trace(mVcdFile, p_Result_s_reg_431, "p_Result_s_reg_431");
    sc_trace(mVcdFile, i_fu_228_p2, "i_fu_228_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_47, "ap_sig_47");
    sc_trace(mVcdFile, c_1_1_fu_252_p3, "c_1_1_fu_252_p3");
    sc_trace(mVcdFile, exitcond_fu_222_p2, "exitcond_fu_222_p2");
    sc_trace(mVcdFile, c_1_2_fu_260_p3, "c_1_2_fu_260_p3");
    sc_trace(mVcdFile, tmp_23_fu_268_p3, "tmp_23_fu_268_p3");
    sc_trace(mVcdFile, tmp_23_reg_454, "tmp_23_reg_454");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_64, "ap_sig_64");
    sc_trace(mVcdFile, i_1_fu_276_p2, "i_1_fu_276_p2");
    sc_trace(mVcdFile, i_1_reg_458, "i_1_reg_458");
    sc_trace(mVcdFile, sh_assign_fu_286_p3, "sh_assign_fu_286_p3");
    sc_trace(mVcdFile, sh_assign_reg_463, "sh_assign_reg_463");
    sc_trace(mVcdFile, in_shift_V_fu_340_p3, "in_shift_V_fu_340_p3");
    sc_trace(mVcdFile, in_shift_V_reg_469, "in_shift_V_reg_469");
    sc_trace(mVcdFile, shift_2_fu_348_p2, "shift_2_fu_348_p2");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_81, "ap_sig_81");
    sc_trace(mVcdFile, c_0_s_reg_80, "c_0_s_reg_80");
    sc_trace(mVcdFile, c_1_s_reg_92, "c_1_s_reg_92");
    sc_trace(mVcdFile, i1_reg_104, "i1_reg_104");
    sc_trace(mVcdFile, in_shift_reg_115, "in_shift_reg_115");
    sc_trace(mVcdFile, tmp_16_fu_354_p2, "tmp_16_fu_354_p2");
    sc_trace(mVcdFile, shift_reg_125, "shift_reg_125");
    sc_trace(mVcdFile, i2_reg_137, "i2_reg_137");
    sc_trace(mVcdFile, p_Val2_in_phi_fu_151_p4, "p_Val2_in_phi_fu_151_p4");
    sc_trace(mVcdFile, p_Val2_in_reg_148, "p_Val2_in_reg_148");
    sc_trace(mVcdFile, shift_1_phi_fu_161_p4, "shift_1_phi_fu_161_p4");
    sc_trace(mVcdFile, shift_1_reg_158, "shift_1_reg_158");
    sc_trace(mVcdFile, p_Result_3_fu_168_p4, "p_Result_3_fu_168_p4");
    sc_trace(mVcdFile, tmp_fu_178_p3, "tmp_fu_178_p3");
    sc_trace(mVcdFile, tmp_22_fu_198_p1, "tmp_22_fu_198_p1");
    sc_trace(mVcdFile, tmp_s_fu_202_p3, "tmp_s_fu_202_p3");
    sc_trace(mVcdFile, tmp_24_fu_234_p1, "tmp_24_fu_234_p1");
    sc_trace(mVcdFile, out_bits_V_load_phi_fu_238_p3, "out_bits_V_load_phi_fu_238_p3");
    sc_trace(mVcdFile, c_0_fu_244_p3, "c_0_fu_244_p3");
    sc_trace(mVcdFile, tmp_25_fu_282_p1, "tmp_25_fu_282_p1");
    sc_trace(mVcdFile, isNeg_fu_294_p3, "isNeg_fu_294_p3");
    sc_trace(mVcdFile, tmp_11_fu_302_p2, "tmp_11_fu_302_p2");
    sc_trace(mVcdFile, tmp_12_fu_316_p1, "tmp_12_fu_316_p1");
    sc_trace(mVcdFile, sh_assign_2_fu_308_p3, "sh_assign_2_fu_308_p3");
    sc_trace(mVcdFile, tmp_14_fu_320_p2, "tmp_14_fu_320_p2");
    sc_trace(mVcdFile, tmp_15_fu_326_p2, "tmp_15_fu_326_p2");
    sc_trace(mVcdFile, tmp_27_fu_332_p1, "tmp_27_fu_332_p1");
    sc_trace(mVcdFile, tmp_28_fu_336_p1, "tmp_28_fu_336_p1");
    sc_trace(mVcdFile, tmp_30_fu_374_p1, "tmp_30_fu_374_p1");
    sc_trace(mVcdFile, tmp_13_fu_377_p2, "tmp_13_fu_377_p2");
    sc_trace(mVcdFile, tmp_31_fu_383_p1, "tmp_31_fu_383_p1");
    sc_trace(mVcdFile, tmp_17_fu_369_p2, "tmp_17_fu_369_p2");
    sc_trace(mVcdFile, phitmp_fu_387_p2, "phitmp_fu_387_p2");
    sc_trace(mVcdFile, out_exp_V_fu_393_p3, "out_exp_V_fu_393_p3");
    sc_trace(mVcdFile, p_Val2_s_fu_359_p4, "p_Val2_s_fu_359_p4");
    sc_trace(mVcdFile, p_Result_19_fu_401_p4, "p_Result_19_fu_401_p4");
    sc_trace(mVcdFile, result_write_assign_fu_411_p1, "result_write_assign_fu_411_p1");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

dut_my_to_float_31_1_s::~dut_my_to_float_31_1_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void dut_my_to_float_31_1_s::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv32_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
             (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()) || 
              !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read())))) {
            ap_return_preg = result_write_assign_fu_411_p1.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_222_p2.read(), ap_const_lv1_0))) {
        i1_reg_104 = i_fu_228_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i1_reg_104 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_222_p2.read(), ap_const_lv1_0))) {
        i2_reg_137 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()))) {
        i2_reg_137 = i_1_reg_458.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_222_p2.read(), ap_const_lv1_0))) {
        in_shift_reg_115 = in_V.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()))) {
        in_shift_reg_115 = in_shift_V_reg_469.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()))) {
        p_Val2_in_reg_148 = in_shift_V_reg_469.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_268_p3.read()))) {
        p_Val2_in_reg_148 = in_shift_reg_115.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()))) {
        shift_1_reg_158 = shift_2_fu_348_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_268_p3.read()))) {
        shift_1_reg_158 = shift_reg_125.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && 
         !esl_seteq<1,1,1>(exitcond_fu_222_p2.read(), ap_const_lv1_0))) {
        shift_reg_125 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()))) {
        shift_reg_125 = shift_2_fu_348_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read()) && esl_seteq<1,1,1>(exitcond_fu_222_p2.read(), ap_const_lv1_0))) {
        c_0_s_reg_80 = c_1_1_fu_252_p3.read();
        c_1_s_reg_92 = c_1_2_fu_260_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        i_1_reg_458 = i_1_fu_276_p2.read();
        tmp_23_reg_454 = i2_reg_137.read().range(1, 1);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_fu_268_p3.read()))) {
        in_shift_V_reg_469 = in_shift_V_fu_340_p3.read();
        sh_assign_reg_463 = sh_assign_fu_286_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        out_bits_0_V_reg_426 = out_bits_0_V_fu_186_p5.read();
        p_Result_s_reg_431 = p_Result_s_fu_210_p5.read();
    }
}

void dut_my_to_float_31_1_s::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
          (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()) || 
           !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void dut_my_to_float_31_1_s::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void dut_my_to_float_31_1_s::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read())))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void dut_my_to_float_31_1_s::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()) || 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read())))) {
        ap_return = result_write_assign_fu_411_p1.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void dut_my_to_float_31_1_s::thread_ap_sig_21() {
    ap_sig_21 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void dut_my_to_float_31_1_s::thread_ap_sig_47() {
    ap_sig_47 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void dut_my_to_float_31_1_s::thread_ap_sig_64() {
    ap_sig_64 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void dut_my_to_float_31_1_s::thread_ap_sig_81() {
    ap_sig_81 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void dut_my_to_float_31_1_s::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_21.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void dut_my_to_float_31_1_s::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_47.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void dut_my_to_float_31_1_s::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_64.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void dut_my_to_float_31_1_s::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_81.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void dut_my_to_float_31_1_s::thread_c_0_fu_244_p3() {
    c_0_fu_244_p3 = esl_ctlz<32,32>(out_bits_V_load_phi_fu_238_p3.read());
}

void dut_my_to_float_31_1_s::thread_c_1_1_fu_252_p3() {
    c_1_1_fu_252_p3 = (!tmp_24_fu_234_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_24_fu_234_p1.read()[0].to_bool())? c_0_s_reg_80.read(): c_0_fu_244_p3.read());
}

void dut_my_to_float_31_1_s::thread_c_1_2_fu_260_p3() {
    c_1_2_fu_260_p3 = (!tmp_24_fu_234_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_24_fu_234_p1.read()[0].to_bool())? c_0_fu_244_p3.read(): c_1_s_reg_92.read());
}

void dut_my_to_float_31_1_s::thread_exitcond_fu_222_p2() {
    exitcond_fu_222_p2 = (!i1_reg_104.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i1_reg_104.read() == ap_const_lv2_2);
}

void dut_my_to_float_31_1_s::thread_i_1_fu_276_p2() {
    i_1_fu_276_p2 = (!i2_reg_137.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i2_reg_137.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dut_my_to_float_31_1_s::thread_i_fu_228_p2() {
    i_fu_228_p2 = (!i1_reg_104.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_reg_104.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void dut_my_to_float_31_1_s::thread_in_shift_V_fu_340_p3() {
    in_shift_V_fu_340_p3 = (!isNeg_fu_294_p3.read()[0].is_01())? sc_lv<31>(): ((isNeg_fu_294_p3.read()[0].to_bool())? tmp_27_fu_332_p1.read(): tmp_28_fu_336_p1.read());
}

void dut_my_to_float_31_1_s::thread_isNeg_fu_294_p3() {
    isNeg_fu_294_p3 = sh_assign_fu_286_p3.read().range(31, 31);
}

void dut_my_to_float_31_1_s::thread_out_bits_0_V_fu_186_p5() {
    out_bits_0_V_fu_186_p5 = esl_partset<32,32,17,32,32>(ap_const_lv32_0, tmp_fu_178_p3.read(), ap_const_lv32_F, ap_const_lv32_1F);
}

void dut_my_to_float_31_1_s::thread_out_bits_V_load_phi_fu_238_p3() {
    out_bits_V_load_phi_fu_238_p3 = (!tmp_24_fu_234_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_24_fu_234_p1.read()[0].to_bool())? p_Result_s_reg_431.read(): out_bits_0_V_reg_426.read());
}

void dut_my_to_float_31_1_s::thread_out_exp_V_fu_393_p3() {
    out_exp_V_fu_393_p3 = (!tmp_17_fu_369_p2.read()[0].is_01())? sc_lv<8>(): ((tmp_17_fu_369_p2.read()[0].to_bool())? ap_const_lv8_0: phitmp_fu_387_p2.read());
}

void dut_my_to_float_31_1_s::thread_p_Result_19_fu_401_p4() {
    p_Result_19_fu_401_p4 = esl_concat<9,23>(esl_concat<1,8>(ap_const_lv1_0, out_exp_V_fu_393_p3.read()), p_Val2_s_fu_359_p4.read());
}

void dut_my_to_float_31_1_s::thread_p_Result_3_fu_168_p4() {
    p_Result_3_fu_168_p4 = in_V.read().range(30, 15);
}

void dut_my_to_float_31_1_s::thread_p_Result_s_fu_210_p5() {
    p_Result_s_fu_210_p5 = esl_partset<32,32,16,32,32>(ap_const_lv32_0, tmp_s_fu_202_p3.read(), ap_const_lv32_10, ap_const_lv32_1F);
}

void dut_my_to_float_31_1_s::thread_p_Val2_in_phi_fu_151_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()))) {
        p_Val2_in_phi_fu_151_p4 = in_shift_V_reg_469.read();
    } else {
        p_Val2_in_phi_fu_151_p4 = p_Val2_in_reg_148.read();
    }
}

void dut_my_to_float_31_1_s::thread_p_Val2_s_fu_359_p4() {
    p_Val2_s_fu_359_p4 = p_Val2_in_phi_fu_151_p4.read().range(29, 7);
}

void dut_my_to_float_31_1_s::thread_phitmp_fu_387_p2() {
    phitmp_fu_387_p2 = (!tmp_13_fu_377_p2.read().is_01() || !tmp_31_fu_383_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(tmp_13_fu_377_p2.read()) - sc_biguint<8>(tmp_31_fu_383_p1.read()));
}

void dut_my_to_float_31_1_s::thread_result_write_assign_fu_411_p1() {
    result_write_assign_fu_411_p1 = p_Result_19_fu_401_p4.read();
}

void dut_my_to_float_31_1_s::thread_sh_assign_2_fu_308_p3() {
    sh_assign_2_fu_308_p3 = (!isNeg_fu_294_p3.read()[0].is_01())? sc_lv<32>(): ((isNeg_fu_294_p3.read()[0].to_bool())? tmp_11_fu_302_p2.read(): sh_assign_fu_286_p3.read());
}

void dut_my_to_float_31_1_s::thread_sh_assign_fu_286_p3() {
    sh_assign_fu_286_p3 = (!tmp_25_fu_282_p1.read()[0].is_01())? sc_lv<32>(): ((tmp_25_fu_282_p1.read()[0].to_bool())? c_1_s_reg_92.read(): c_0_s_reg_80.read());
}

void dut_my_to_float_31_1_s::thread_shift_1_phi_fu_161_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()))) {
        shift_1_phi_fu_161_p4 = shift_2_fu_348_p2.read();
    } else {
        shift_1_phi_fu_161_p4 = shift_1_reg_158.read();
    }
}

void dut_my_to_float_31_1_s::thread_shift_2_fu_348_p2() {
    shift_2_fu_348_p2 = (!shift_reg_125.read().is_01() || !sh_assign_reg_463.read().is_01())? sc_lv<32>(): (sc_biguint<32>(shift_reg_125.read()) + sc_biguint<32>(sh_assign_reg_463.read()));
}

void dut_my_to_float_31_1_s::thread_tmp_11_fu_302_p2() {
    tmp_11_fu_302_p2 = (!ap_const_lv32_0.is_01() || !sh_assign_fu_286_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(sh_assign_fu_286_p3.read()));
}

void dut_my_to_float_31_1_s::thread_tmp_12_fu_316_p1() {
    tmp_12_fu_316_p1 = esl_sext<32,31>(in_shift_reg_115.read());
}

void dut_my_to_float_31_1_s::thread_tmp_13_fu_377_p2() {
    tmp_13_fu_377_p2 = (!ap_const_lv8_7F.is_01() || !tmp_30_fu_374_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(tmp_30_fu_374_p1.read()));
}

void dut_my_to_float_31_1_s::thread_tmp_14_fu_320_p2() {
    tmp_14_fu_320_p2 = (!tmp_12_fu_316_p1.read().is_01() || !sh_assign_2_fu_308_p3.read().is_01())? sc_lv<32>(): sc_bigint<32>(tmp_12_fu_316_p1.read()) >> (unsigned short)sh_assign_2_fu_308_p3.read().to_uint();
}

void dut_my_to_float_31_1_s::thread_tmp_15_fu_326_p2() {
    tmp_15_fu_326_p2 = (!sh_assign_2_fu_308_p3.read().is_01())? sc_lv<32>(): tmp_12_fu_316_p1.read() << (unsigned short)sh_assign_2_fu_308_p3.read().to_uint();
}

void dut_my_to_float_31_1_s::thread_tmp_16_fu_354_p2() {
    tmp_16_fu_354_p2 = (!sh_assign_reg_463.read().is_01() || !ap_const_lv32_10.is_01())? sc_lv<1>(): sc_lv<1>(sh_assign_reg_463.read() == ap_const_lv32_10);
}

void dut_my_to_float_31_1_s::thread_tmp_17_fu_369_p2() {
    tmp_17_fu_369_p2 = (!in_V.read().is_01() || !ap_const_lv31_0.is_01())? sc_lv<1>(): sc_lv<1>(in_V.read() == ap_const_lv31_0);
}

void dut_my_to_float_31_1_s::thread_tmp_22_fu_198_p1() {
    tmp_22_fu_198_p1 = in_V.read().range(15-1, 0);
}

void dut_my_to_float_31_1_s::thread_tmp_23_fu_268_p3() {
    tmp_23_fu_268_p3 = i2_reg_137.read().range(1, 1);
}

void dut_my_to_float_31_1_s::thread_tmp_24_fu_234_p1() {
    tmp_24_fu_234_p1 = i1_reg_104.read().range(1-1, 0);
}

void dut_my_to_float_31_1_s::thread_tmp_25_fu_282_p1() {
    tmp_25_fu_282_p1 = i2_reg_137.read().range(1-1, 0);
}

void dut_my_to_float_31_1_s::thread_tmp_27_fu_332_p1() {
    tmp_27_fu_332_p1 = tmp_14_fu_320_p2.read().range(31-1, 0);
}

void dut_my_to_float_31_1_s::thread_tmp_28_fu_336_p1() {
    tmp_28_fu_336_p1 = tmp_15_fu_326_p2.read().range(31-1, 0);
}

void dut_my_to_float_31_1_s::thread_tmp_30_fu_374_p1() {
    tmp_30_fu_374_p1 = prescale.read().range(8-1, 0);
}

void dut_my_to_float_31_1_s::thread_tmp_31_fu_383_p1() {
    tmp_31_fu_383_p1 = shift_1_phi_fu_161_p4.read().range(8-1, 0);
}

void dut_my_to_float_31_1_s::thread_tmp_fu_178_p3() {
    tmp_fu_178_p3 = esl_concat<16,1>(p_Result_3_fu_168_p4.read(), ap_const_lv1_1);
}

void dut_my_to_float_31_1_s::thread_tmp_s_fu_202_p3() {
    tmp_s_fu_202_p3 = esl_concat<15,1>(tmp_22_fu_198_p1.read(), ap_const_lv1_1);
}

void dut_my_to_float_31_1_s::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            if (esl_seteq<1,1,1>(exitcond_fu_222_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_st4_fsm_3;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_lv1_0, tmp_16_fu_354_p2.read()) || !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_23_reg_454.read()))) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st3_fsm_2;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

