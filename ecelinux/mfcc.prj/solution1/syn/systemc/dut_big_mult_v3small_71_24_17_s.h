// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dut_big_mult_v3small_71_24_17_s_HH_
#define _dut_big_mult_v3small_71_24_17_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dut_big_mult_v3small_71_24_17_s_pp_V.h"
#include "dut_big_mult_v3small_71_24_17_s_pps_V.h"

namespace ap_rtl {

struct dut_big_mult_v3small_71_24_17_s : public sc_module {
    // Port declarations 7
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<95> > ap_return;


    // Module declarations
    dut_big_mult_v3small_71_24_17_s(sc_module_name name);
    SC_HAS_PROCESS(dut_big_mult_v3small_71_24_17_s);

    ~dut_big_mult_v3small_71_24_17_s();

    sc_trace_file* mVcdFile;

    dut_big_mult_v3small_71_24_17_s_pp_V* pp_V_U;
    dut_big_mult_v3small_71_24_17_s_pps_V* pps_V_U;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_24;
    sc_signal< sc_lv<3> > pp_V_address0;
    sc_signal< sc_logic > pp_V_ce0;
    sc_signal< sc_lv<40> > pp_V_q0;
    sc_signal< sc_lv<3> > i_10_fu_162_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_44;
    sc_signal< sc_lv<64> > tmp_64_fu_174_p1;
    sc_signal< sc_lv<64> > tmp_64_reg_429;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_53;
    sc_signal< sc_lv<1> > exitcond14_fu_168_p2;
    sc_signal< sc_lv<3> > i_9_fu_190_p2;
    sc_signal< sc_lv<3> > i_9_reg_444;
    sc_signal< sc_lv<3> > tmp_s_fu_227_p2;
    sc_signal< sc_lv<3> > tmp_s_reg_452;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_72;
    sc_signal< sc_lv<1> > exitcond_fu_221_p2;
    sc_signal< sc_lv<95> > p_Result_22_fu_396_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_90;
    sc_signal< sc_lv<3> > pps_V_address0;
    sc_signal< sc_logic > pps_V_ce0;
    sc_signal< sc_logic > pps_V_we0;
    sc_signal< sc_lv<41> > pps_V_d0;
    sc_signal< sc_lv<41> > pps_V_q0;
    sc_signal< sc_lv<3> > i_reg_110;
    sc_signal< sc_lv<1> > exitcond13_fu_156_p2;
    sc_signal< sc_lv<3> > i_1_reg_121;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_121;
    sc_signal< sc_lv<95> > p_Val2_s_reg_132;
    sc_signal< sc_lv<3> > i_2_reg_144;
    sc_signal< sc_lv<64> > tmp_66_fu_185_p1;
    sc_signal< sc_lv<64> > tmp_70_fu_233_p1;
    sc_signal< sc_lv<41> > tmp_71_cast_fu_216_p1;
    sc_signal< sc_lv<3> > tmp_65_fu_179_p2;
    sc_signal< sc_lv<24> > tmp_fu_196_p4;
    sc_signal< sc_lv<40> > r_V_4_cast_fu_206_p1;
    sc_signal< sc_lv<40> > tmp_67_fu_210_p2;
    sc_signal< sc_lv<2> > tmp_69_fu_238_p1;
    sc_signal< sc_lv<6> > Li_fu_242_p4;
    sc_signal< sc_lv<7> > Li_cast1_fu_252_p1;
    sc_signal< sc_lv<7> > Ui_fu_260_p2;
    sc_signal< sc_lv<17> > tmp_71_fu_270_p1;
    sc_signal< sc_lv<32> > Li_cast_fu_256_p1;
    sc_signal< sc_lv<32> > Ui_1_cast_fu_266_p1;
    sc_signal< sc_lv<7> > tmp_73_fu_284_p1;
    sc_signal< sc_lv<1> > tmp_72_fu_278_p2;
    sc_signal< sc_lv<7> > tmp_74_fu_288_p2;
    sc_signal< sc_lv<7> > tmp_75_fu_294_p3;
    sc_signal< sc_lv<7> > tmp_77_fu_310_p3;
    sc_signal< sc_lv<7> > tmp_76_fu_302_p3;
    sc_signal< sc_lv<7> > tmp_78_fu_318_p2;
    sc_signal< sc_lv<95> > loc_V_fu_274_p1;
    sc_signal< sc_lv<95> > tmp_79_fu_324_p1;
    sc_signal< sc_lv<95> > tmp_82_fu_336_p2;
    sc_signal< sc_lv<95> > tmp_83_fu_342_p4;
    sc_signal< sc_lv<95> > tmp_80_fu_328_p1;
    sc_signal< sc_lv<95> > tmp_81_fu_332_p1;
    sc_signal< sc_lv<95> > tmp_85_fu_360_p2;
    sc_signal< sc_lv<95> > tmp_86_fu_366_p2;
    sc_signal< sc_lv<95> > p_demorgan_fu_372_p2;
    sc_signal< sc_lv<95> > tmp_87_fu_378_p2;
    sc_signal< sc_lv<95> > tmp_84_fu_352_p3;
    sc_signal< sc_lv<95> > tmp_88_fu_384_p2;
    sc_signal< sc_lv<95> > tmp_89_fu_390_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_264;
    sc_signal< sc_lv<27> > tmp_68_fu_402_p1;
    sc_signal< sc_lv<95> > p_Result_s_fu_406_p5;
    sc_signal< sc_lv<95> > ap_return_preg;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_st1_fsm_0;
    static const sc_lv<7> ap_ST_st2_fsm_1;
    static const sc_lv<7> ap_ST_st3_fsm_2;
    static const sc_lv<7> ap_ST_st4_fsm_3;
    static const sc_lv<7> ap_ST_st5_fsm_4;
    static const sc_lv<7> ap_ST_st6_fsm_5;
    static const sc_lv<7> ap_ST_st7_fsm_6;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<41> ap_const_lv41_66317D2BC0;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<7> ap_const_lv7_10;
    static const sc_lv<7> ap_const_lv7_5E;
    static const sc_lv<32> ap_const_lv32_5E;
    static const sc_lv<95> ap_const_lv95_7FFFFFFFFFFFFFFFFFFFFFFF;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_44;
    static const sc_lv<95> ap_const_lv95_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Li_cast1_fu_252_p1();
    void thread_Li_cast_fu_256_p1();
    void thread_Li_fu_242_p4();
    void thread_Ui_1_cast_fu_266_p1();
    void thread_Ui_fu_260_p2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_sig_121();
    void thread_ap_sig_24();
    void thread_ap_sig_264();
    void thread_ap_sig_44();
    void thread_ap_sig_53();
    void thread_ap_sig_72();
    void thread_ap_sig_90();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_exitcond13_fu_156_p2();
    void thread_exitcond14_fu_168_p2();
    void thread_exitcond_fu_221_p2();
    void thread_i_10_fu_162_p2();
    void thread_i_9_fu_190_p2();
    void thread_loc_V_fu_274_p1();
    void thread_p_Result_22_fu_396_p2();
    void thread_p_Result_s_fu_406_p5();
    void thread_p_demorgan_fu_372_p2();
    void thread_pp_V_address0();
    void thread_pp_V_ce0();
    void thread_pps_V_address0();
    void thread_pps_V_ce0();
    void thread_pps_V_d0();
    void thread_pps_V_we0();
    void thread_r_V_4_cast_fu_206_p1();
    void thread_tmp_64_fu_174_p1();
    void thread_tmp_65_fu_179_p2();
    void thread_tmp_66_fu_185_p1();
    void thread_tmp_67_fu_210_p2();
    void thread_tmp_68_fu_402_p1();
    void thread_tmp_69_fu_238_p1();
    void thread_tmp_70_fu_233_p1();
    void thread_tmp_71_cast_fu_216_p1();
    void thread_tmp_71_fu_270_p1();
    void thread_tmp_72_fu_278_p2();
    void thread_tmp_73_fu_284_p1();
    void thread_tmp_74_fu_288_p2();
    void thread_tmp_75_fu_294_p3();
    void thread_tmp_76_fu_302_p3();
    void thread_tmp_77_fu_310_p3();
    void thread_tmp_78_fu_318_p2();
    void thread_tmp_79_fu_324_p1();
    void thread_tmp_80_fu_328_p1();
    void thread_tmp_81_fu_332_p1();
    void thread_tmp_82_fu_336_p2();
    void thread_tmp_83_fu_342_p4();
    void thread_tmp_84_fu_352_p3();
    void thread_tmp_85_fu_360_p2();
    void thread_tmp_86_fu_366_p2();
    void thread_tmp_87_fu_378_p2();
    void thread_tmp_88_fu_384_p2();
    void thread_tmp_89_fu_390_p2();
    void thread_tmp_fu_196_p4();
    void thread_tmp_s_fu_227_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
