; ModuleID = '/home/drl224/ece5775/final/ecelinux/mfcc.prj/solution1/.autopilot/db/a.o.2.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@training_data_V = internal unnamed_addr constant [14000 x i6] [i6 -23, i6 26, i6 21, i6 22, i6 18, i6 7, i6 13, i6 17, i6 13, i6 12, i6 8, i6 5, i6 5, i6 9, i6 16, i6 14, i6 10, i6 10, i6 7, i6 0, i6 3, i6 0, i6 0, i6 1, i6 1, i6 10, i6 10, i6 7, i6 3, i6 9, i6 13, i6 23, i6 26, i6 10, i6 3, i6 6, i6 3, i6 5, i6 8, i6 11, i6 16, i6 23, i6 24, i6 25, i6 25, i6 23, i6 19, i6 24, i6 23, i6 1, i6 6, i6 8, i6 7, i6 9, i6 7, i6 1, i6 4, i6 6, i6 6, i6 3, i6 2, i6 1, i6 4, i6 2, i6 4, i6 5, i6 8, i6 6, i6 5, i6 5, i6 3, i6 5, i6 7, i6 4, i6 4, i6 3, i6 6, i6 6, i6 4, i6 3, i6 2, i6 5, i6 4, i6 4, i6 4, i6 3, i6 2, i6 2, i6 2, i6 3, i6 2, i6 5, i6 5, i6 5, i6 4, i6 4, i6 3, i6 4, i6 5, i6 1, i6 2, i6 4, i6 2, i6 4, i6 3, i6 0, i6 2, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 3, i6 3, i6 5, i6 5, i6 3, i6 0, i6 0, i6 1, i6 0, i6 2, i6 2, i6 1, i6 2, i6 2, i6 0, i6 1, i6 1, i6 2, i6 2, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 2, i6 2, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 3, i6 3, i6 3, i6 3, i6 2, i6 3, i6 2, i6 3, i6 2, i6 1, i6 2, i6 2, i6 1, i6 3, i6 3, i6 3, i6 4, i6 3, i6 0, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 3, i6 2, i6 1, i6 2, i6 4, i6 3, i6 1, i6 3, i6 2, i6 2, i6 2, i6 2, i6 1, i6 2, i6 1, i6 1, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 2, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 2, i6 1, i6 2, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 3, i6 3, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 2, i6 2, i6 4, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 2, i6 2, i6 2, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 2, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 27, i6 16, i6 6, i6 4, i6 13, i6 12, i6 18, i6 17, i6 18, i6 17, i6 19, i6 20, i6 21, i6 22, i6 23, i6 25, i6 25, i6 19, i6 22, i6 25, i6 25, i6 26, i6 26, i6 18, i6 7, i6 17, i6 24, i6 26, i6 23, i6 11, i6 12, i6 16, i6 23, i6 12, i6 10, i6 19, i6 24, i6 27, i6 27, i6 28, i6 29, i6 29, i6 30, i6 27, i6 27, i6 28, i6 28, i6 16, i6 3, i6 1, i6 6, i6 8, i6 4, i6 8, i6 11, i6 14, i6 12, i6 10, i6 10, i6 11, i6 9, i6 9, i6 8, i6 8, i6 8, i6 7, i6 7, i6 9, i6 8, i6 8, i6 8, i6 7, i6 8, i6 11, i6 16, i6 14, i6 10, i6 8, i6 6, i6 14, i6 13, i6 10, i6 8, i6 14, i6 14, i6 10, i6 10, i6 9, i6 8, i6 6, i6 6, i6 5, i6 4, i6 8, i6 7, i6 7, i6 7, i6 8, i6 12, i6 1, i6 2, i6 7, i6 1, i6 4, i6 4, i6 3, i6 3, i6 3, i6 2, i6 3, i6 2, i6 1, i6 1, i6 2, i6 4, i6 4, i6 1, i6 0, i6 2, i6 2, i6 2, i6 2, i6 2, i6 1, i6 1, i6 6, i6 3, i6 2, i6 1, i6 2, i6 4, i6 4, i6 3, i6 2, i6 2, i6 3, i6 4, i6 3, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 3, i6 3, i6 3, i6 3, i6 2, i6 3, i6 2, i6 2, i6 2, i6 1, i6 1, i6 3, i6 2, i6 3, i6 3, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 0, i6 2, i6 3, i6 2, i6 2, i6 0, i6 1, i6 4, i6 3, i6 2, i6 1, i6 2, i6 4, i6 2, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 3, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 2, i6 0, i6 1, i6 0, i6 1, i6 2, i6 1, i6 2, i6 2, i6 2, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 2, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 -27, i6 26, i6 11, i6 7, i6 3, i6 5, i6 1, i6 7, i6 7, i6 16, i6 13, i6 10, i6 18, i6 22, i6 23, i6 24, i6 25, i6 25, i6 25, i6 24, i6 22, i6 8, i6 4, i6 10, i6 6, i6 3, i6 9, i6 8, i6 10, i6 11, i6 19, i6 22, i6 20, i6 14, i6 18, i6 21, i6 23, i6 21, i6 21, i6 22, i6 22, i6 21, i6 21, i6 12, i6 12, i6 19, i6 24, i6 25, i6 26, i6 1, i6 6, i6 9, i6 16, i6 17, i6 15, i6 16, i6 15, i6 13, i6 18, i6 15, i6 9, i6 18, i6 14, i6 8, i6 8, i6 7, i6 6, i6 6, i6 5, i6 6, i6 7, i6 15, i6 17, i6 18, i6 14, i6 10, i6 14, i6 16, i6 14, i6 14, i6 7, i6 4, i6 4, i6 0, i6 0, i6 2, i6 2, i6 2, i6 4, i6 3, i6 3, i6 5, i6 4, i6 15, i6 17, i6 11, i6 6, i6 7, i6 6, i6 1, i6 2, i6 4, i6 2, i6 3, i6 2, i6 4, i6 3, i6 5, i6 4, i6 6, i6 3, i6 3, i6 5, i6 2, i6 2, i6 2, i6 2, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 5, i6 3, i6 3, i6 4, i6 4, i6 5, i6 6, i6 2, i6 2, i6 2, i6 1, i6 0, i6 0, i6 1, i6 3, i6 2, i6 3, i6 4, i6 4, i6 3, i6 2, i6 4, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 0, i6 0, i6 3, i6 3, i6 2, i6 2, i6 2, i6 4, i6 1, i6 1, i6 2, i6 2, i6 2, i6 3, i6 3, i6 2, i6 1, i6 2, i6 3, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 2, i6 2, i6 3, i6 3, i6 3, i6 3, i6 2, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 4, i6 5, i6 5, i6 1, i6 1, i6 2, i6 1, i6 0, i6 2, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 2, i6 2, i6 1, i6 1, i6 2, i6 1, i6 2, i6 2, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 2, i6 2, i6 1, i6 0, i6 0, i6 0, i6 1, i6 2, i6 2, i6 4, i6 3, i6 3, i6 2, i6 2, i6 3, i6 1, i6 1, i6 1, i6 1, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 3, i6 2, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 2, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 2, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 0, i6 1, i6 2, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 -25, i6 26, i6 21, i6 22, i6 23, i6 23, i6 23, i6 23, i6 20, i6 19, i6 22, i6 23, i6 20, i6 19, i6 13, i6 7, i6 12, i6 12, i6 10, i6 8, i6 5, i6 2, i6 4, i6 6, i6 7, i6 7, i6 10, i6 13, i6 15, i6 16, i6 17, i6 20, i6 19, i6 16, i6 15, i6 23, i6 25, i6 25, i6 25, i6 24, i6 25, i6 27, i6 25, i6 26, i6 25, i6 25, i6 26, i6 27, i6 26, i6 1, i6 6, i6 8, i6 7, i6 8, i6 8, i6 6, i6 8, i6 8, i6 12, i6 13, i6 8, i6 6, i6 9, i6 10, i6 10, i6 18, i6 15, i6 10, i6 11, i6 14, i6 13, i6 12, i6 12, i6 10, i6 10, i6 11, i6 11, i6 8, i6 6, i6 6, i6 7, i6 7, i6 7, i6 10, i6 9, i6 8, i6 7, i6 6, i6 7, i6 7, i6 8, i6 7, i6 7, i6 6, i6 6, i6 6, i6 6, i6 6, i6 6, i6 1, i6 2, i6 4, i6 2, i6 3, i6 2, i6 1, i6 3, i6 1, i6 4, i6 5, i6 3, i6 2, i6 4, i6 5, i6 4, i6 3, i6 6, i6 2, i6 4, i6 6, i6 5, i6 4, i6 5, i6 3, i6 3, i6 3, i6 5, i6 3, i6 1, i6 0, i6 3, i6 3, i6 3, i6 4, i6 3, i6 5, i6 4, i6 1, i6 1, i6 3, i6 3, i6 2, i6 2, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 4, i6 2, i6 3, i6 1, i6 1, i6 3, i6 0, i6 2, i6 3, i6 2, i6 1, i6 3, i6 3, i6 1, i6 0, i6 1, i6 1, i6 1, i6 2, i6 4, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 4, i6 3, i6 2, i6 3, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 1, i6 0, i6 3, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 2, i6 2, i6 2, i6 3, i6 2, i6 0, i6 1, i6 1, i6 1, i6 3, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 2, i6 0, i6 0, i6 2, i6 2, i6 1, i6 1, i6 3, i6 2, i6 0, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 1, i6 0, i6 1, i6 2, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 -15, i6 30, i6 25, i6 18, i6 21, i6 23, i6 25, i6 27, i6 25, i6 25, i6 25, i6 25, i6 25, i6 24, i6 24, i6 24, i6 24, i6 23, i6 22, i6 24, i6 24, i6 22, i6 22, i6 22, i6 17, i6 19, i6 21, i6 21, i6 23, i6 22, i6 22, i6 19, i6 19, i6 21, i6 21, i6 22, i6 23, i6 23, i6 22, i6 21, i6 22, i6 20, i6 9, i6 16, i6 19, i6 18, i6 12, i6 18, i6 21, i6 1, i6 9, i6 9, i6 7, i6 13, i6 11, i6 6, i6 6, i6 7, i6 8, i6 6, i6 6, i6 5, i6 5, i6 6, i6 7, i6 5, i6 5, i6 5, i6 5, i6 4, i6 5, i6 4, i6 4, i6 4, i6 8, i6 8, i6 5, i6 5, i6 6, i6 5, i6 4, i6 8, i6 9, i6 5, i6 6, i6 4, i6 4, i6 4, i6 4, i6 7, i6 8, i6 2, i6 0, i6 4, i6 5, i6 4, i6 2, i6 3, i6 4, i6 1, i6 2, i6 2, i6 1, i6 6, i6 6, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 2, i6 3, i6 1, i6 0, i6 0, i6 0, i6 1, i6 2, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 2, i6 2, i6 1, i6 2, i6 3, i6 2, i6 0, i6 5, i6 3, i6 1, i6 1, i6 1, i6 1, i6 1, i6 3, i6 4, i6 3, i6 3, i6 2, i6 3, i6 2, i6 3, i6 2, i6 2, i6 2, i6 2, i6 2, i6 1, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 4, i6 4, i6 3, i6 1, i6 1, i6 0, i6 1, i6 2, i6 2, i6 2, i6 2, i6 1, i6 2, i6 1, i6 0, i6 3, i6 4, i6 3, i6 4, i6 4, i6 4, i6 4, i6 4, i6 4, i6 3, i6 1, i6 1, i6 1, i6 2, i6 0, i6 1, i6 2, i6 2, i6 1, i6 1, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 1, i6 1, i6 2, i6 2, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 3, i6 3, i6 2, i6 2, i6 2, i6 1, i6 2, i6 3, i6 2, i6 1, i6 2, i6 2, i6 2, i6 1, i6 2, i6 3, i6 1, i6 0, i6 0, i6 0, i6 3, i6 4, i6 3, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 2, i6 0, i6 1, i6 0, i6 1, i6 0, i6 2, i6 3, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 2, i6 2, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 2, i6 2, i6 2, i6 1, i6 2, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 -20, i6 28, i6 24, i6 22, i6 23, i6 22, i6 23, i6 23, i6 22, i6 23, i6 24, i6 24, i6 23, i6 20, i6 23, i6 22, i6 22, i6 24, i6 25, i6 24, i6 25, i6 25, i6 24, i6 22, i6 24, i6 25, i6 26, i6 22, i6 18, i6 14, i6 20, i6 12, i6 17, i6 22, i6 23, i6 25, i6 24, i6 24, i6 24, i6 26, i6 25, i6 24, i6 24, i6 23, i6 19, i6 17, i6 17, i6 17, i6 16, i6 1, i6 6, i6 7, i6 6, i6 7, i6 7, i6 6, i6 5, i6 6, i6 7, i6 7, i6 5, i6 5, i6 5, i6 3, i6 5, i6 9, i6 6, i6 4, i6 4, i6 4, i6 5, i6 5, i6 7, i6 9, i6 7, i6 5, i6 5, i6 7, i6 4, i6 2, i6 3, i6 2, i6 4, i6 6, i6 5, i6 5, i6 4, i6 6, i6 5, i6 5, i6 6, i6 7, i6 7, i6 10, i6 13, i6 13, i6 13, i6 12, i6 12, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 3, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 2, i6 2, i6 0, i6 0, i6 3, i6 3, i6 3, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 2, i6 3, i6 2, i6 1, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 1, i6 1, i6 2, i6 1, i6 1, i6 3, i6 3, i6 2, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 3, i6 3, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 2, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 2, i6 1, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 1, i6 2, i6 1, i6 2, i6 3, i6 3, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 3, i6 3, i6 0, i6 0, i6 2, i6 3, i6 1, i6 1, i6 4, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 2, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 2, i6 3, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 -19, i6 28, i6 23, i6 24, i6 25, i6 24, i6 26, i6 25, i6 23, i6 18, i6 21, i6 20, i6 18, i6 23, i6 23, i6 17, i6 19, i6 23, i6 17, i6 9, i6 14, i6 19, i6 14, i6 7, i6 7, i6 13, i6 23, i6 25, i6 26, i6 26, i6 20, i6 14, i6 23, i6 23, i6 27, i6 27, i6 21, i6 11, i6 17, i6 16, i6 17, i6 4, i6 1, i6 11, i6 18, i6 17, i6 11, i6 20, i6 18, i6 1, i6 7, i6 8, i6 7, i6 7, i6 7, i6 7, i6 7, i6 7, i6 8, i6 12, i6 9, i6 10, i6 14, i6 10, i6 9, i6 10, i6 13, i6 10, i6 8, i6 10, i6 10, i6 9, i6 8, i6 11, i6 16, i6 10, i6 10, i6 9, i6 7, i6 8, i6 13, i6 17, i6 14, i6 9, i6 8, i6 8, i6 13, i6 19, i6 16, i6 19, i6 18, i6 7, i6 13, i6 12, i6 7, i6 17, i6 18, i6 13, i6 13, i6 1, i6 2, i6 2, i6 0, i6 0, i6 1, i6 2, i6 0, i6 1, i6 1, i6 1, i6 2, i6 3, i6 4, i6 3, i6 2, i6 2, i6 4, i6 3, i6 0, i6 2, i6 4, i6 4, i6 1, i6 1, i6 1, i6 4, i6 4, i6 2, i6 1, i6 0, i6 3, i6 5, i6 7, i6 3, i6 2, i6 2, i6 1, i6 2, i6 6, i6 4, i6 7, i6 1, i6 2, i6 5, i6 3, i6 2, i6 2, i6 4, i6 4, i6 1, i6 1, i6 1, i6 2, i6 2, i6 3, i6 1, i6 0, i6 0, i6 1, i6 2, i6 2, i6 2, i6 2, i6 3, i6 2, i6 2, i6 1, i6 2, i6 3, i6 2, i6 1, i6 3, i6 3, i6 2, i6 3, i6 4, i6 3, i6 1, i6 0, i6 0, i6 0, i6 0, i6 4, i6 2, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 2, i6 0, i6 3, i6 2, i6 0, i6 0, i6 4, i6 2, i6 1, i6 0, i6 0, i6 1, i6 1, i6 3, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 2, i6 1, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 2, i6 0, i6 0, i6 1, i6 0, i6 2, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 0, i6 1, i6 3, i6 1, i6 2, i6 1, i6 0, i6 0, i6 2, i6 1, i6 1, i6 1, i6 2, i6 2, i6 0, i6 1, i6 1, i6 0, i6 2, i6 1, i6 2, i6 1, i6 2, i6 1, i6 2, i6 2, i6 1, i6 2, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 2, i6 2, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 2, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 26, i6 4, i6 0, i6 1, i6 0, i6 2, i6 1, i6 3, i6 2, i6 3, i6 1, i6 2, i6 2, i6 1, i6 2, i6 3, i6 3, i6 2, i6 2, i6 2, i6 2, i6 3, i6 4, i6 4, i6 3, i6 3, i6 3, i6 3, i6 4, i6 5, i6 5, i6 5, i6 4, i6 5, i6 6, i6 5, i6 5, i6 8, i6 8, i6 7, i6 5, i6 6, i6 6, i6 6, i6 5, i6 6, i6 7, i6 7, i6 7, i6 2, i6 6, i6 6, i6 5, i6 5, i6 6, i6 4, i6 3, i6 2, i6 0, i6 1, i6 5, i6 5, i6 5, i6 5, i6 5, i6 5, i6 4, i6 5, i6 5, i6 4, i6 3, i6 3, i6 3, i6 4, i6 3, i6 2, i6 2, i6 3, i6 2, i6 2, i6 2, i6 2, i6 1, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 2, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 3, i6 5, i6 5, i6 4, i6 4, i6 5, i6 5, i6 5, i6 6, i6 6, i6 6, i6 5, i6 5, i6 6, i6 5, i6 6, i6 6, i6 6, i6 6, i6 6, i6 7, i6 7, i6 6, i6 6, i6 7, i6 7, i6 7, i6 7, i6 7, i6 7, i6 7, i6 7, i6 8, i6 7, i6 7, i6 7, i6 7, i6 8, i6 7, i6 6, i6 6, i6 7, i6 7, i6 7, i6 7, i6 7, i6 7, i6 6, i6 7, i6 2, i6 2, i6 2, i6 4, i6 3, i6 3, i6 2, i6 2, i6 3, i6 4, i6 3, i6 3, i6 3, i6 4, i6 4, i6 5, i6 5, i6 4, i6 5, i6 4, i6 5, i6 5, i6 4, i6 4, i6 4, i6 4, i6 5, i6 6, i6 6, i6 6, i6 6, i6 5, i6 5, i6 6, i6 6, i6 4, i6 5, i6 5, i6 2, i6 2, i6 3, i6 5, i6 5, i6 4, i6 4, i6 5, i6 5, i6 4, i6 4, i6 6, i6 2, i6 0, i6 1, i6 2, i6 2, i6 1, i6 2, i6 3, i6 4, i6 4, i6 3, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 3, i6 3, i6 2, i6 3, i6 2, i6 3, i6 3, i6 2, i6 2, i6 3, i6 3, i6 3, i6 3, i6 3, i6 2, i6 2, i6 3, i6 3, i6 4, i6 4, i6 3, i6 2, i6 3, i6 2, i6 2, i6 2, i6 3, i6 4, i6 3, i6 4, i6 2, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 2, i6 1, i6 2, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 2, i6 1, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 0, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 2, i6 2, i6 2, i6 3, i6 2, i6 2, i6 3, i6 3, i6 3, i6 3, i6 3, i6 4, i6 4, i6 3, i6 4, i6 4, i6 4, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 4, i6 3, i6 3, i6 3, i6 3, i6 3, i6 2, i6 2, i6 3, i6 2, i6 2, i6 3, i6 1, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 2, i6 1, i6 2, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 2, i6 2, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 2, i6 2, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 2, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 31, i6 8, i6 3, i6 4, i6 3, i6 0, i6 1, i6 1, i6 1, i6 3, i6 3, i6 3, i6 3, i6 4, i6 4, i6 4, i6 5, i6 4, i6 4, i6 4, i6 4, i6 5, i6 3, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 2, i6 2, i6 1, i6 2, i6 3, i6 2, i6 3, i6 2, i6 2, i6 2, i6 2, i6 0, i6 2, i6 2, i6 2, i6 1, i6 1, i6 3, i6 3, i6 2, i6 2, i6 4, i6 5, i6 5, i6 4, i6 5, i6 6, i6 4, i6 5, i6 5, i6 3, i6 2, i6 4, i6 4, i6 4, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 2, i6 3, i6 2, i6 3, i6 3, i6 6, i6 5, i6 5, i6 2, i6 3, i6 3, i6 2, i6 3, i6 3, i6 3, i6 2, i6 2, i6 2, i6 3, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 2, i6 4, i6 3, i6 2, i6 2, i6 2, i6 2, i6 4, i6 3, i6 3, i6 4, i6 5, i6 5, i6 5, i6 3, i6 3, i6 4, i6 4, i6 5, i6 5, i6 4, i6 3, i6 2, i6 3, i6 3, i6 2, i6 0, i6 2, i6 3, i6 4, i6 2, i6 3, i6 3, i6 2, i6 3, i6 3, i6 4, i6 4, i6 3, i6 1, i6 1, i6 2, i6 2, i6 3, i6 4, i6 4, i6 4, i6 4, i6 3, i6 3, i6 2, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 2, i6 1, i6 1, i6 2, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 1, i6 0, i6 1, i6 2, i6 2, i6 3, i6 2, i6 2, i6 3, i6 4, i6 3, i6 4, i6 4, i6 5, i6 5, i6 5, i6 6, i6 5, i6 5, i6 6, i6 5, i6 6, i6 3, i6 2, i6 2, i6 3, i6 4, i6 5, i6 4, i6 4, i6 4, i6 5, i6 5, i6 6, i6 5, i6 6, i6 6, i6 5, i6 5, i6 6, i6 6, i6 5, i6 6, i6 7, i6 6, i6 5, i6 4, i6 5, i6 2, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 3, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 2, i6 2, i6 1, i6 1, i6 2, i6 0, i6 1, i6 1, i6 2, i6 2, i6 2, i6 2, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 2, i6 2, i6 2, i6 1, i6 2, i6 2, i6 1, i6 3, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 3, i6 2, i6 3, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 -32, i6 8, i6 4, i6 7, i6 6, i6 6, i6 6, i6 8, i6 7, i6 8, i6 8, i6 7, i6 9, i6 8, i6 7, i6 8, i6 6, i6 6, i6 4, i6 8, i6 8, i6 3, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 3, i6 1, i6 1, i6 1, i6 1, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 4, i6 5, i6 2, i6 4, i6 6, i6 6, i6 4, i6 4, i6 4, i6 5, i6 3, i6 4, i6 3, i6 4, i6 4, i6 3, i6 3, i6 5, i6 5, i6 4, i6 4, i6 3, i6 3, i6 4, i6 6, i6 6, i6 5, i6 5, i6 6, i6 5, i6 5, i6 5, i6 5, i6 5, i6 6, i6 6, i6 6, i6 6, i6 6, i6 5, i6 5, i6 7, i6 7, i6 7, i6 6, i6 5, i6 5, i6 5, i6 5, i6 4, i6 4, i6 3, i6 2, i6 0, i6 0, i6 1, i6 2, i6 1, i6 2, i6 0, i6 2, i6 2, i6 1, i6 1, i6 1, i6 2, i6 2, i6 2, i6 1, i6 2, i6 0, i6 2, i6 2, i6 3, i6 3, i6 4, i6 4, i6 4, i6 2, i6 2, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 2, i6 2, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 2, i6 3, i6 4, i6 4, i6 4, i6 4, i6 3, i6 4, i6 4, i6 3, i6 2, i6 3, i6 3, i6 3, i6 2, i6 3, i6 4, i6 3, i6 2, i6 1, i6 3, i6 3, i6 2, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 2, i6 3, i6 3, i6 2, i6 2, i6 3, i6 2, i6 3, i6 3, i6 2, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 1, i6 3, i6 4, i6 4, i6 4, i6 4, i6 4, i6 4, i6 4, i6 5, i6 4, i6 4, i6 4, i6 5, i6 6, i6 5, i6 5, i6 4, i6 4, i6 4, i6 4, i6 4, i6 4, i6 5, i6 5, i6 5, i6 5, i6 4, i6 3, i6 2, i6 0, i6 2, i6 1, i6 1, i6 2, i6 2, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 2, i6 2, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 2, i6 2, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 2, i6 2, i6 2, i6 3, i6 2, i6 2, i6 2, i6 3, i6 2, i6 2, i6 3, i6 3, i6 3, i6 2, i6 2, i6 2, i6 2, i6 1, i6 0, i6 2, i6 1, i6 2, i6 1, i6 2, i6 2, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 20, i6 4, i6 8, i6 7, i6 7, i6 9, i6 10, i6 9, i6 6, i6 3, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 4, i6 4, i6 5, i6 5, i6 4, i6 2, i6 2, i6 3, i6 4, i6 3, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 2, i6 3, i6 2, i6 2, i6 1, i6 2, i6 3, i6 2, i6 1, i6 2, i6 3, i6 3, i6 3, i6 3, i6 4, i6 3, i6 2, i6 2, i6 4, i6 5, i6 4, i6 4, i6 4, i6 5, i6 2, i6 0, i6 2, i6 2, i6 1, i6 3, i6 2, i6 5, i6 6, i6 6, i6 3, i6 3, i6 3, i6 4, i6 2, i6 3, i6 3, i6 2, i6 4, i6 4, i6 3, i6 4, i6 4, i6 4, i6 4, i6 4, i6 6, i6 6, i6 5, i6 5, i6 6, i6 5, i6 4, i6 4, i6 5, i6 4, i6 4, i6 5, i6 5, i6 5, i6 5, i6 5, i6 6, i6 6, i6 6, i6 5, i6 5, i6 5, i6 2, i6 2, i6 3, i6 4, i6 5, i6 2, i6 1, i6 1, i6 1, i6 2, i6 3, i6 4, i6 4, i6 3, i6 3, i6 3, i6 3, i6 3, i6 2, i6 1, i6 4, i6 2, i6 1, i6 1, i6 2, i6 3, i6 4, i6 3, i6 3, i6 3, i6 4, i6 4, i6 4, i6 2, i6 3, i6 2, i6 4, i6 4, i6 4, i6 4, i6 3, i6 4, i6 4, i6 4, i6 5, i6 5, i6 4, i6 5, i6 5, i6 4, i6 0, i6 1, i6 3, i6 3, i6 4, i6 2, i6 4, i6 3, i6 2, i6 2, i6 3, i6 2, i6 3, i6 3, i6 3, i6 3, i6 2, i6 2, i6 2, i6 1, i6 2, i6 1, i6 1, i6 1, i6 2, i6 1, i6 2, i6 2, i6 3, i6 2, i6 2, i6 3, i6 3, i6 2, i6 2, i6 1, i6 2, i6 1, i6 2, i6 1, i6 2, i6 1, i6 2, i6 2, i6 2, i6 3, i6 2, i6 2, i6 3, i6 2, i6 0, i6 0, i6 2, i6 2, i6 2, i6 2, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 2, i6 1, i6 1, i6 2, i6 0, i6 0, i6 2, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 2, i6 0, i6 3, i6 3, i6 3, i6 2, i6 1, i6 0, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 2, i6 1, i6 1, i6 1, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 2, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 31, i6 8, i6 3, i6 3, i6 3, i6 3, i6 5, i6 3, i6 2, i6 3, i6 8, i6 7, i6 0, i6 3, i6 3, i6 3, i6 3, i6 4, i6 4, i6 3, i6 3, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 2, i6 1, i6 2, i6 3, i6 2, i6 1, i6 0, i6 0, i6 2, i6 2, i6 2, i6 3, i6 3, i6 1, i6 1, i6 0, i6 0, i6 0, i6 2, i6 5, i6 5, i6 5, i6 5, i6 6, i6 5, i6 3, i6 4, i6 4, i6 3, i6 8, i6 11, i6 9, i6 7, i6 7, i6 6, i6 6, i6 5, i6 6, i6 5, i6 5, i6 6, i6 6, i6 5, i6 3, i6 3, i6 4, i6 5, i6 5, i6 5, i6 4, i6 5, i6 5, i6 4, i6 5, i6 5, i6 6, i6 7, i6 6, i6 4, i6 4, i6 4, i6 4, i6 4, i6 4, i6 2, i6 2, i6 2, i6 3, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 3, i6 4, i6 3, i6 4, i6 4, i6 1, i6 1, i6 0, i6 1, i6 1, i6 3, i6 3, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 3, i6 4, i6 3, i6 3, i6 4, i6 4, i6 4, i6 3, i6 1, i6 2, i6 2, i6 5, i6 4, i6 3, i6 4, i6 3, i6 3, i6 3, i6 4, i6 4, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 3, i6 2, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 0, i6 1, i6 2, i6 0, i6 0, i6 1, i6 2, i6 2, i6 2, i6 1, i6 2, i6 2, i6 3, i6 3, i6 2, i6 3, i6 2, i6 2, i6 2, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 3, i6 3, i6 4, i6 4, i6 3, i6 2, i6 2, i6 2, i6 1, i6 2, i6 1, i6 2, i6 3, i6 2, i6 3, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 2, i6 0, i6 0, i6 1, i6 0, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 2, i6 3, i6 3, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 2, i6 3, i6 2, i6 2, i6 1, i6 0, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 2, i6 2, i6 0, i6 1, i6 2, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 3, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 2, i6 2, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 2, i6 2, i6 1, i6 1, i6 1, i6 2, i6 1, i6 2, i6 0, i6 0, i6 2, i6 2, i6 2, i6 2, i6 2, i6 1, i6 1, i6 2, i6 1, i6 0, i6 1, i6 2, i6 2, i6 1, i6 2, i6 2, i6 3, i6 2, i6 2, i6 1, i6 2, i6 2, i6 2, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 1, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 3, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 2, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 2, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 -30, i6 8, i6 3, i6 4, i6 4, i6 3, i6 4, i6 4, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 4, i6 4, i6 4, i6 2, i6 3, i6 5, i6 2, i6 1, i6 0, i6 0, i6 0, i6 3, i6 2, i6 2, i6 2, i6 4, i6 3, i6 4, i6 3, i6 4, i6 4, i6 4, i6 5, i6 3, i6 5, i6 5, i6 5, i6 6, i6 4, i6 2, i6 2, i6 0, i6 5, i6 6, i6 6, i6 2, i6 3, i6 3, i6 4, i6 4, i6 4, i6 4, i6 4, i6 3, i6 3, i6 4, i6 4, i6 4, i6 2, i6 3, i6 3, i6 3, i6 3, i6 5, i6 3, i6 3, i6 1, i6 0, i6 1, i6 2, i6 1, i6 2, i6 3, i6 3, i6 4, i6 3, i6 3, i6 3, i6 4, i6 4, i6 4, i6 4, i6 2, i6 3, i6 3, i6 4, i6 3, i6 3, i6 3, i6 1, i6 0, i6 1, i6 1, i6 1, i6 2, i6 2, i6 0, i6 0, i6 2, i6 3, i6 1, i6 2, i6 2, i6 2, i6 2, i6 2, i6 3, i6 2, i6 4, i6 4, i6 4, i6 3, i6 2, i6 3, i6 3, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 2, i6 2, i6 1, i6 2, i6 3, i6 3, i6 3, i6 3, i6 4, i6 4, i6 4, i6 3, i6 3, i6 3, i6 4, i6 4, i6 2, i6 2, i6 2, i6 2, i6 3, i6 5, i6 4, i6 2, i6 4, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 2, i6 2, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 3, i6 2, i6 1, i6 2, i6 5, i6 3, i6 2, i6 0, i6 1, i6 2, i6 1, i6 2, i6 2, i6 3, i6 3, i6 3, i6 3, i6 3, i6 4, i6 3, i6 3, i6 3, i6 3, i6 2, i6 4, i6 3, i6 3, i6 4, i6 3, i6 3, i6 4, i6 4, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 3, i6 2, i6 3, i6 3, i6 3, i6 3, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 2, i6 0, i6 4, i6 5, i6 6, i6 5, i6 2, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 0, i6 1, i6 1, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 3, i6 1, i6 0, i6 2, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 4, i6 2, i6 2, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 2, i6 1, i6 2, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 2, i6 1, i6 0, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 -30, i6 13, i6 7, i6 8, i6 8, i6 7, i6 3, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 3, i6 5, i6 6, i6 6, i6 6, i6 7, i6 5, i6 6, i6 7, i6 8, i6 8, i6 8, i6 7, i6 6, i6 6, i6 5, i6 3, i6 2, i6 10, i6 1, i6 2, i6 2, i6 2, i6 0, i6 0, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 3, i6 3, i6 6, i6 8, i6 2, i6 5, i6 7, i6 7, i6 6, i6 5, i6 5, i6 4, i6 4, i6 2, i6 0, i6 0, i6 1, i6 5, i6 4, i6 5, i6 4, i6 3, i6 3, i6 4, i6 4, i6 4, i6 3, i6 4, i6 5, i6 6, i6 5, i6 3, i6 4, i6 5, i6 5, i6 2, i6 2, i6 4, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 1, i6 1, i6 3, i6 3, i6 5, i6 4, i6 6, i6 6, i6 1, i6 0, i6 2, i6 2, i6 0, i6 1, i6 2, i6 3, i6 3, i6 0, i6 1, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 3, i6 3, i6 1, i6 2, i6 2, i6 2, i6 2, i6 3, i6 2, i6 3, i6 2, i6 1, i6 1, i6 0, i6 2, i6 0, i6 0, i6 0, i6 1, i6 3, i6 2, i6 2, i6 1, i6 2, i6 2, i6 3, i6 3, i6 3, i6 3, i6 2, i6 1, i6 1, i6 2, i6 2, i6 2, i6 4, i6 3, i6 2, i6 1, i6 2, i6 2, i6 3, i6 4, i6 2, i6 3, i6 5, i6 4, i6 3, i6 3, i6 2, i6 1, i6 2, i6 1, i6 1, i6 2, i6 1, i6 2, i6 2, i6 2, i6 2, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 1, i6 2, i6 3, i6 3, i6 1, i6 1, i6 0, i6 0, i6 2, i6 1, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 2, i6 1, i6 2, i6 4, i6 3, i6 2, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 2, i6 0, i6 3, i6 2, i6 1, i6 1, i6 2, i6 2, i6 1, i6 1, i6 1, i6 1, i6 2, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 1, i6 2, i6 1, i6 0, i6 2, i6 1, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 2, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 2, i6 2, i6 2, i6 1, i6 0, i6 0, i6 2, i6 1, i6 2, i6 1, i6 2, i6 0, i6 2, i6 2, i6 1, i6 2, i6 1, i6 2, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 1, i6 0, i6 1, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 1, i6 1, i6 0, i6 1, i6 2, i6 2, i6 2, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 2, i6 2, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 1, i6 2, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 1, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 1, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 2, i6 0, i6 1, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 0, i6 0, i6 1, i6 1, i6 2, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 0, i6 1, i6 0, i6 2]
@melfb = internal unnamed_addr constant [2580 x float] [float 0.000000e+00, float 0x3FF260AA60000000, float 0x3FFC481700000000, float 0x3FE7BAC720000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FCDBFF040000000, float 0x3FF4226800000000, float 0x3FFC47AE20000000, float 0x3FEAE464A0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FCDC2E340000000, float 0x3FF28DB8C0000000, float 0x3FFF4B5DC0000000, float 0x3FF1C3C9E0000000, float 0x3FD3389B60000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FA6937D20000000, float 0x3FEC785720000000, float 0x3FFB31F8A0000000, float 0x3FF85E9E20000000, float 0x3FE8D512E0000000, float 0x3FAD1EFB60000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FDE85DB80000000, float 0x3FF3958100000000, float 0x3FFF16F000000000, float 0x3FF5D1B720000000, float 0x3FE639C0E0000000, float 0x3FA88BDAA0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FE45CE5C0000000, float 0x3FF4E2EB20000000, float 0x3FFF3BCD40000000, float 0x3FF6C22680000000, float 0x3FEA209AA0000000, float 0x3FCD532620000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FE27C06E0000000, float 0x3FF2EF9DC0000000, float 0x3FFC559B40000000, float 0x3FFA8BAC80000000, float 0x3FF1B089A0000000, float 0x3FE228B6E0000000, float 0x3FA68A5060000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FD5D0D060000000, float 0x3FEC9F40A0000000, float 0x3FF6EB8520000000, float 0x3FFF4BC6A0000000, float 0x3FF88CE700000000, float 0x3FF09BA5E0000000, float 0x3FE1BB0600000000, float 0x3FB4FF0020000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FDDCB9240000000, float 0x3FEEC88A40000000, float 0x3FF7226800000000, float 0x3FFEB020C0000000, float 0x3FF9F0D840000000, float 0x3FF2BDA520000000, float 0x3FE7692F60000000, float 0x3FD34F6160000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FD83D46C0000000, float 0x3FEA84DFC0000000, float 0x3FF44B5DC0000000, float 0x3FFB2C3CA0000000, float 0x3FFE196520000000, float 0x3FF7844D00000000, float 0x3FF11205C0000000, float 0x3FE5839040000000, float 0x3FD2481700000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FBE666660000000, float 0x3FE0F7A4E0000000, float 0x3FEDDBDF80000000, float 0x3FF53E4260000000, float 0x3FFB6E2EC0000000, float 0x3FFE816F00000000, float 0x3FF88EF340000000, float 0x3FF2B923A0000000, float 0x3FE9FE8680000000, float 0x3FDD805E60000000, float 0x3FBDAC4720000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FB7E8DDA0000000, float 0x3FDDC486A0000000, float 0x3FEA8DA3C0000000, float 0x3FF300D1C0000000, float 0x3FF89FBE80000000, float 0x3FFE254600000000, float 0x3FFC6E2EC0000000, float 0x3FF719CE00000000, float 0x3FF1DCC640000000, float 0x3FE96C2260000000, float 0x3FDE944680000000, float 0x3FC548A9C0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FCC8D3AE0000000, float 0x3FE1CC1000000000, float 0x3FEC465E80000000, float 0x3FF349BA60000000, float 0x3FF85AEE60000000, float 0x3FFD56D5C0000000, float 0x3FFDC154C0000000, float 0x3FF8ED9160000000, float 0x3FF42CA580000000, float 0x3FEEFC5040000000, float 0x3FE5C37600000000, float 0x3FD95AD960000000, float 0x3FBDC9C4E0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FC1F505E0000000, float 0x3FDC4A6220000000, float 0x3FE7A6F400000000, float 0x3FF081D7E0000000, float 0x3FF51E4F80000000, float 0x3FF9A92A40000000, float 0x3FFE2339C0000000, float 0x3FFD731900000000, float 0x3FF9196520000000, float 0x3FF4CF4200000000, float 0x3FF093DDA0000000, float 0x3FE8CF56E0000000, float 0x3FE09320E0000000, float 0x3FD0E58A40000000, float 0x3F8B5F1BE0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FC46833C0000000, float 0x3FDB9AE920000000, float 0x3FE661D000000000, float 0x3FEED7F0E0000000, float 0x3FF3985F00000000, float 0x3FF7B645A0000000, float 0x3FFBC6A7E0000000, float 0x3FFFC91D20000000, float 0x3FFC412060000000, float 0x3FF858E220000000, float 0x3FF47CEDA0000000, float 0x3FF0ACD9E0000000, float 0x3FE9D249E0000000, float 0x3FE261E500000000, float 0x3FD6108C40000000, float 0x3FBE262CC0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FCDF559C0000000, float 0x3FDE9CF560000000, float 0x3FE70678C0000000, float 0x3FEEA60D40000000, float 0x3FF316F000000000, float 0x3FF6CF4200000000, float 0x3FFA7BB300000000, float 0x3FFE1D7DC0000000, float 0x3FFE4B5DC0000000, float 0x3FFABF4880000000, float 0x3FF73D70A0000000, float 0x3FF3C56D60000000, float 0x3FF057A780000000, float 0x3FE9E69AE0000000, float 0x3FE330FD00000000, float 0x3FD91BEF40000000, float 0x3FC7F3E040000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FBB478420000000, float 0x3FD5030800000000, float 0x3FE18572A0000000, float 0x3FE8751040000000, float 0x3FEF50EFE0000000, float 0x3FF30CB2A0000000, float 0x3FF667A100000000, float 0x3FF9B923A0000000, float 0x3FFD01A360000000, float 0x3FFFBEDFA0000000, float 0x3FFC87FCC0000000, float 0x3FF959B3E0000000, float 0x3FF6339C00000000, float 0x3FF315B580000000, float 0x3FEFFF5840000000, float 0x3FE9E32A00000000, float 0x3FE3D66280000000, float 0x3FDBB15B60000000, float 0x3FCFA6DF00000000, float 0x3FB04AA540000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F90468440000000, float 0x3FCBC01A40000000, float 0x3FDA99AEA0000000, float 0x3FE39906C0000000, float 0x3FE9D4D400000000, float 0x3FF00068E0000000, float 0x3FF30E5600000000, float 0x3FF614E3C0000000, float 0x3FF913A920000000, float 0x3FFC0B0F20000000, float 0x3FFEFB7EA0000000, float 0x3FFE1B7180000000, float 0x3FFB395820000000, float 0x3FF85E3540000000, float 0x3FF589A020000000, float 0x3FF2BB98C0000000, float 0x3FEFE86840000000, float 0x3FEA663C80000000, float 0x3FE4F09960000000, float 0x3FDF0E5600000000, float 0x3FD453B8E0000000, float 0x3FC3616720000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FBE46F160000000, float 0x3FD31A4BE0000000, float 0x3FDE875500000000, float 0x3FE4ECBFC0000000, float 0x3FEA88A480000000, float 0x3FF00BE0E0000000, float 0x3FF2CCCCC0000000, float 0x3FF58793E0000000, float 0x3FF83C9EE0000000, float 0x3FFAEB1C40000000, float 0x3FFD93DDA0000000, float 0x3FFFC91D20000000, float 0x3FFD2C3CA0000000, float 0x3FFA94AF40000000, float 0x3FF8027520000000, float 0x3FF575F700000000, float 0x3FF2EECC00000000, float 0x3FF06CF420000000, float 0x3FEBE07600000000, float 0x3FE6F14120000000, float 0x3FE20C0AE0000000, float 0x3FDA617C20000000, float 0x3FD0BE61C0000000, float 0x3FBCB923A0000000, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3F8B5AEA40000000, float 0x3FC69F16C0000000, float 0x3FD5AD96A0000000, float 0x3FDFF5ADA0000000, float 0x3FE513E820000000, float 0x3FEA223E20000000, float 0x3FEF2617C0000000, float 0x3FF20F90A0000000, float 0x3FF48793E0000000, float 0x3FF6F9DB20000000, float 0x3FF967A100000000, float 0x3FFBD07C80000000, float 0x3FFE346DC0000000, float 0x3FFF6C2260000000, float 0x3FFD119CE0000000, float 0x3FFABB98C0000000, float 0x3FF86A1620000000, float 0x3FF61D14E0000000, float 0x3FF3D42C40000000, float 0x3FF18FC500000000, float 0x3FEE9F16C0000000, float 0x3FEA271360000000, float 0x3FE5B74140000000, float 0x3FE14FA060000000, float 0x3FD9DFE320000000, float 0x3FD1306A20000000, float 0x3FC1210380000000, float 0.000000e+00], align 16
@llvm_global_ctors_1 = appending global [2 x void ()*] [void ()* @_GLOBAL__I_a, void ()* @_GLOBAL__I_a1881]
@llvm_global_ctors_0 = appending global [2 x i32] [i32 65535, i32 65535]
@dut_str = internal unnamed_addr constant [4 x i8] c"dut\00"
@dct_coeff = internal unnamed_addr constant [400 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0x3FEFE6C4C0000000, float 0x3FEF1DA7C0000000, float 0x3FED906CC0000000, float 0x3FEB48D3A0000000, float 0x3FE8554760000000, float 0x3FE4C84B60000000, float 0x3FE0B851E0000000, float 0x3FD87DD440000000, float 0x3FCDE1B080000000, float 0x3FB415E3A0000000, float 0xBFB415E3A0000000, float 0xBFCDE15CA0000000, float 0xBFD87DD440000000, float 0xBFE0B851E0000000, float 0xBFE4C84B60000000, float 0xBFE8554760000000, float 0xBFEB48D3A0000000, float 0xBFED906CC0000000, float 0xBFEF1DA7C0000000, float 0xBFEFE6C4C0000000, float 0x3FEF9B2800000000, float 0x3FEC832760000000, float 0x3FE6A0A520000000, float 0x3FDD0E2C20000000, float 0x3FC405E600000000, float 0xBFC405E600000000, float 0xBFDD0E2C20000000, float 0xBFE6A0A520000000, float 0xBFEC832760000000, float 0xBFEF9B2800000000, float 0xBFEF9B2800000000, float 0xBFEC832760000000, float 0xBFE6A0A520000000, float 0xBFDD0E2C20000000, float 0xBFC40639E0000000, float 0x3FC405E600000000, float 0x3FDD0E2C20000000, float 0x3FE6A0A520000000, float 0x3FEC832760000000, float 0x3FEF9B2800000000, float 0x3FEF1DA7C0000000, float 0x3FE8554760000000, float 0x3FD87DD440000000, float 0xBFB415E3A0000000, float 0xBFE0B851E0000000, float 0xBFEB48D3A0000000, float 0xBFEFE6C4C0000000, float 0xBFED906CC0000000, float 0xBFE4C84B60000000, float 0xBFCDE1B080000000, float 0x3FCDE15CA0000000, float 0x3FE4C84B60000000, float 0x3FED906CC0000000, float 0x3FEFE6C4C0000000, float 0x3FEB48D3A0000000, float 0x3FE0B851E0000000, float 0x3FB4160520000000, float 0xBFD87DD440000000, float 0xBFE8553260000000, float 0xBFEF1DA7C0000000, float 0x3FEE6F1560000000, float 0x3FE2CF2D00000000, float 0x3E95EE35A0000000, float 0xBFE2CF1800000000, float 0xBFEE6F1560000000, float 0xBFEE6F1560000000, float 0xBFE2CF2D00000000, float 0xBEB072B340000000, float 0x3FE2CF1800000000, float 0x3FEE6F1560000000, float 0x3FEE6F1560000000, float 0x3FE2CF2D00000000, float 0x3EBB69FA00000000, float 0xBFE2CF1800000000, float 0xBFEE6F1560000000, float 0xBFEE6F1560000000, float 0xBFE2CF2D00000000, float 0xBEC3309560000000, float 0x3FE2CF1800000000, float 0x3FEE6F1560000000, float 0x3FED906CC0000000, float 0x3FD87DD440000000, float 0xBFD87DD440000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DD440000000, float 0x3FD87DD440000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DD440000000, float 0xBFD87DD440000000, float 0xBFED906CC0000000, float 0xBFED906CC0000000, float 0xBFD87DFE40000000, float 0x3FD87DD440000000, float 0x3FED906CC0000000, float 0x3FED906CC0000000, float 0x3FD87DFE40000000, float 0xBFD87DD440000000, float 0xBFED906CC0000000, float 0x3FEC832760000000, float 0x3FC405E600000000, float 0xBFE6A0A520000000, float 0xBFEF9B2800000000, float 0xBFDD0E2C20000000, float 0x3FDD0E2C20000000, float 0x3FEF9B2800000000, float 0x3FE6A0A520000000, float 0xBFC405E600000000, float 0xBFEC832760000000, float 0xBFEC832760000000, float 0xBFC40639E0000000, float 0x3FE6A0A520000000, float 0x3FEF9B2800000000, float 0x3FDD0E2C20000000, float 0xBFDD0E2C20000000, float 0xBFEF9B2800000000, float 0xBFE6A0A520000000, float 0x3FC405E600000000, float 0x3FEC831260000000, float 0x3FEB48D3A0000000, float 0xBFB415E3A0000000, float 0xBFED906CC0000000, float 0xBFE8554760000000, float 0x3FCDE15CA0000000, float 0x3FEF1DA7C0000000, float 0x3FE4C84B60000000, float 0xBFD87DD440000000, float 0xBFEFE6C4C0000000, float 0xBFE0B851E0000000, float 0x3FE0B851E0000000, float 0x3FEFE6C4C0000000, float 0x3FD87DFE40000000, float 0xBFE4C84B60000000, float 0xBFEF1DA7C0000000, float 0xBFCDE1B080000000, float 0x3FE8553260000000, float 0x3FED906CC0000000, float 0x3FB41626C0000000, float 0xBFEB48D3A0000000, float 0x3FE9E37DE0000000, float 0xBFD3C6FBE0000000, float -1.000000e+00, float 0xBFD3C6FBE0000000, float 0x3FE9E37DE0000000, float 0x3FE9E37DE0000000, float 0xBFD3C6FBE0000000, float -1.000000e+00, float 0xBFD3C6FBE0000000, float 0x3FE9E37DE0000000, float 0x3FE9E37DE0000000, float 0xBFD3C6D1E0000000, float -1.000000e+00, float 0xBFD3C6FBE0000000, float 0x3FE9E36900000000, float 0x3FE9E37DE0000000, float 0xBFD3C6D1E0000000, float -1.000000e+00, float 0xBFD3C6FBE0000000, float 0x3FE9E36900000000, float 0x3FE8554760000000, float 0xBFE0B851E0000000, float 0xBFED906CC0000000, float 0x3FCDE15CA0000000, float 0x3FEFE6C4C0000000, float 0x3FB4160520000000, float 0xBFEF1DA7C0000000, float 0xBFD87DFE40000000, float 0x3FEB48D3A0000000, float 0x3FE4C84B60000000, float 0xBFE4C84B60000000, float 0xBFEB48D3A0000000, float 0x3FD87DD440000000, float 0x3FEF1DA7C0000000, float 0xBFB415A080000000, float 0xBFEFE6C4C0000000, float 0xBFCDE1B080000000, float 0x3FED906CC0000000, float 0x3FE0B851E0000000, float 0xBFE8553260000000, float 0x3FE6A0A520000000, float 0xBFE6A0A520000000, float 0xBFE6A0A520000000, float 0x3FE6A0A520000000, float 0x3FE6A0A520000000, float 0xBFE6A0A520000000, float 0xBFE6A0A520000000, float 0x3FE6A0A520000000, float 0x3FE6A0A520000000, float 0xBFE6A09020000000, float 0xBFE6A0A520000000, float 0x3FE6A09020000000, float 0x3FE6A0A520000000, float 0xBFE6A09020000000, float 0xBFE6A0A520000000, float 0x3FE6A09020000000, float 0x3FE6A0A520000000, float 0xBFE6A09020000000, float 0xBFE6A0A520000000, float 0x3FE6A09020000000, float 0x3FE4C84B60000000, float 0xBFEB48D3A0000000, float 0xBFD87DD440000000, float 0x3FEF1DA7C0000000, float 0x3FB4160520000000, float 0xBFEFE6C4C0000000, float 0x3FCDE15CA0000000, float 0x3FED906CC0000000, float 0xBFE0B851E0000000, float 0xBFE8554760000000, float 0x3FE8553260000000, float 0x3FE0B851E0000000, float 0xBFED906CC0000000, float 0xBFCDE1B080000000, float 0x3FEFE6C4C0000000, float 0xBFB4158FC0000000, float 0xBFEF1DA7C0000000, float 0x3FD87DD440000000, float 0x3FEB48D3A0000000, float 0xBFE4C83660000000, float 0x3FE2CF2D00000000, float 0xBFEE6F1560000000, float 0xBEB072B340000000, float 0x3FEE6F1560000000, float 0xBFE2CF1800000000, float 0xBFE2CF2D00000000, float 0x3FEE6F1560000000, float 0x3EC8AC2DC0000000, float 0xBFEE6F1560000000, float 0x3FE2CF1800000000, float 0x3FE2CF2D00000000, float 0xBFEE6F1560000000, float 0xBED48F6000000000, float 0x3FEE6F1560000000, float 0xBFE2CF1800000000, float 0xBFE2CF2D00000000, float 0x3FEE6F0060000000, float 0x3EDCC8C4A0000000, float 0xBFEE6F1560000000, float 0x3FE2CF1800000000, float 0x3FE0B851E0000000, float 0xBFEFE6C4C0000000, float 0x3FD87DD440000000, float 0x3FE4C84B60000000, float 0xBFEF1DA7C0000000, float 0x3FCDE15CA0000000, float 0x3FE8554760000000, float 0xBFED906CC0000000, float 0x3FB415A080000000, float 0x3FEB48D3A0000000, float 0xBFEB48D3A0000000, float 0xBFB4163780000000, float 0x3FED906CC0000000, float 0xBFE8553260000000, float 0xBFCDE1B080000000, float 0x3FEF1DA7C0000000, float 0xBFE4C83660000000, float 0xBFD87DFE40000000, float 0x3FEFE6C4C0000000, float 0xBFE0B83D00000000, float 0x3FDD0E2C20000000, float 0xBFEF9B2800000000, float 0x3FE6A0A520000000, float 0x3FC40639E0000000, float 0xBFEC832760000000, float 0x3FEC832760000000, float 0xBFC405E600000000, float 0xBFE6A0A520000000, float 0x3FEF9B2800000000, float 0xBFDD0E2C20000000, float 0xBFDD0E2C20000000, float 0x3FEF9B2800000000, float 0xBFE6A09020000000, float 0xBFC40639E0000000, float 0x3FEC832760000000, float 0xBFEC831260000000, float 0x3FC405E600000000, float 0x3FE6A0A520000000, float 0xBFEF9B2800000000, float 0x3FDD0E0220000000, float 0x3FD87DD440000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFD87DD440000000, float 0xBFD87DFE40000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0x3FD87DD440000000, float 0x3FD87DFE40000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFD87DD440000000, float 0xBFD87DFE40000000, float 0x3FED906CC0000000, float 0xBFED906CC0000000, float 0x3FD87DD440000000, float 0x3FD87DFE40000000, float 0xBFED906CC0000000, float 0x3FED906CC0000000, float 0xBFD87DAA40000000, float 0x3FD3C6FBE0000000, float 0xBFE9E37DE0000000, float 1.000000e+00, float 0xBFE9E37DE0000000, float 0x3FD3C6D1E0000000, float 0x3FD3C6FBE0000000, float 0xBFE9E37DE0000000, float 1.000000e+00, float 0xBFE9E36900000000, float 0x3FD3C6D1E0000000, float 0x3FD3C6FBE0000000, float 0xBFE9E37DE0000000, float 1.000000e+00, float 0xBFE9E36900000000, float 0x3FD3C6D1E0000000, float 0x3FD3C6FBE0000000, float 0xBFE9E37DE0000000, float 1.000000e+00, float 0xBFE9E36900000000, float 0x3FD3C6D1E0000000, float 0x3FCDE1B080000000, float 0xBFE4C84B60000000, float 0x3FED906CC0000000, float 0xBFEFE6C4C0000000, float 0x3FEB48D3A0000000, float 0xBFE0B851E0000000, float 0x3FB415A080000000, float 0x3FD87DFE40000000, float 0xBFE8554760000000, float 0x3FEF1DA7C0000000, float 0xBFEF1DA7C0000000, float 0x3FE8553260000000, float 0xBFD87DD440000000, float 0xBFB41669C0000000, float 0x3FE0B866E0000000, float 0xBFEB48D3A0000000, float 0x3FEFE6C4C0000000, float 0xBFED906CC0000000, float 0x3FE4C83660000000, float 0xBFCDE108C0000000, float 0x3FC405E600000000, float 0xBFDD0E2C20000000, float 0x3FE6A0A520000000, float 0xBFEC832760000000, float 0x3FEF9B2800000000, float 0xBFEF9B2800000000, float 0x3FEC831260000000, float 0xBFE6A09020000000, float 0x3FDD0E2C20000000, float 0xBFC405E600000000, float 0xBFC40639E0000000, float 0x3FDD0E5600000000, float 0xBFE6A0A520000000, float 0x3FEC832760000000, float 0xBFEF9B2800000000, float 0x3FEF9B2800000000, float 0xBFEC831260000000, float 0x3FE6A09020000000, float 0xBFDD0E0220000000, float 0x3FC4059220000000, float 0x3FB415E3A0000000, float 0xBFCDE1B080000000, float 0x3FD87DD440000000, float 0xBFE0B851E0000000, float 0x3FE4C84B60000000, float 0xBFE8554760000000, float 0x3FEB48D3A0000000, float 0xBFED906CC0000000, float 0x3FEF1DA7C0000000, float 0xBFEFE6C4C0000000, float 0x3FEFE6C4C0000000, float 0xBFEF1DA7C0000000, float 0x3FED906CC0000000, float 0xBFEB48D3A0000000, float 0x3FE8553260000000, float 0xBFE4C83660000000, float 0x3FE0B83D00000000, float 0xBFD87DAA40000000, float 0x3FCDE108C0000000, float 0xBFB4151A40000000], align 16
@ap_fifo_str = internal unnamed_addr constant [8 x i8] c"ap_fifo\00"
@p_str = internal unnamed_addr constant [1 x i8] zeroinitializer

define internal fastcc i1 @dut_mel_into_dct([6321 x float]* nocapture %z2) readonly {
  %z = alloca [980 x float], align 4
  %X = alloca [980 x float], align 4
  br label %.loopexit

.loopexit:                                        ; preds = %.preheader, %0
  %frame = phi i6 [ 0, %0 ], [ %frame_1, %.preheader ]
  %exitcond4 = icmp eq i6 %frame, -15
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)
  %frame_1 = add i6 %frame, 1
  br i1 %exitcond4, label %7, label %.preheader6.preheader

.preheader6.preheader:                            ; preds = %.loopexit
  %tmp_cast7 = zext i6 %frame to i10
  %tmp_cast = zext i6 %frame to i14
  %tmp_s = call i13 @_ssdm_op_BitConcatenate.i13.i6.i7(i6 %frame, i7 0)
  %p_shl2_cast = zext i13 %tmp_s to i14
  %tmp_1 = add i14 %tmp_cast, %p_shl2_cast
  br label %.preheader6

.preheader6:                                      ; preds = %2, %.preheader6.preheader
  %j = phi i5 [ %j_1, %2 ], [ 0, %.preheader6.preheader ]
  %phi_mul = phi i10 [ %next_mul, %2 ], [ 0, %.preheader6.preheader ]
  %next_mul = add i10 %phi_mul, 49
  %j_cast = zext i5 %j to i8
  %exitcond3 = icmp eq i5 %j, -12
  %empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)
  %j_1 = add i5 %j, 1
  br i1 %exitcond3, label %.preheader, label %.preheader5.preheader

.preheader5.preheader:                            ; preds = %.preheader6
  %p_shl = call i12 @_ssdm_op_BitConcatenate.i12.i5.i7(i5 %j, i7 0)
  br label %.preheader5

.preheader5:                                      ; preds = %1, %.preheader5.preheader
  %x_assign = phi float [ %sum, %1 ], [ 0.000000e+00, %.preheader5.preheader ]
  %x = phi i8 [ %x_1, %1 ], [ 0, %.preheader5.preheader ]
  %exitcond2 = icmp eq i8 %x, -127
  %empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 129, i64 129, i64 129)
  %x_1 = add i8 %x, 1
  br i1 %exitcond2, label %2, label %1

; <label>:1                                       ; preds = %.preheader5
  %tmp1 = add i8 %x, %j_cast
  %tmp1_cast = zext i8 %tmp1 to i12
  %tmp_8 = add i12 %p_shl, %tmp1_cast
  %tmp_9 = zext i12 %tmp_8 to i64
  %melfb_addr = getelementptr inbounds [2580 x float]* @melfb, i64 0, i64 %tmp_9
  %melfb_load = load float* %melfb_addr, align 4
  %tmp_cast_12 = zext i8 %x to i14
  %tmp_6 = add i14 %tmp_1, %tmp_cast_12
  %tmp_16_cast = zext i14 %tmp_6 to i64
  %z2_addr = getelementptr [6321 x float]* %z2, i64 0, i64 %tmp_16_cast
  %z2_load = load float* %z2_addr, align 4
  %tmp_2 = fmul float %melfb_load, %z2_load
  %sum = fadd float %x_assign, %tmp_2
  br label %.preheader5

; <label>:2                                       ; preds = %.preheader5
  %tmp_i = call float @llvm.log.f32(float %x_assign) nounwind
  %tmp_5 = add i10 %tmp_cast7, %phi_mul
  %tmp_15_cast = zext i10 %tmp_5 to i64
  %z_addr = getelementptr [980 x float]* %z, i64 0, i64 %tmp_15_cast
  store float %tmp_i, float* %z_addr, align 4
  br label %.preheader6

.preheader:                                       ; preds = %.preheader6, %6
  %k = phi i5 [ %k_1, %6 ], [ 0, %.preheader6 ]
  %phi_mul5 = phi i10 [ %next_mul6, %6 ], [ 0, %.preheader6 ]
  %next_mul6 = add i10 %phi_mul5, 49
  %exitcond1 = icmp eq i5 %k, -12
  %empty_13 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)
  %k_1 = add i5 %k, 1
  br i1 %exitcond1, label %.loopexit, label %3

; <label>:3                                       ; preds = %.preheader
  %tmp_3 = icmp eq i5 %k, 0
  %p_s = select i1 %tmp_3, float 0x3FCC9F25C0000000, float 0x3FD43D1360000000
  %p_shl4 = call i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5 %k, i4 0)
  %p_shl5 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %k, i2 0)
  br label %4

; <label>:4                                       ; preds = %5, %3
  %sum1 = phi float [ 0.000000e+00, %3 ], [ %sum_1, %5 ]
  %n2 = phi i5 [ 0, %3 ], [ %n, %5 ]
  %phi_mul3 = phi i10 [ 0, %3 ], [ %next_mul4, %5 ]
  %n2_cast4 = zext i5 %n2 to i7
  %exitcond = icmp eq i5 %n2, -12
  %empty_14 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)
  %n = add i5 %n2, 1
  br i1 %exitcond, label %6, label %5

; <label>:5                                       ; preds = %4
  %next_mul4 = add i10 %phi_mul3, 49
  %tmp_13 = add i10 %tmp_cast7, %phi_mul3
  %tmp_20_cast = zext i10 %tmp_13 to i64
  %z_addr_1 = getelementptr [980 x float]* %z, i64 0, i64 %tmp_20_cast
  %z_load = load float* %z_addr_1, align 4
  %tmp2 = add i7 %p_shl5, %n2_cast4
  %tmp2_cast = zext i7 %tmp2 to i9
  %tmp_4 = add i9 %tmp2_cast, %p_shl4
  %tmp_10 = zext i9 %tmp_4 to i64
  %dct_coeff_addr = getelementptr inbounds [400 x float]* @dct_coeff, i64 0, i64 %tmp_10
  %dct_coeff_load = load float* %dct_coeff_addr, align 4
  %tmp_11 = fmul float %z_load, %dct_coeff_load
  %sum_1 = fadd float %sum1, %tmp_11
  br label %4

; <label>:6                                       ; preds = %4
  %tmp_7 = fmul float %p_s, %sum1
  %tmp_12 = add i10 %tmp_cast7, %phi_mul5
  %tmp_18_cast = zext i10 %tmp_12 to i64
  %X_addr = getelementptr [980 x float]* %X, i64 0, i64 %tmp_18_cast
  store float %tmp_7, float* %X_addr, align 4
  br label %.preheader

; <label>:7                                       ; preds = %.loopexit
  %output1 = call fastcc i1 @dut_knn([980 x float]* %X)
  ret i1 %output1
}

declare i9 @llvm.part.select.i9(i9, i32, i32) nounwind readnone

declare i78 @llvm.part.select.i78(i78, i32, i32) nounwind readnone

declare i32 @llvm.part.select.i32(i32, i32, i32) nounwind readnone

declare float @llvm.log.f32(float) nounwind readonly

declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

define internal fastcc i1 @dut_knn([980 x float]* nocapture %input_r) readonly {
  %training_data2 = alloca [13734 x float], align 4
  %training_instance = alloca [13720 x float], align 4
  %min_distance = alloca [20 x i32], align 16
  %group = alloca [20 x i32], align 16
  %distance = alloca [14 x i32], align 16
  br label %1

; <label>:1                                       ; preds = %2, %0
  %i = phi i5 [ 0, %0 ], [ %i_1, %2 ]
  %exitcond10 = icmp eq i5 %i, -12
  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)
  %i_1 = add i5 %i, 1
  br i1 %exitcond10, label %.preheader19, label %2

; <label>:2                                       ; preds = %1
  %tmp = zext i5 %i to i64
  %min_distance_addr = getelementptr inbounds [20 x i32]* %min_distance, i64 0, i64 %tmp
  store i32 49, i32* %min_distance_addr, align 4
  %group_addr = getelementptr inbounds [20 x i32]* %group, i64 0, i64 %tmp
  store i32 0, i32* %group_addr, align 4
  br label %1

.preheader19:                                     ; preds = %1, %3
  %i1 = phi i4 [ %i_2, %3 ], [ 0, %1 ]
  %exitcond9 = icmp eq i4 %i1, -2
  %empty_15 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)
  %i_2 = add i4 %i1, 1
  br i1 %exitcond9, label %.preheader18, label %3

; <label>:3                                       ; preds = %.preheader19
  %tmp_s = zext i4 %i1 to i64
  %distance_addr = getelementptr inbounds [14 x i32]* %distance, i64 0, i64 %tmp_s
  store i32 0, i32* %distance_addr, align 4
  br label %.preheader19

.preheader18:                                     ; preds = %.preheader19, %5
  %j = phi i4 [ %j_2, %5 ], [ 0, %.preheader19 ]
  %phi_mul3 = phi i9 [ %next_mul4, %5 ], [ 0, %.preheader19 ]
  %phi_mul5 = phi i14 [ %next_mul6, %5 ], [ 0, %.preheader19 ]
  %phi_mul7 = phi i14 [ %next_mul8, %5 ], [ 0, %.preheader19 ]
  %next_mul8 = add i14 %phi_mul7, 981
  %next_mul6 = add i14 %phi_mul5, 1000
  %next_mul4 = add i9 %phi_mul3, 19
  %exitcond8 = icmp eq i4 %j, -2
  %empty_16 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)
  %j_2 = add i4 %j, 1
  br i1 %exitcond8, label %.preheader15, label %.preheader17.preheader

.preheader17.preheader:                           ; preds = %.preheader18
  %tmp_14 = add i14 %phi_mul7, 980
  %tmp_38_cast = zext i14 %tmp_14 to i64
  %training_data2_addr = getelementptr [13734 x float]* %training_data2, i64 0, i64 %tmp_38_cast
  br label %.preheader17

.preheader17:                                     ; preds = %.preheader16, %.preheader17.preheader
  %i2 = phi i5 [ 0, %.preheader17.preheader ], [ %i_4, %.preheader16 ]
  %phi_mul1 = phi i10 [ 0, %.preheader17.preheader ], [ %next_mul2, %.preheader16 ]
  %next_mul2 = add i10 %phi_mul1, 50
  %i2_cast_cast = zext i5 %i2 to i10
  %exitcond7 = icmp eq i5 %i2, -12
  %empty_17 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)
  %i_4 = add i5 %i2, 1
  br i1 %exitcond7, label %5, label %.preheader16

.preheader16:                                     ; preds = %.preheader17, %4
  %k = phi i6 [ %k_2, %4 ], [ 0, %.preheader17 ]
  %phi_mul = phi i10 [ %next_mul, %4 ], [ 0, %.preheader17 ]
  %k_cast1 = zext i6 %k to i10
  %exitcond6 = icmp eq i6 %k, -15
  %empty_18 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)
  %k_2 = add i6 %k, 1
  br i1 %exitcond6, label %.preheader17, label %4

; <label>:4                                       ; preds = %.preheader16
  %tmp1 = add i10 %k_cast1, %phi_mul1
  %tmp1_cast = zext i10 %tmp1 to i14
  %tmp_20 = add i14 %phi_mul5, %tmp1_cast
  %tmp_21 = zext i14 %tmp_20 to i64
  %training_data_V_addr = getelementptr [14000 x i6]* @training_data_V, i64 0, i64 %tmp_21
  %training_data_V_load = load i6* %training_data_V_addr, align 1
  %tmp_22 = zext i6 %training_data_V_load to i32
  %tmp_23 = uitofp i32 %tmp_22 to float
  %next_mul = add i10 %i2_cast_cast, %phi_mul
  %tmp_25_cast = zext i10 %phi_mul to i14
  %tmp_24 = add i14 %phi_mul7, %tmp_25_cast
  %tmp_43_cast = zext i14 %tmp_24 to i64
  %training_data2_addr_1 = getelementptr [13734 x float]* %training_data2, i64 0, i64 %tmp_43_cast
  store float %tmp_23, float* %training_data2_addr_1, align 4
  br label %.preheader16

; <label>:5                                       ; preds = %.preheader17
  %tmp_1 = call i2 @_ssdm_op_PartSelect.i2.i9.i32.i32(i9 %phi_mul3, i32 7, i32 8)
  %tmp_16 = zext i2 %tmp_1 to i32
  %tmp_17 = sitofp i32 %tmp_16 to float
  store float %tmp_17, float* %training_data2_addr, align 4
  br label %.preheader18

.preheader15:                                     ; preds = %.preheader14, %.preheader18
  %i3 = phi i5 [ 0, %.preheader18 ], [ %i_3, %.preheader14 ]
  %phi_mul2 = phi i14 [ 0, %.preheader18 ], [ %next_mul1, %.preheader14 ]
  %next_mul1 = add i14 %phi_mul2, 686
  %i3_cast_cast = zext i5 %i3 to i10
  %exitcond5 = icmp eq i5 %i3, -12
  %empty_19 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)
  %i_3 = add i5 %i3, 1
  br i1 %exitcond5, label %.preheader12, label %.preheader14

.preheader14:                                     ; preds = %.preheader13, %.preheader15
  %j4 = phi i4 [ 0, %.preheader15 ], [ %j_3, %.preheader13 ]
  %phi_mul8 = phi i14 [ 0, %.preheader15 ], [ %next_mul7, %.preheader13 ]
  %next_mul7 = add i14 %phi_mul8, 981
  %j4_cast = zext i4 %j4 to i10
  %exitcond4 = icmp eq i4 %j4, -2
  %empty_20 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)
  %j_3 = add i4 %j4, 1
  br i1 %exitcond4, label %.preheader15, label %.preheader13

.preheader13:                                     ; preds = %.preheader14, %6
  %k5 = phi i6 [ %k_3, %6 ], [ 0, %.preheader14 ]
  %phi_mul9 = phi i10 [ %next_mul10, %6 ], [ 0, %.preheader14 ]
  %phi_mul10 = phi i10 [ %next_mul11, %6 ], [ 0, %.preheader14 ]
  %exitcond3 = icmp eq i6 %k5, -15
  %empty_21 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)
  %k_3 = add i6 %k5, 1
  br i1 %exitcond3, label %.preheader14, label %6

; <label>:6                                       ; preds = %.preheader13
  %next_mul10 = add i10 %i3_cast_cast, %phi_mul9
  %tmp_29_cast = zext i10 %phi_mul9 to i14
  %tmp_18 = add i14 %phi_mul8, %tmp_29_cast
  %tmp_46_cast = zext i14 %tmp_18 to i64
  %training_data2_addr_2 = getelementptr [13734 x float]* %training_data2, i64 0, i64 %tmp_46_cast
  %training_data2_load = load float* %training_data2_addr_2, align 4
  %next_mul11 = add i10 %j4_cast, %phi_mul10
  %tmp_31_cast = zext i10 %phi_mul10 to i14
  %tmp_19 = add i14 %phi_mul2, %tmp_31_cast
  %tmp_47_cast = zext i14 %tmp_19 to i64
  %training_instance_addr = getelementptr [13720 x float]* %training_instance, i64 0, i64 %tmp_47_cast
  store float %training_data2_load, float* %training_instance_addr, align 4
  br label %.preheader13

.preheader12:                                     ; preds = %.preheader15, %10
  %group_zero = phi i32 [ %group_zero_1, %10 ], [ 0, %.preheader15 ]
  %group_one = phi i32 [ %group_one_1, %10 ], [ 0, %.preheader15 ]
  %i6 = phi i5 [ %i_5, %10 ], [ 0, %.preheader15 ]
  %phi_mul4 = phi i10 [ %next_mul5, %10 ], [ 0, %.preheader15 ]
  %phi_mul6 = phi i14 [ %next_mul3, %10 ], [ 0, %.preheader15 ]
  %next_mul3 = add i14 %phi_mul6, 686
  %next_mul5 = add i10 %phi_mul4, 49
  %exitcond2 = icmp eq i5 %i6, -12
  %empty_22 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)
  %i_5 = add i5 %i6, 1
  br i1 %exitcond2, label %11, label %.preheader11.preheader

.preheader11.preheader:                           ; preds = %.preheader12
  %tmp_15 = zext i5 %i6 to i64
  %min_distance_addr_1 = getelementptr inbounds [20 x i32]* %min_distance, i64 0, i64 %tmp_15
  %group_addr_1 = getelementptr inbounds [20 x i32]* %group, i64 0, i64 %tmp_15
  br label %.preheader11

.preheader11:                                     ; preds = %._crit_edge20, %.preheader11.preheader
  %j7 = phi i4 [ %j_4, %._crit_edge20 ], [ 0, %.preheader11.preheader ]
  %phi_mul11 = phi i14 [ %next_mul9, %._crit_edge20 ], [ 0, %.preheader11.preheader ]
  %next_mul9 = add i14 %phi_mul11, 981
  %j7_cast6 = zext i4 %j7 to i10
  %exitcond1 = icmp eq i4 %j7, -2
  %empty_23 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 14, i64 14, i64 14)
  %j_4 = add i4 %j7, 1
  br i1 %exitcond1, label %10, label %.preheader.preheader

.preheader.preheader:                             ; preds = %.preheader11
  %tmp_26 = zext i4 %j7 to i64
  %tmp_27 = add i14 %phi_mul11, 980
  %tmp_45_cast = zext i14 %tmp_27 to i64
  %training_data2_addr_3 = getelementptr [13734 x float]* %training_data2, i64 0, i64 %tmp_45_cast
  %distance_addr_1 = getelementptr inbounds [14 x i32]* %distance, i64 0, i64 %tmp_26
  br label %.preheader

.preheader:                                       ; preds = %._crit_edge, %.preheader.preheader
  %k8 = phi i6 [ %k_4, %._crit_edge ], [ 0, %.preheader.preheader ]
  %phi_mul12 = phi i10 [ %next_mul12, %._crit_edge ], [ 0, %.preheader.preheader ]
  %exitcond = icmp eq i6 %k8, -15
  %empty_24 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)
  %k_4 = add i6 %k8, 1
  br i1 %exitcond, label %9, label %7

; <label>:7                                       ; preds = %.preheader
  %tmp_33_cast = zext i6 %k8 to i10
  %tmp_29 = add i10 %tmp_33_cast, %phi_mul4
  %tmp_48_cast = zext i10 %tmp_29 to i64
  %input_addr = getelementptr [980 x float]* %input_r, i64 0, i64 %tmp_48_cast
  %input_load = load float* %input_addr, align 4
  %next_mul12 = add i10 %phi_mul12, %j7_cast6
  %tmp_35_cast = zext i10 %phi_mul12 to i14
  %tmp_30 = add i14 %tmp_35_cast, %phi_mul6
  %tmp_49_cast = zext i14 %tmp_30 to i64
  %training_instance_addr_1 = getelementptr [13720 x float]* %training_instance, i64 0, i64 %tmp_49_cast
  %training_instance_load = load float* %training_instance_addr_1, align 4
  %x_assign = fsub float %input_load, %training_instance_load
  %p_Val2_s = bitcast float %x_assign to i32
  %tmp_2 = trunc i32 %p_Val2_s to i31
  %tmp_7 = trunc i32 %p_Val2_s to i23
  %p_Result_s = call i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1 false, i31 %tmp_2)
  %ret_i_i_i_i_i = bitcast i32 %p_Result_s to float
  %tmp_3 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_s, i32 23, i32 30)
  %notlhs = icmp ne i8 %tmp_3, -1
  %notrhs = icmp eq i23 %tmp_7, 0
  %tmp_4 = or i1 %notrhs, %notlhs
  %tmp_5 = fcmp olt float %ret_i_i_i_i_i, 0x3FECCCCCC0000000
  %tmp_6 = and i1 %tmp_4, %tmp_5
  br i1 %tmp_6, label %8, label %._crit_edge

; <label>:8                                       ; preds = %7
  %distance_load_1 = load i32* %distance_addr_1, align 4
  %tmp_33 = add nsw i32 %distance_load_1, 1
  store i32 %tmp_33, i32* %distance_addr_1, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %8, %7
  br label %.preheader

; <label>:9                                       ; preds = %.preheader
  %distance_load = load i32* %distance_addr_1, align 4
  %min_distance_load = load i32* %min_distance_addr_1, align 4
  %tmp_28 = icmp slt i32 %distance_load, %min_distance_load
  br i1 %tmp_28, label %_ifconv, label %._crit_edge20

_ifconv:                                          ; preds = %9
  store i32 %distance_load, i32* %min_distance_addr_1, align 4
  %training_data2_load_1 = load float* %training_data2_addr_3, align 4
  %p_Val2_1 = bitcast float %training_data2_load_1 to i32
  %p_Result_1 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %p_Val2_1, i32 31)
  %loc_V = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %p_Val2_1, i32 23, i32 30) nounwind
  %loc_V_1 = trunc i32 %p_Val2_1 to i23
  %p_Result_2 = call i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1 true, i23 %loc_V_1) nounwind
  %tmp_i_i = zext i24 %p_Result_2 to i78
  %tmp_i_i_i_cast2 = zext i8 %loc_V to i9
  %sh_assign = add i9 -127, %tmp_i_i_i_cast2
  %isNeg = call i1 @_ssdm_op_BitSelect.i1.i9.i32(i9 %sh_assign, i32 8)
  %tmp_45_i_i = sub i8 127, %loc_V
  %tmp_45_i_i_cast = sext i8 %tmp_45_i_i to i9
  %sh_assign_1 = select i1 %isNeg, i9 %tmp_45_i_i_cast, i9 %sh_assign
  %sh_assign_1_cast = sext i9 %sh_assign_1 to i32
  %sh_assign_1_cast_cast = sext i9 %sh_assign_1 to i24
  %tmp_46_i_i = zext i32 %sh_assign_1_cast to i78
  %tmp_47_i_i = lshr i24 %p_Result_2, %sh_assign_1_cast_cast
  %tmp_49_i_i = shl i78 %tmp_i_i, %tmp_46_i_i
  %tmp_11 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %tmp_47_i_i, i32 23)
  %tmp_31 = zext i1 %tmp_11 to i32
  %tmp_32 = call i32 @_ssdm_op_PartSelect.i32.i78.i32.i32(i78 %tmp_49_i_i, i32 23, i32 54)
  %p_Val2_4 = select i1 %isNeg, i32 %tmp_31, i32 %tmp_32
  %p_Val2_7_i_i = sub i32 0, %p_Val2_4
  %p_Val2_6 = select i1 %p_Result_1, i32 %p_Val2_7_i_i, i32 %p_Val2_4
  store i32 %p_Val2_6, i32* %group_addr_1, align 4
  br label %._crit_edge20

._crit_edge20:                                    ; preds = %_ifconv, %9
  br label %.preheader11

; <label>:10                                      ; preds = %.preheader11
  %group_load = load i32* %group_addr_1, align 4
  %tmp_25 = icmp eq i32 %group_load, 0
  %group_zero_2 = add nsw i32 %group_zero, 1
  %group_one_2 = add nsw i32 %group_one, 1
  %group_zero_1 = select i1 %tmp_25, i32 %group_zero_2, i32 %group_zero
  %group_one_1 = select i1 %tmp_25, i32 %group_one, i32 %group_one_2
  br label %.preheader12

; <label>:11                                      ; preds = %.preheader12
  %slt = icmp slt i32 %group_one, %group_zero
  %rev = xor i1 %slt, true
  ret i1 %rev
}

define void @dut(i32* %strm_in_V_V, i32* %strm_out_V_V) {
  %empty = call i32 (...)* @_ssdm_op_SpecInterface(i32* %strm_out_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)
  %empty_25 = call i32 (...)* @_ssdm_op_SpecInterface(i32* %strm_in_V_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str)
  call void (...)* @_ssdm_op_SpecBitsMap(i32* %strm_in_V_V), !map !161
  call void (...)* @_ssdm_op_SpecBitsMap(i32* %strm_out_V_V), !map !167
  call void (...)* @_ssdm_op_SpecTopModule([4 x i8]* @dut_str) nounwind
  %stage1 = alloca [6321 x float], align 4
  br label %.loopexit

.loopexit:                                        ; preds = %.preheader, %0
  %i = phi i6 [ 0, %0 ], [ %i_6, %.preheader ]
  %exitcond11 = icmp eq i6 %i, -15
  %empty_26 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)
  %i_6 = add i6 %i, 1
  br i1 %exitcond11, label %2, label %.preheader.preheader

.preheader.preheader:                             ; preds = %.loopexit
  %tmp_cast = zext i6 %i to i14
  %tmp = call i13 @_ssdm_op_BitConcatenate.i13.i6.i7(i6 %i, i7 0)
  %p_shl_cast = zext i13 %tmp to i14
  %tmp_s = add i14 %tmp_cast, %p_shl_cast
  br label %.preheader

.preheader:                                       ; preds = %1, %.preheader.preheader
  %j = phi i8 [ %j_5, %1 ], [ 0, %.preheader.preheader ]
  %exitcond = icmp eq i8 %j, -127
  %empty_27 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 129, i64 129, i64 129)
  %j_5 = add i8 %j, 1
  br i1 %exitcond, label %.loopexit, label %1

; <label>:1                                       ; preds = %.preheader
  %tmp_V_1 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %strm_in_V_V)
  %tmp_V_3_0 = call i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32* %strm_in_V_V)
  %tmp_34 = bitcast i32 %tmp_V_1 to float
  %tmp_38_cast = zext i8 %j to i14
  %tmp_35 = add i14 %tmp_s, %tmp_38_cast
  %tmp_55_cast = zext i14 %tmp_35 to i64
  %stage1_addr = getelementptr [6321 x float]* %stage1, i64 0, i64 %tmp_55_cast
  store float %tmp_34, float* %stage1_addr, align 4
  br label %.preheader

; <label>:2                                       ; preds = %.loopexit
  %output1 = call fastcc i1 @dut_mel_into_dct([6321 x float]* %stage1)
  %output = zext i1 %output1 to i32
  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %strm_out_V_V, i32 %output)
  call void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32* %strm_out_V_V, i32 1)
  ret void
}

define weak void @_ssdm_op_Write.ap_fifo.volatile.i32P(i32*, i32) {
entry:
  %empty = call i32 @_autotb_FifoWrite_i32(i32* %0, i32 %1)
  ret void
}

define weak void @_ssdm_op_SpecTopModule(...) {
entry:
  ret void
}

define weak i32 @_ssdm_op_SpecLoopTripCount(...) {
entry:
  ret i32 0
}

define weak i32 @_ssdm_op_SpecInterface(...) {
entry:
  ret i32 0
}

define weak void @_ssdm_op_SpecBitsMap(...) {
entry:
  ret void
}

define weak i32 @_ssdm_op_Read.ap_fifo.volatile.i32P(i32*) {
entry:
  %empty = call i32 @_autotb_FifoRead_i32(i32* %0)
  ret i32 %empty
}

define weak i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32, i32, i32) nounwind readnone {
entry:
  %empty = call i32 @llvm.part.select.i32(i32 %0, i32 %1, i32 %2)
  %empty_28 = trunc i32 %empty to i8
  ret i8 %empty_28
}

define weak i32 @_ssdm_op_PartSelect.i32.i78.i32.i32(i78, i32, i32) nounwind readnone {
entry:
  %empty = call i78 @llvm.part.select.i78(i78 %0, i32 %1, i32 %2)
  %empty_29 = trunc i78 %empty to i32
  ret i32 %empty_29
}

declare i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32, i32, i32) nounwind readnone

declare i23 @_ssdm_op_PartSelect.i23.i32.i32.i32(i32, i32, i32) nounwind readnone

define weak i2 @_ssdm_op_PartSelect.i2.i9.i32.i32(i9, i32, i32) nounwind readnone {
entry:
  %empty = call i9 @llvm.part.select.i9(i9 %0, i32 %1, i32 %2)
  %empty_30 = trunc i9 %empty to i2
  ret i2 %empty_30
}

define weak i1 @_ssdm_op_BitSelect.i1.i9.i32(i9, i32) nounwind readnone {
entry:
  %empty = trunc i32 %1 to i9
  %empty_31 = shl i9 1, %empty
  %empty_32 = and i9 %0, %empty_31
  %empty_33 = icmp ne i9 %empty_32, 0
  ret i1 %empty_33
}

define weak i1 @_ssdm_op_BitSelect.i1.i32.i32(i32, i32) nounwind readnone {
entry:
  %empty = shl i32 1, %1
  %empty_34 = and i32 %0, %empty
  %empty_35 = icmp ne i32 %empty_34, 0
  ret i1 %empty_35
}

define weak i1 @_ssdm_op_BitSelect.i1.i24.i32(i24, i32) nounwind readnone {
entry:
  %empty = trunc i32 %1 to i24
  %empty_36 = shl i24 1, %empty
  %empty_37 = and i24 %0, %empty_36
  %empty_38 = icmp ne i24 %empty_37, 0
  ret i1 %empty_38
}

define weak i9 @_ssdm_op_BitConcatenate.i9.i5.i4(i5, i4) nounwind readnone {
entry:
  %empty = zext i5 %0 to i9
  %empty_39 = zext i4 %1 to i9
  %empty_40 = shl i9 %empty, 4
  %empty_41 = or i9 %empty_40, %empty_39
  ret i9 %empty_41
}

define weak i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5, i2) nounwind readnone {
entry:
  %empty = zext i5 %0 to i7
  %empty_42 = zext i2 %1 to i7
  %empty_43 = shl i7 %empty, 2
  %empty_44 = or i7 %empty_43, %empty_42
  ret i7 %empty_44
}

define weak i32 @_ssdm_op_BitConcatenate.i32.i1.i31(i1, i31) nounwind readnone {
entry:
  %empty = zext i1 %0 to i32
  %empty_45 = zext i31 %1 to i32
  %empty_46 = shl i32 %empty, 31
  %empty_47 = or i32 %empty_46, %empty_45
  ret i32 %empty_47
}

define weak i24 @_ssdm_op_BitConcatenate.i24.i1.i23(i1, i23) nounwind readnone {
entry:
  %empty = zext i1 %0 to i24
  %empty_48 = zext i23 %1 to i24
  %empty_49 = shl i24 %empty, 23
  %empty_50 = or i24 %empty_49, %empty_48
  ret i24 %empty_50
}

define weak i13 @_ssdm_op_BitConcatenate.i13.i6.i7(i6, i7) nounwind readnone {
entry:
  %empty = zext i6 %0 to i13
  %empty_51 = zext i7 %1 to i13
  %empty_52 = shl i13 %empty, 7
  %empty_53 = or i13 %empty_52, %empty_51
  ret i13 %empty_53
}

define weak i12 @_ssdm_op_BitConcatenate.i12.i5.i7(i5, i7) nounwind readnone {
entry:
  %empty = zext i5 %0 to i12
  %empty_54 = zext i7 %1 to i12
  %empty_55 = shl i12 %empty, 7
  %empty_56 = or i12 %empty_55, %empty_54
  ret i12 %empty_56
}

declare i32 @_autotb_FifoWrite_i32(i32*, i32)

declare i32 @_autotb_FifoRead_i32(i32*)

declare void @_GLOBAL__I_a1881() nounwind section ".text.startup"

declare void @_GLOBAL__I_a() nounwind section ".text.startup"

!opencl.kernels = !{!0, !7, !12, !18, !21, !27, !27, !33, !33, !21, !21, !37, !40, !21, !21, !42, !45, !45, !40, !51, !53, !56, !58, !58, !21, !61, !21, !21, !21, !21, !21, !64, !64, !21, !21, !66, !21, !69, !71, !71, !21, !21, !21, !21, !72, !72, !75, !21, !77, !77, !21, !78, !21, !21, !21, !81, !81, !83, !83, !85, !21, !21, !21, !87, !77, !77, !21, !90, !21, !21, !21, !92, !92, !94, !94, !96, !21, !21, !21, !21, !21, !21, !98, !21, !21, !21, !72, !72, !75, !98, !21, !72, !72, !75, !98, !21, !100, !100, !100, !21, !100, !100, !100, !21, !100, !100, !100, !21, !100, !100, !100, !100, !100, !100, !100, !100, !100, !21, !100, !100, !100, !21, !100, !100, !100, !21, !100, !100, !100, !21, !100, !100, !100, !21, !100, !100, !100, !100, !100, !100, !104, !104, !104, !21, !100, !100, !100, !21, !100, !100, !100, !21, !100, !100, !100, !21, !104, !104, !104, !21, !104, !104, !104, !21, !21, !42, !108, !108, !64, !64, !21, !21, !110, !110, !21, !21, !111, !111, !114, !21, !21, !21, !21, !42, !42, !117, !117, !119, !121, !121, !21, !21, !21, !21, !123, !125, !125, !42, !42, !126, !126, !128, !130, !130, !21, !21, !131, !133, !133, !42, !134, !134, !136, !21, !138, !138, !56, !136, !141, !141, !143, !145, !145, !147, !149, !149, !21, !21, !69, !71, !71, !42, !147, !69, !71, !71, !42, !150, !21, !56, !136, !33, !33, !21, !21, !21, !21, !21, !21, !21, !111, !21, !21, !21, !21, !152, !152}
!hls.encrypted.func = !{}
!llvm.map.gv = !{!154}

!0 = metadata !{null, metadata !1, metadata !2, metadata !3, metadata !4, metadata !5, metadata !6}
!1 = metadata !{metadata !"kernel_arg_addr_space", i32 0, i32 0}
!2 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none"}
!3 = metadata !{metadata !"kernel_arg_type", metadata !"hls::stream<bit32_t> &", metadata !"hls::stream<bit32_t> &"}
!4 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !""}
!5 = metadata !{metadata !"kernel_arg_name", metadata !"strm_in", metadata !"strm_out"}
!6 = metadata !{metadata !"reqd_work_group_size", i32 1, i32 1, i32 1}
!7 = metadata !{null, metadata !8, metadata !2, metadata !9, metadata !10, metadata !11, metadata !6}
!8 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1}
!9 = metadata !{metadata !"kernel_arg_type", metadata !"float*", metadata !"float [129]*"}
!10 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const", metadata !""}
!11 = metadata !{metadata !"kernel_arg_name", metadata !"sound_file", metadata !"output"}
!12 = metadata !{null, metadata !13, metadata !14, metadata !15, metadata !16, metadata !17, metadata !6}
!13 = metadata !{metadata !"kernel_arg_addr_space", i32 1}
!14 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none"}
!15 = metadata !{metadata !"kernel_arg_type", metadata !"float [129]*"}
!16 = metadata !{metadata !"kernel_arg_type_qual", metadata !""}
!17 = metadata !{metadata !"kernel_arg_name", metadata !"z2"}
!18 = metadata !{null, metadata !13, metadata !14, metadata !19, metadata !16, metadata !20, metadata !6}
!19 = metadata !{metadata !"kernel_arg_type", metadata !"float [49]*"}
!20 = metadata !{metadata !"kernel_arg_name", metadata !"input"}
!21 = metadata !{null, metadata !22, metadata !23, metadata !24, metadata !25, metadata !26, metadata !6}
!22 = metadata !{metadata !"kernel_arg_addr_space"}
!23 = metadata !{metadata !"kernel_arg_access_qual"}
!24 = metadata !{metadata !"kernel_arg_type"}
!25 = metadata !{metadata !"kernel_arg_type_qual"}
!26 = metadata !{metadata !"kernel_arg_name"}
!27 = metadata !{null, metadata !28, metadata !29, metadata !30, metadata !31, metadata !32, metadata !6}
!28 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 1, i32 1, i32 1}
!29 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none", metadata !"none"}
!30 = metadata !{metadata !"kernel_arg_type", metadata !"complex<float>*", metadata !"complex<float>*", metadata !"ip_fft::status_t<config1>*", metadata !"ip_fft::config_t<config1>*"}
!31 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !"", metadata !""}
!32 = metadata !{metadata !"kernel_arg_name", metadata !"xn", metadata !"xk", metadata !"status", metadata !"config_ch"}
!33 = metadata !{null, metadata !34, metadata !14, metadata !35, metadata !16, metadata !36, metadata !6}
!34 = metadata !{metadata !"kernel_arg_addr_space", i32 0}
!35 = metadata !{metadata !"kernel_arg_type", metadata !"uint"}
!36 = metadata !{metadata !"kernel_arg_name", metadata !"val"}
!37 = metadata !{null, metadata !34, metadata !14, metadata !38, metadata !16, metadata !39, metadata !6}
!38 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_uint<8> &"}
!39 = metadata !{metadata !"kernel_arg_name", metadata !"op2"}
!40 = metadata !{null, metadata !34, metadata !14, metadata !35, metadata !16, metadata !41, metadata !6}
!41 = metadata !{metadata !"kernel_arg_name", metadata !"ch"}
!42 = metadata !{null, metadata !1, metadata !2, metadata !43, metadata !4, metadata !44, metadata !6}
!43 = metadata !{metadata !"kernel_arg_type", metadata !"int", metadata !"int"}
!44 = metadata !{metadata !"kernel_arg_name", metadata !"Hi", metadata !"Lo"}
!45 = metadata !{null, metadata !46, metadata !47, metadata !48, metadata !49, metadata !50, metadata !6}
!46 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0, i32 0}
!47 = metadata !{metadata !"kernel_arg_access_qual", metadata !"none", metadata !"none", metadata !"none"}
!48 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<16, false>*", metadata !"int", metadata !"int"}
!49 = metadata !{metadata !"kernel_arg_type_qual", metadata !"", metadata !"", metadata !""}
!50 = metadata !{metadata !"kernel_arg_name", metadata !"bv", metadata !"h", metadata !"l"}
!51 = metadata !{null, metadata !34, metadata !14, metadata !35, metadata !16, metadata !52, metadata !6}
!52 = metadata !{metadata !"kernel_arg_name", metadata !"scaling_opt"}
!53 = metadata !{null, metadata !1, metadata !2, metadata !54, metadata !4, metadata !55, metadata !6}
!54 = metadata !{metadata !"kernel_arg_type", metadata !"uint", metadata !"uint"}
!55 = metadata !{metadata !"kernel_arg_name", metadata !"sch", metadata !"ch"}
!56 = metadata !{null, metadata !34, metadata !14, metadata !57, metadata !16, metadata !36, metadata !6}
!57 = metadata !{metadata !"kernel_arg_type", metadata !"ulong long"}
!58 = metadata !{null, metadata !34, metadata !14, metadata !59, metadata !16, metadata !60, metadata !6}
!59 = metadata !{metadata !"kernel_arg_type", metadata !"ap_ulong"}
!60 = metadata !{metadata !"kernel_arg_name", metadata !"op"}
!61 = metadata !{null, metadata !1, metadata !2, metadata !62, metadata !4, metadata !63, metadata !6}
!62 = metadata !{metadata !"kernel_arg_type", metadata !"_Bool", metadata !"uint"}
!63 = metadata !{metadata !"kernel_arg_name", metadata !"dir", metadata !"ch"}
!64 = metadata !{null, metadata !34, metadata !14, metadata !65, metadata !16, metadata !36, metadata !6}
!65 = metadata !{metadata !"kernel_arg_type", metadata !"int"}
!66 = metadata !{null, metadata !34, metadata !14, metadata !67, metadata !16, metadata !68, metadata !6}
!67 = metadata !{metadata !"kernel_arg_type", metadata !"const struct ap_uint<32> &"}
!68 = metadata !{metadata !"kernel_arg_name", metadata !"din"}
!69 = metadata !{null, metadata !34, metadata !14, metadata !70, metadata !16, metadata !36, metadata !6}
!70 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<32, false> &"}
!71 = metadata !{null, metadata !34, metadata !14, metadata !70, metadata !16, metadata !60, metadata !6}
!72 = metadata !{null, metadata !34, metadata !14, metadata !73, metadata !16, metadata !74, metadata !6}
!73 = metadata !{metadata !"kernel_arg_type", metadata !"double"}
!74 = metadata !{metadata !"kernel_arg_name", metadata !"v"}
!75 = metadata !{null, metadata !34, metadata !14, metadata !73, metadata !16, metadata !76, metadata !6}
!76 = metadata !{metadata !"kernel_arg_name", metadata !"d"}
!77 = metadata !{null, metadata !34, metadata !14, metadata !65, metadata !16, metadata !60, metadata !6}
!78 = metadata !{null, metadata !1, metadata !2, metadata !79, metadata !4, metadata !80, metadata !6}
!79 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<1, false> &", metadata !"const ap_int_base<54, true> &"}
!80 = metadata !{metadata !"kernel_arg_name", metadata !"op", metadata !"op2"}
!81 = metadata !{null, metadata !34, metadata !14, metadata !82, metadata !16, metadata !60, metadata !6}
!82 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<54, true> &"}
!83 = metadata !{null, metadata !34, metadata !14, metadata !84, metadata !16, metadata !60, metadata !6}
!84 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<1, false> &"}
!85 = metadata !{null, metadata !34, metadata !14, metadata !86, metadata !16, metadata !39, metadata !6}
!86 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<55, true> &"}
!87 = metadata !{null, metadata !1, metadata !2, metadata !88, metadata !4, metadata !89, metadata !6}
!88 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<11, false> &", metadata !"int"}
!89 = metadata !{metadata !"kernel_arg_name", metadata !"op", metadata !"i_op"}
!90 = metadata !{null, metadata !1, metadata !2, metadata !91, metadata !4, metadata !80, metadata !6}
!91 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<11, false> &", metadata !"const ap_int_base<32, true> &"}
!92 = metadata !{null, metadata !34, metadata !14, metadata !93, metadata !16, metadata !60, metadata !6}
!93 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<32, true> &"}
!94 = metadata !{null, metadata !34, metadata !14, metadata !95, metadata !16, metadata !60, metadata !6}
!95 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<11, false> &"}
!96 = metadata !{null, metadata !34, metadata !14, metadata !97, metadata !16, metadata !39, metadata !6}
!97 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<33, true> &"}
!98 = metadata !{null, metadata !34, metadata !14, metadata !73, metadata !16, metadata !99, metadata !6}
!99 = metadata !{metadata !"kernel_arg_name", metadata !"pf"}
!100 = metadata !{null, metadata !13, metadata !14, metadata !101, metadata !102, metadata !103, metadata !6}
!101 = metadata !{metadata !"kernel_arg_type", metadata !"char*"}
!102 = metadata !{metadata !"kernel_arg_type_qual", metadata !"const"}
!103 = metadata !{metadata !"kernel_arg_name", metadata !"str"}
!104 = metadata !{null, metadata !105, metadata !2, metadata !106, metadata !10, metadata !107, metadata !6}
!105 = metadata !{metadata !"kernel_arg_addr_space", i32 1, i32 0}
!106 = metadata !{metadata !"kernel_arg_type", metadata !"char*", metadata !"signed char"}
!107 = metadata !{metadata !"kernel_arg_name", metadata !"str", metadata !"radix"}
!108 = metadata !{null, metadata !46, metadata !47, metadata !109, metadata !49, metadata !50, metadata !6}
!109 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<64, false>*", metadata !"int", metadata !"int"}
!110 = metadata !{null, metadata !34, metadata !14, metadata !73, metadata !16, metadata !36, metadata !6}
!111 = metadata !{null, metadata !34, metadata !14, metadata !112, metadata !16, metadata !113, metadata !6}
!112 = metadata !{metadata !"kernel_arg_type", metadata !"float"}
!113 = metadata !{metadata !"kernel_arg_name", metadata !"x"}
!114 = metadata !{null, metadata !1, metadata !2, metadata !115, metadata !4, metadata !116, metadata !6}
!115 = metadata !{metadata !"kernel_arg_type", metadata !"float", metadata !"float"}
!116 = metadata !{metadata !"kernel_arg_name", metadata !"x", metadata !"y"}
!117 = metadata !{null, metadata !46, metadata !47, metadata !118, metadata !49, metadata !50, metadata !6}
!118 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<23, false>*", metadata !"int", metadata !"int"}
!119 = metadata !{null, metadata !34, metadata !14, metadata !120, metadata !16, metadata !36, metadata !6}
!120 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<23, false> &"}
!121 = metadata !{null, metadata !34, metadata !14, metadata !120, metadata !16, metadata !122, metadata !6}
!122 = metadata !{metadata !"kernel_arg_name", metadata !"ref"}
!123 = metadata !{null, metadata !34, metadata !14, metadata !124, metadata !16, metadata !36, metadata !6}
!124 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<23, false> &"}
!125 = metadata !{null, metadata !34, metadata !14, metadata !124, metadata !16, metadata !60, metadata !6}
!126 = metadata !{null, metadata !46, metadata !47, metadata !127, metadata !49, metadata !50, metadata !6}
!127 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<8, false>*", metadata !"int", metadata !"int"}
!128 = metadata !{null, metadata !34, metadata !14, metadata !129, metadata !16, metadata !36, metadata !6}
!129 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<8, false> &"}
!130 = metadata !{null, metadata !34, metadata !14, metadata !129, metadata !16, metadata !122, metadata !6}
!131 = metadata !{null, metadata !34, metadata !14, metadata !132, metadata !16, metadata !36, metadata !6}
!132 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_int_base<8, false> &"}
!133 = metadata !{null, metadata !34, metadata !14, metadata !132, metadata !16, metadata !60, metadata !6}
!134 = metadata !{null, metadata !46, metadata !47, metadata !135, metadata !49, metadata !50, metadata !6}
!135 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<32, false>*", metadata !"int", metadata !"int"}
!136 = metadata !{null, metadata !34, metadata !14, metadata !65, metadata !16, metadata !137, metadata !6}
!137 = metadata !{metadata !"kernel_arg_name", metadata !"index"}
!138 = metadata !{null, metadata !105, metadata !2, metadata !139, metadata !4, metadata !140, metadata !6}
!139 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<1, false>*", metadata !"int"}
!140 = metadata !{metadata !"kernel_arg_name", metadata !"bv", metadata !"index"}
!141 = metadata !{null, metadata !105, metadata !2, metadata !142, metadata !4, metadata !140, metadata !6}
!142 = metadata !{metadata !"kernel_arg_type", metadata !"ap_int_base<32, false>*", metadata !"int"}
!143 = metadata !{null, metadata !34, metadata !14, metadata !144, metadata !16, metadata !39, metadata !6}
!144 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_uint<1> &"}
!145 = metadata !{null, metadata !34, metadata !14, metadata !112, metadata !16, metadata !146, metadata !6}
!146 = metadata !{metadata !"kernel_arg_name", metadata !"f"}
!147 = metadata !{null, metadata !34, metadata !14, metadata !148, metadata !16, metadata !36, metadata !6}
!148 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_range_ref<32, false> &"}
!149 = metadata !{null, metadata !34, metadata !14, metadata !148, metadata !16, metadata !122, metadata !6}
!150 = metadata !{null, metadata !34, metadata !14, metadata !151, metadata !16, metadata !36, metadata !6}
!151 = metadata !{metadata !"kernel_arg_type", metadata !"const ap_bit_ref<32, false> &"}
!152 = metadata !{null, metadata !1, metadata !2, metadata !115, metadata !4, metadata !153, metadata !6}
!153 = metadata !{metadata !"kernel_arg_name", metadata !"__r", metadata !"__i"}
!154 = metadata !{metadata !155, [2 x i32]* @llvm_global_ctors_0}
!155 = metadata !{metadata !156}
!156 = metadata !{i32 0, i32 31, metadata !157}
!157 = metadata !{metadata !158}
!158 = metadata !{metadata !"llvm.global_ctors.0", metadata !159, metadata !"", i32 0, i32 31}
!159 = metadata !{metadata !160}
!160 = metadata !{i32 0, i32 1, i32 1}
!161 = metadata !{metadata !162}
!162 = metadata !{i32 0, i32 31, metadata !163}
!163 = metadata !{metadata !164}
!164 = metadata !{metadata !"strm_in.V.V", metadata !165, metadata !"uint32", i32 0, i32 31}
!165 = metadata !{metadata !166}
!166 = metadata !{i32 0, i32 0, i32 1}
!167 = metadata !{metadata !168}
!168 = metadata !{i32 0, i32 31, metadata !169}
!169 = metadata !{metadata !170}
!170 = metadata !{metadata !"strm_out.V.V", metadata !165, metadata !"uint32", i32 0, i32 31}
