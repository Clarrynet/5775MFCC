

================================================================
== Vivado HLS Report for 'dut_mfcc'
================================================================
* Date:           Sat Dec 10 16:18:24 2016

* Version:        2016.2 (Build 1577090 on Thu Jun 02 16:59:10 MDT 2016)
* Project:        mfcc.prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.75|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  3640885|  3719565|  3640885|  3719565|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+---------------+-----------+-----------+------+----------+
        |                 |      Latency      |   Iteration   |  Initiation Interval  | Trip |          |
        |    Loop Name    |   min   |   max   |    Latency    |  achieved |   target  | Count| Pipelined|
        +-----------------+---------+---------+---------------+-----------+-----------+------+----------+
        |- Loop 1         |    63488|    63488|            248|          -|          -|   256|    no    |
        | + Loop 1.1      |      245|      245|              5|          -|          -|    49|    no    |
        |- Loop 2         |    25600|    25600|            100|          -|          -|   256|    no    |
        | + Loop 2.1      |       98|       98|              2|          -|          -|    49|    no    |
        |- Loop 3         |      255|      255|              1|          -|          -|   256|    no    |
        |- Loop 4         |      255|      255|              1|          -|          -|   256|    no    |
        |- Loop 5         |    93198|    93198|           1902|          -|          -|    49|    no    |
        | + Loop 5.1      |      512|      512|              2|          -|          -|   256|    no    |
        | + Loop 5.2      |      512|      512|              2|          -|          -|   256|    no    |
        |- Loop 6         |  3181227|  3259627| 64923 ~ 66523 |          -|          -|    49|    no    |
        | + Loop 6.1      |     1419|     1419|             11|          -|          -|   129|    no    |
        | + Loop 6.2      |    26100|    26100|           1305|          -|          -|    20|    no    |
        |  ++ Loop 6.2.1  |     1290|     1290|             10|          -|          -|   129|    no    |
        | + Loop 6.3      |    37400|    39000|  1870 ~ 1950  |          -|          -|    20|    no    |
        |  ++ Loop 6.3.1  |     1860|     1940|    93 ~ 97    |          -|          -|    20|    no    |
        +-----------------+---------+---------+---------------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 115
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond)
	9  / (exitcond)
3 --> 
	4  / true
4 --> 
	2  / (exitcond2)
	5  / (!exitcond2)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	4  / true
9 --> 
	12  / (exitcond1)
	10  / (!exitcond1)
10 --> 
	9  / (exitcond3)
	11  / (!exitcond3)
11 --> 
	10  / true
12 --> 
	12  / (!tmp_10)
	13  / (tmp_10)
13 --> 
	13  / (!tmp_15)
	14  / (tmp_15)
14 --> 
	20  / (exitcond4)
	15  / (!exitcond4)
15 --> 
	16  / (!exitcond6)
	17  / (exitcond6)
16 --> 
	15  / true
17 --> 
	18  / true
18 --> 
	19  / (!exitcond8)
	14  / (exitcond8)
19 --> 
	18  / true
20 --> 
	115  / (exitcond5)
	21  / (!exitcond5)
21 --> 
	22  / (!exitcond7)
	32  / (exitcond7)
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	21  / true
32 --> 
	56  / (exitcond9)
	33  / (!exitcond9)
33 --> 
	34  / (!exitcond11)
	43  / (exitcond11)
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / true
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	33  / true
43 --> 
	44  / true
44 --> 
	45  / true
45 --> 
	46  / true
46 --> 
	47  / true
47 --> 
	48  / true
48 --> 
	49  / true
49 --> 
	50  / true
50 --> 
	51  / true
51 --> 
	52  / true
52 --> 
	53  / true
53 --> 
	54  / true
54 --> 
	55  / true
55 --> 
	32  / true
56 --> 
	20  / (exitcond10)
	57  / (!exitcond10)
57 --> 
	58  / true
58 --> 
	59  / true
59 --> 
	60  / true
60 --> 
	61  / true
61 --> 
	62  / true
62 --> 
	63  / (!exitcond12)
	112  / (exitcond12)
63 --> 
	64  / true
64 --> 
	65  / true
65 --> 
	66  / true
66 --> 
	67  / true
67 --> 
	68  / true
68 --> 
	69  / true
69 --> 
	70  / true
70 --> 
	71  / true
71 --> 
	72  / true
72 --> 
	73  / true
73 --> 
	74  / true
74 --> 
	75  / true
75 --> 
	76  / true
76 --> 
	77  / true
77 --> 
	78  / true
78 --> 
	79  / true
79 --> 
	80  / true
80 --> 
	81  / true
81 --> 
	82  / true
82 --> 
	83  / true
83 --> 
	84  / true
84 --> 
	85  / true
85 --> 
	86  / true
86 --> 
	87  / true
87 --> 
	88  / true
88 --> 
	89  / true
89 --> 
	90  / true
90 --> 
	91  / true
91 --> 
	92  / true
92 --> 
	93  / true
93 --> 
	94  / true
94 --> 
	95  / true
95 --> 
	96  / true
96 --> 
	97  / true
97 --> 
	98  / true
98 --> 
	99  / true
99 --> 
	100  / true
100 --> 
	101  / true
101 --> 
	102  / true
102 --> 
	103  / true
103 --> 
	104  / true
104 --> 
	105  / true
105 --> 
	106  / true
106 --> 
	107  / true
107 --> 
	108  / true
108 --> 
	109  / true
109 --> 
	110  / true
110 --> 
	111  / true
111 --> 
	62  / true
112 --> 
	113  / true
113 --> 
	114  / true
114 --> 
	56  / true
115 --> 
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: xn [1/1] 0.00ns
.preheader76.preheader:0  %xn = alloca [256 x i64], align 8

ST_1: xk [1/1] 0.00ns
.preheader76.preheader:1  %xk = alloca [256 x i64], align 8

ST_1: M [1/1] 0.00ns
.preheader76.preheader:2  %M = alloca [12544 x float], align 4

ST_1: fft_config_data_V [1/1] 0.00ns
.preheader76.preheader:3  %fft_config_data_V = alloca i16, align 2

ST_1: fft_status_data_V [1/1] 0.00ns
.preheader76.preheader:4  %fft_status_data_V = alloca i8, align 1

ST_1: z [1/1] 0.00ns
.preheader76.preheader:5  %z = alloca [980 x float], align 4

ST_1: z2 [1/1] 0.00ns
.preheader76.preheader:6  %z2 = alloca [129 x float], align 16

ST_1: X [1/1] 0.00ns
.preheader76.preheader:7  %X = alloca [980 x float], align 4

ST_1: stg_124 [1/1] 1.57ns
.preheader76.preheader:8  br label %.loopexit


 <State 2>: 3.60ns
ST_2: i [1/1] 0.00ns
.loopexit:0  %i = phi i9 [ 0, %.preheader76.preheader ], [ %i_1, %.preheader74 ]

ST_2: phi_mul2 [1/1] 0.00ns
.loopexit:1  %phi_mul2 = phi i14 [ 0, %.preheader76.preheader ], [ %next_mul3, %.preheader74 ]

ST_2: next_mul3 [1/1] 1.96ns
.loopexit:2  %next_mul3 = add i14 %phi_mul2, 49

ST_2: i_cast [1/1] 0.00ns
.loopexit:3  %i_cast = zext i9 %i to i13

ST_2: exitcond [1/1] 2.03ns
.loopexit:4  %exitcond = icmp eq i9 %i, -256

ST_2: empty [1/1] 0.00ns
.loopexit:5  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_2: i_1 [1/1] 1.84ns
.loopexit:6  %i_1 = add i9 %i, 1

ST_2: stg_132 [1/1] 1.57ns
.loopexit:7  br i1 %exitcond, label %.preheader73, label %.preheader74.preheader

ST_2: tmp_4 [1/1] 0.00ns
.preheader74.preheader:0  %tmp_4 = zext i9 %i to i64

ST_2: hamming_addr [1/1] 0.00ns
.preheader74.preheader:1  %hamming_addr = getelementptr inbounds [256 x float]* @hamming, i64 0, i64 %tmp_4

ST_2: hamming_load [2/2] 2.39ns
.preheader74.preheader:2  %hamming_load = load float* %hamming_addr, align 4


 <State 3>: 2.39ns
ST_3: hamming_load [1/2] 2.39ns
.preheader74.preheader:2  %hamming_load = load float* %hamming_addr, align 4

ST_3: stg_137 [1/1] 1.57ns
.preheader74.preheader:3  br label %.preheader74


 <State 4>: 4.67ns
ST_4: j [1/1] 0.00ns
.preheader74:0  %j = phi i6 [ %j_1, %0 ], [ 0, %.preheader74.preheader ]

ST_4: phi_mul [1/1] 0.00ns
.preheader74:1  %phi_mul = phi i13 [ %next_mul, %0 ], [ 0, %.preheader74.preheader ]

ST_4: exitcond2 [1/1] 1.94ns
.preheader74:2  %exitcond2 = icmp eq i6 %j, -15

ST_4: empty_50 [1/1] 0.00ns
.preheader74:3  %empty_50 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)

ST_4: j_1 [1/1] 1.72ns
.preheader74:4  %j_1 = add i6 %j, 1

ST_4: stg_143 [1/1] 0.00ns
.preheader74:5  br i1 %exitcond2, label %.loopexit, label %0

ST_4: next_mul [1/1] 1.96ns
:0  %next_mul = add i13 %phi_mul, 100

ST_4: tmp_8 [1/1] 1.96ns
:1  %tmp_8 = add i13 %phi_mul, %i_cast

ST_4: tmp_9 [1/1] 0.00ns
:2  %tmp_9 = zext i13 %tmp_8 to i64

ST_4: sound_file_addr [1/1] 0.00ns
:3  %sound_file_addr = getelementptr [12544 x float]* %sound_file, i64 0, i64 %tmp_9

ST_4: sound_file_load [2/2] 2.71ns
:4  %sound_file_load = load float* %sound_file_addr, align 4

ST_4: tmp_6_cast [1/1] 0.00ns
:6  %tmp_6_cast = zext i6 %j to i14

ST_4: tmp_26 [1/1] 1.96ns
:7  %tmp_26 = add i14 %phi_mul2, %tmp_6_cast


 <State 5>: 8.41ns
ST_5: sound_file_load [1/2] 2.71ns
:4  %sound_file_load = load float* %sound_file_addr, align 4

ST_5: tmp_s [4/4] 5.70ns
:5  %tmp_s = fmul float %sound_file_load, %hamming_load


 <State 6>: 5.70ns
ST_6: tmp_s [3/4] 5.70ns
:5  %tmp_s = fmul float %sound_file_load, %hamming_load


 <State 7>: 5.70ns
ST_7: tmp_s [2/4] 5.70ns
:5  %tmp_s = fmul float %sound_file_load, %hamming_load


 <State 8>: 8.41ns
ST_8: tmp_s [1/4] 5.70ns
:5  %tmp_s = fmul float %sound_file_load, %hamming_load

ST_8: tmp_41_cast [1/1] 0.00ns
:8  %tmp_41_cast = zext i14 %tmp_26 to i64

ST_8: M_addr [1/1] 0.00ns
:9  %M_addr = getelementptr [12544 x float]* %M, i64 0, i64 %tmp_41_cast

ST_8: stg_158 [1/1] 2.71ns
:10  store float %tmp_s, float* %M_addr, align 4

ST_8: stg_159 [1/1] 0.00ns
:11  br label %.preheader74


 <State 9>: 3.60ns
ST_9: i1 [1/1] 0.00ns
.preheader73:0  %i1 = phi i9 [ 0, %.loopexit ], [ %i_2, %.preheader72 ]

ST_9: phi_mul4 [1/1] 0.00ns
.preheader73:1  %phi_mul4 = phi i14 [ 0, %.loopexit ], [ %next_mul5, %.preheader72 ]

ST_9: next_mul5 [1/1] 1.96ns
.preheader73:2  %next_mul5 = add i14 %phi_mul4, 49

ST_9: exitcond1 [1/1] 2.03ns
.preheader73:3  %exitcond1 = icmp eq i9 %i1, -256

ST_9: empty_51 [1/1] 0.00ns
.preheader73:4  %empty_51 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_9: i_2 [1/1] 1.84ns
.preheader73:5  %i_2 = add i9 %i1, 1

ST_9: stg_166 [1/1] 1.57ns
.preheader73:6  br i1 %exitcond1, label %arrayctor.loop, label %.preheader72.preheader

ST_9: tmp_5_cast [1/1] 0.00ns
.preheader72.preheader:0  %tmp_5_cast = zext i9 %i1 to i15

ST_9: stg_168 [1/1] 1.57ns
.preheader72.preheader:1  br label %.preheader72


 <State 10>: 4.67ns
ST_10: j2 [1/1] 0.00ns
.preheader72:0  %j2 = phi i6 [ %j_2, %1 ], [ 0, %.preheader72.preheader ]

ST_10: exitcond3 [1/1] 1.94ns
.preheader72:1  %exitcond3 = icmp eq i6 %j2, -15

ST_10: empty_52 [1/1] 0.00ns
.preheader72:2  %empty_52 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)

ST_10: j_2 [1/1] 1.72ns
.preheader72:3  %j_2 = add i6 %j2, 1

ST_10: stg_173 [1/1] 0.00ns
.preheader72:4  br i1 %exitcond3, label %.preheader73, label %1

ST_10: tmp_14_cast [1/1] 0.00ns
:0  %tmp_14_cast = zext i6 %j2 to i14

ST_10: tmp_32 [1/1] 0.00ns
:1  %tmp_32 = call i14 @_ssdm_op_BitConcatenate.i14.i6.i8(i6 %j2, i8 0)

ST_10: tmp_43_cast [1/1] 0.00ns
:2  %tmp_43_cast = zext i14 %tmp_32 to i15

ST_10: tmp_33 [1/1] 1.96ns
:3  %tmp_33 = add i15 %tmp_5_cast, %tmp_43_cast

ST_10: tmp_40 [1/1] 1.96ns
:6  %tmp_40 = add i14 %tmp_14_cast, %phi_mul4

ST_10: tmp_45_cast [1/1] 0.00ns
:7  %tmp_45_cast = zext i14 %tmp_40 to i64

ST_10: M_addr_1 [1/1] 0.00ns
:8  %M_addr_1 = getelementptr [12544 x float]* %M, i64 0, i64 %tmp_45_cast

ST_10: M_load [2/2] 2.71ns
:9  %M_load = load float* %M_addr_1, align 4


 <State 11>: 5.42ns
ST_11: tmp_44_cast [1/1] 0.00ns
:4  %tmp_44_cast = zext i15 %tmp_33 to i64

ST_11: xn_input_M_real_addr [1/1] 0.00ns
:5  %xn_input_M_real_addr = getelementptr [12544 x float]* @xn_input_M_real, i64 0, i64 %tmp_44_cast

ST_11: M_load [1/2] 2.71ns
:9  %M_load = load float* %M_addr_1, align 4

ST_11: stg_185 [1/1] 2.71ns
:10  store float %M_load, float* %xn_input_M_real_addr, align 8

ST_11: stg_186 [1/1] 0.00ns
:11  br label %.preheader72


 <State 12>: 3.57ns
ST_12: tmp_1 [1/1] 0.00ns
arrayctor.loop:0  %tmp_1 = phi i8 [ %tmp_2, %arrayctor.loop ], [ 0, %.preheader73 ]

ST_12: tmp_2 [1/1] 1.72ns
arrayctor.loop:1  %tmp_2 = add i8 %tmp_1, 1

ST_12: tmp_3 [1/1] 0.00ns
arrayctor.loop:2  %tmp_3 = zext i8 %tmp_1 to i64

ST_12: xn_addr [1/1] 0.00ns
arrayctor.loop:3  %xn_addr = getelementptr [256 x i64]* %xn, i64 0, i64 %tmp_3

ST_12: stg_191 [1/1] 2.71ns
arrayctor.loop:4  store i64 0, i64* %xn_addr, align 8

ST_12: tmp_10 [1/1] 2.00ns
arrayctor.loop:5  %tmp_10 = icmp eq i8 %tmp_1, -1

ST_12: empty_53 [1/1] 0.00ns
arrayctor.loop:6  %empty_53 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_12: stg_194 [1/1] 1.57ns
arrayctor.loop:7  br i1 %tmp_10, label %arrayctor.loop3, label %arrayctor.loop


 <State 13>: 3.57ns
ST_13: tmp_11 [1/1] 0.00ns
arrayctor.loop3:0  %tmp_11 = phi i8 [ %tmp_12, %arrayctor.loop3 ], [ 0, %arrayctor.loop ]

ST_13: tmp_12 [1/1] 1.72ns
arrayctor.loop3:1  %tmp_12 = add i8 %tmp_11, 1

ST_13: tmp_13 [1/1] 0.00ns
arrayctor.loop3:2  %tmp_13 = zext i8 %tmp_11 to i64

ST_13: xk_addr [1/1] 0.00ns
arrayctor.loop3:3  %xk_addr = getelementptr [256 x i64]* %xk, i64 0, i64 %tmp_13

ST_13: stg_199 [1/1] 2.71ns
arrayctor.loop3:4  store i64 0, i64* %xk_addr, align 8

ST_13: tmp_15 [1/1] 2.00ns
arrayctor.loop3:5  %tmp_15 = icmp eq i8 %tmp_11, -1

ST_13: empty_54 [1/1] 0.00ns
arrayctor.loop3:6  %empty_54 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_13: stg_202 [1/1] 1.57ns
arrayctor.loop3:7  br i1 %tmp_15, label %.preheader, label %arrayctor.loop3


 <State 14>: 8.75ns
ST_14: i4 [1/1] 0.00ns
.preheader:0  %i4 = phi i6 [ %i_4, %7 ], [ 0, %arrayctor.loop3 ]

ST_14: exitcond4 [1/1] 1.94ns
.preheader:1  %exitcond4 = icmp eq i6 %i4, -15

ST_14: empty_55 [1/1] 0.00ns
.preheader:2  %empty_55 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)

ST_14: i_4 [1/1] 1.72ns
.preheader:3  %i_4 = add i6 %i4, 1

ST_14: stg_207 [1/1] 1.57ns
.preheader:4  br i1 %exitcond4, label %.preheader71, label %_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit

ST_14: tmp [1/1] 0.00ns
_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit:0  %tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str2)

ST_14: p_Val2_s [1/1] 4.38ns
_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit:1  %p_Val2_s = call i16 @_ssdm_op_Read.ap_fifo.i16P(i16* %fft_config_data_V)

ST_14: p_Result_s [1/1] 0.00ns
_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit:2  %p_Result_s = call i16 @_ssdm_op_PartSet.i16.i16.i9.i32.i32(i16 %p_Val2_s, i9 -170, i32 0, i32 8)

ST_14: stg_211 [1/1] 4.38ns
_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit:3  call void @_ssdm_op_Write.ap_fifo.i16P(i16* %fft_config_data_V, i16 %p_Result_s)

ST_14: tmp_41 [1/1] 0.00ns
_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit:4  %tmp_41 = call i14 @_ssdm_op_BitConcatenate.i14.i6.i8(i6 %i4, i8 0)

ST_14: tmp_47_cast [1/1] 0.00ns
_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit:5  %tmp_47_cast = zext i14 %tmp_41 to i15

ST_14: stg_214 [1/1] 1.57ns
_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit:6  br label %2


 <State 15>: 8.75ns
ST_15: j5 [1/1] 0.00ns
:0  %j5 = phi i9 [ 0, %_ZN3hls6ip_fft8config_tI7config1E6setSchEjj.exit ], [ %j_3, %3 ]

ST_15: exitcond6 [1/1] 2.03ns
:1  %exitcond6 = icmp eq i9 %j5, -256

ST_15: empty_56 [1/1] 0.00ns
:2  %empty_56 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_15: j_3 [1/1] 1.84ns
:3  %j_3 = add i9 %j5, 1

ST_15: stg_219 [1/1] 0.00ns
:4  br i1 %exitcond6, label %4, label %3

ST_15: tmp_18_cast [1/1] 0.00ns
:1  %tmp_18_cast = zext i9 %j5 to i15

ST_15: tmp_42 [1/1] 1.96ns
:2  %tmp_42 = add i15 %tmp_47_cast, %tmp_18_cast

ST_15: tmp_48_cast [1/1] 0.00ns
:3  %tmp_48_cast = zext i15 %tmp_42 to i64

ST_15: xn_input_M_real_addr_1 [1/1] 0.00ns
:4  %xn_input_M_real_addr_1 = getelementptr [12544 x float]* @xn_input_M_real, i64 0, i64 %tmp_48_cast

ST_15: xn_input_M_real_load [2/2] 2.71ns
:5  %xn_input_M_real_load = load float* %xn_input_M_real_addr_1, align 8

ST_15: stg_225 [2/2] 8.75ns
:5  call void @"fft<config1>"([256 x i64]* %xn, [256 x i64]* %xk, i8* %fft_status_data_V, i16* %fft_config_data_V)


 <State 16>: 5.42ns
ST_16: tmp_18 [1/1] 0.00ns
:0  %tmp_18 = zext i9 %j5 to i64

ST_16: xn_input_M_real_load [1/2] 2.71ns
:5  %xn_input_M_real_load = load float* %xn_input_M_real_addr_1, align 8

ST_16: xn_addr_1 [1/1] 0.00ns
:6  %xn_addr_1 = getelementptr [256 x i64]* %xn, i64 0, i64 %tmp_18

ST_16: xn_input_M_real_load_toint [1/1] 0.00ns
:7  %xn_input_M_real_load_toint = bitcast float %xn_input_M_real_load to i32

ST_16: xn_M_imag_addr_23941_part_set [1/1] 0.00ns
:8  %xn_M_imag_addr_23941_part_set = call i64 @_ssdm_op_BitConcatenate.i64.i32.i32(i32 0, i32 %xn_input_M_real_load_toint)

ST_16: stg_231 [1/1] 2.71ns
:9  store i64 %xn_M_imag_addr_23941_part_set, i64* %xn_addr_1, align 8

ST_16: stg_232 [1/1] 0.00ns
:10  br label %2


 <State 17>: 8.75ns
ST_17: stg_233 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecInterface(i32 0, [6 x i8]* @p_str3, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_17: stg_234 [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecInterface(i32 undef, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 1, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_17: stg_235 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecInterface([256 x i64]* %xn, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 1024, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_17: stg_236 [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecInterface([256 x i64]* %xk, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 1024, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_17: stg_237 [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecInterface(i16* %fft_config_data_V, [8 x i8]* @p_str4, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str) nounwind

ST_17: stg_238 [1/2] 8.75ns
:5  call void @"fft<config1>"([256 x i64]* %xn, [256 x i64]* %xk, i8* %fft_status_data_V, i16* %fft_config_data_V)

ST_17: stg_239 [1/1] 1.57ns
:6  br label %5


 <State 18>: 2.71ns
ST_18: j6 [1/1] 0.00ns
:0  %j6 = phi i9 [ 0, %4 ], [ %j_4, %6 ]

ST_18: exitcond8 [1/1] 2.03ns
:1  %exitcond8 = icmp eq i9 %j6, -256

ST_18: empty_57 [1/1] 0.00ns
:2  %empty_57 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256)

ST_18: j_4 [1/1] 1.84ns
:3  %j_4 = add i9 %j6, 1

ST_18: stg_244 [1/1] 0.00ns
:4  br i1 %exitcond8, label %7, label %6

ST_18: tmp_23 [1/1] 0.00ns
:0  %tmp_23 = zext i9 %j6 to i64

ST_18: tmp_23_cast [1/1] 0.00ns
:1  %tmp_23_cast = zext i9 %j6 to i15

ST_18: tmp_45 [1/1] 1.96ns
:2  %tmp_45 = add i15 %tmp_23_cast, %tmp_47_cast

ST_18: xk_addr_1 [1/1] 0.00ns
:6  %xk_addr_1 = getelementptr [256 x i64]* %xk, i64 0, i64 %tmp_23

ST_18: xk_load [2/2] 2.71ns
:7  %xk_load = load volatile i64* %xk_addr_1, align 8

ST_18: empty_58 [1/1] 0.00ns
:0  %empty_58 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str2, i32 %tmp)

ST_18: stg_251 [1/1] 0.00ns
:1  br label %.preheader


 <State 19>: 5.42ns
ST_19: tmp_51_cast [1/1] 0.00ns
:3  %tmp_51_cast = zext i15 %tmp_45 to i64

ST_19: xk_output_M_imag_addr_1 [1/1] 0.00ns
:4  %xk_output_M_imag_addr_1 = getelementptr [12544 x float]* @xk_output_M_imag, i64 0, i64 %tmp_51_cast

ST_19: xk_output_M_real_addr_1 [1/1] 0.00ns
:5  %xk_output_M_real_addr_1 = getelementptr [12544 x float]* @xk_output_M_real, i64 0, i64 %tmp_51_cast

ST_19: xk_load [1/2] 2.71ns
:7  %xk_load = load volatile i64* %xk_addr_1, align 8

ST_19: tmp_46 [1/1] 0.00ns
:8  %tmp_46 = trunc i64 %xk_load to i32

ST_19: xk_M_real_load7 [1/1] 0.00ns
:9  %xk_M_real_load7 = bitcast i32 %tmp_46 to float

ST_19: stg_258 [1/1] 2.71ns
:10  store float %xk_M_real_load7, float* %xk_output_M_real_addr_1, align 8

ST_19: xk_M_imag_load_new [1/1] 0.00ns
:11  %xk_M_imag_load_new = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %xk_load, i32 32, i32 63)

ST_19: xk_M_imag_load [1/1] 0.00ns
:12  %xk_M_imag_load = bitcast i32 %xk_M_imag_load_new to float

ST_19: stg_261 [1/1] 2.71ns
:13  store float %xk_M_imag_load, float* %xk_output_M_imag_addr_1, align 4

ST_19: stg_262 [1/1] 0.00ns
:14  br label %5


 <State 20>: 1.94ns
ST_20: frame [1/1] 0.00ns
.preheader71:0  %frame = phi i6 [ 0, %.preheader ], [ %frame_1, %.preheader67 ]

ST_20: exitcond5 [1/1] 1.94ns
.preheader71:1  %exitcond5 = icmp eq i6 %frame, -15

ST_20: empty_59 [1/1] 0.00ns
.preheader71:2  %empty_59 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 49, i64 49, i64 49)

ST_20: frame_1 [1/1] 1.72ns
.preheader71:3  %frame_1 = add i6 %frame, 1

ST_20: stg_267 [1/1] 0.00ns
.preheader71:4  br i1 %exitcond5, label %.preheader66.preheader, label %.preheader70.preheader

ST_20: tmp_17_cast [1/1] 0.00ns
.preheader70.preheader:0  %tmp_17_cast = zext i6 %frame to i10

ST_20: stg_269 [1/1] 1.57ns
.preheader70.preheader:1  br label %.preheader70

ST_20: output1 [2/2] 0.00ns
.preheader66.preheader:0  %output1 = call fastcc i1 @dut_knn([980 x float]* %X)


 <State 21>: 3.57ns
ST_21: i7 [1/1] 0.00ns
.preheader70:0  %i7 = phi i8 [ %i_3, %8 ], [ 0, %.preheader70.preheader ]

ST_21: exitcond7 [1/1] 2.00ns
.preheader70:1  %exitcond7 = icmp eq i8 %i7, -127

ST_21: empty_60 [1/1] 0.00ns
.preheader70:2  %empty_60 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 129, i64 129, i64 129)

ST_21: i_3 [1/1] 1.72ns
.preheader70:3  %i_3 = add i8 %i7, 1

ST_21: stg_275 [1/1] 1.57ns
.preheader70:4  br i1 %exitcond7, label %.preheader69, label %8

ST_21: tmp_43 [1/1] 0.00ns
:1  %tmp_43 = call i14 @_ssdm_op_BitConcatenate.i14.i6.i8(i6 %frame, i8 %i7)

ST_21: tmp_44 [1/1] 0.00ns
:2  %tmp_44 = zext i14 %tmp_43 to i64

ST_21: xk_output_M_imag_addr [1/1] 0.00ns
:3  %xk_output_M_imag_addr = getelementptr [12544 x float]* @xk_output_M_imag, i64 0, i64 %tmp_44

ST_21: xk_output_M_real_addr [1/1] 0.00ns
:4  %xk_output_M_real_addr = getelementptr [12544 x float]* @xk_output_M_real, i64 0, i64 %tmp_44

ST_21: xk_output_M_real_load [2/2] 2.71ns
:5  %xk_output_M_real_load = load float* %xk_output_M_real_addr, align 8

ST_21: xk_output_M_imag_load [2/2] 2.71ns
:7  %xk_output_M_imag_load = load float* %xk_output_M_imag_addr, align 4


 <State 22>: 8.41ns
ST_22: xk_output_M_real_load [1/2] 2.71ns
:5  %xk_output_M_real_load = load float* %xk_output_M_real_addr, align 8

ST_22: tmp_20 [4/4] 5.70ns
:6  %tmp_20 = fmul float %xk_output_M_real_load, %xk_output_M_real_load

ST_22: xk_output_M_imag_load [1/2] 2.71ns
:7  %xk_output_M_imag_load = load float* %xk_output_M_imag_addr, align 4

ST_22: tmp_21 [4/4] 5.70ns
:8  %tmp_21 = fmul float %xk_output_M_imag_load, %xk_output_M_imag_load


 <State 23>: 5.70ns
ST_23: tmp_20 [3/4] 5.70ns
:6  %tmp_20 = fmul float %xk_output_M_real_load, %xk_output_M_real_load

ST_23: tmp_21 [3/4] 5.70ns
:8  %tmp_21 = fmul float %xk_output_M_imag_load, %xk_output_M_imag_load


 <State 24>: 5.70ns
ST_24: tmp_20 [2/4] 5.70ns
:6  %tmp_20 = fmul float %xk_output_M_real_load, %xk_output_M_real_load

ST_24: tmp_21 [2/4] 5.70ns
:8  %tmp_21 = fmul float %xk_output_M_imag_load, %xk_output_M_imag_load


 <State 25>: 5.70ns
ST_25: tmp_20 [1/4] 5.70ns
:6  %tmp_20 = fmul float %xk_output_M_real_load, %xk_output_M_real_load

ST_25: tmp_21 [1/4] 5.70ns
:8  %tmp_21 = fmul float %xk_output_M_imag_load, %xk_output_M_imag_load


 <State 26>: 7.26ns
ST_26: tmp_22 [5/5] 7.26ns
:9  %tmp_22 = fadd float %tmp_20, %tmp_21


 <State 27>: 7.26ns
ST_27: tmp_22 [4/5] 7.26ns
:9  %tmp_22 = fadd float %tmp_20, %tmp_21


 <State 28>: 7.26ns
ST_28: tmp_22 [3/5] 7.26ns
:9  %tmp_22 = fadd float %tmp_20, %tmp_21


 <State 29>: 7.26ns
ST_29: tmp_22 [2/5] 7.26ns
:9  %tmp_22 = fadd float %tmp_20, %tmp_21


 <State 30>: 7.26ns
ST_30: tmp_22 [1/5] 7.26ns
:9  %tmp_22 = fadd float %tmp_20, %tmp_21


 <State 31>: 2.71ns
ST_31: tmp_19 [1/1] 0.00ns
:0  %tmp_19 = zext i8 %i7 to i64

ST_31: z2_addr [1/1] 0.00ns
:10  %z2_addr = getelementptr inbounds [129 x float]* %z2, i64 0, i64 %tmp_19

ST_31: stg_299 [1/1] 2.71ns
:11  store float %tmp_22, float* %z2_addr, align 4

ST_31: stg_300 [1/1] 0.00ns
:12  br label %.preheader70


 <State 32>: 3.48ns
ST_32: j8 [1/1] 0.00ns
.preheader69:0  %j8 = phi i5 [ %j_5, %10 ], [ 0, %.preheader70 ]

ST_32: phi_mul6 [1/1] 0.00ns
.preheader69:1  %phi_mul6 = phi i10 [ %next_mul7, %10 ], [ 0, %.preheader70 ]

ST_32: next_mul7 [1/1] 1.84ns
.preheader69:2  %next_mul7 = add i10 %phi_mul6, 49

ST_32: j8_cast7 [1/1] 0.00ns
.preheader69:3  %j8_cast7 = zext i5 %j8 to i8

ST_32: exitcond9 [1/1] 1.91ns
.preheader69:4  %exitcond9 = icmp eq i5 %j8, -12

ST_32: empty_61 [1/1] 0.00ns
.preheader69:5  %empty_61 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_32: j_5 [1/1] 1.72ns
.preheader69:6  %j_5 = add i5 %j8, 1

ST_32: stg_308 [1/1] 1.57ns
.preheader69:7  br i1 %exitcond9, label %.preheader67, label %.preheader68.preheader

ST_32: p_shl [1/1] 0.00ns
.preheader68.preheader:0  %p_shl = call i12 @_ssdm_op_BitConcatenate.i12.i5.i7(i5 %j8, i7 0)

ST_32: stg_310 [1/1] 1.57ns
.preheader68.preheader:1  br label %.preheader68


 <State 33>: 7.09ns
ST_33: p_x_assign [1/1] 0.00ns
.preheader68:0  %p_x_assign = phi float [ %sum, %9 ], [ 0.000000e+00, %.preheader68.preheader ]

ST_33: x [1/1] 0.00ns
.preheader68:1  %x = phi i8 [ %x_1, %9 ], [ 0, %.preheader68.preheader ]

ST_33: exitcond11 [1/1] 2.00ns
.preheader68:2  %exitcond11 = icmp eq i8 %x, -127

ST_33: empty_62 [1/1] 0.00ns
.preheader68:3  %empty_62 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 129, i64 129, i64 129)

ST_33: x_1 [1/1] 1.72ns
.preheader68:4  %x_1 = add i8 %x, 1

ST_33: stg_316 [1/1] 0.00ns
.preheader68:5  br i1 %exitcond11, label %10, label %9

ST_33: tmp1 [1/1] 1.72ns
:0  %tmp1 = add i8 %j8_cast7, %x

ST_33: tmp1_cast [1/1] 0.00ns
:1  %tmp1_cast = zext i8 %tmp1 to i12

ST_33: tmp_27 [1/1] 1.84ns
:2  %tmp_27 = add i12 %tmp1_cast, %p_shl

ST_33: tmp_28 [1/1] 0.00ns
:3  %tmp_28 = zext i12 %tmp_27 to i64

ST_33: melfb_addr [1/1] 0.00ns
:4  %melfb_addr = getelementptr inbounds [2580 x float]* @melfb, i64 0, i64 %tmp_28

ST_33: melfb_load [2/2] 2.39ns
:5  %melfb_load = load float* %melfb_addr, align 4

ST_33: tmp_29 [1/1] 0.00ns
:6  %tmp_29 = zext i8 %x to i64

ST_33: z2_addr_1 [1/1] 0.00ns
:7  %z2_addr_1 = getelementptr inbounds [129 x float]* %z2, i64 0, i64 %tmp_29

ST_33: z2_load [2/2] 2.71ns
:8  %z2_load = load float* %z2_addr_1, align 4

ST_33: tmp_i [13/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 34>: 8.41ns
ST_34: melfb_load [1/2] 2.39ns
:5  %melfb_load = load float* %melfb_addr, align 4

ST_34: z2_load [1/2] 2.71ns
:8  %z2_load = load float* %z2_addr_1, align 4

ST_34: tmp_30 [4/4] 5.70ns
:9  %tmp_30 = fmul float %melfb_load, %z2_load


 <State 35>: 5.70ns
ST_35: tmp_30 [3/4] 5.70ns
:9  %tmp_30 = fmul float %melfb_load, %z2_load


 <State 36>: 5.70ns
ST_36: tmp_30 [2/4] 5.70ns
:9  %tmp_30 = fmul float %melfb_load, %z2_load


 <State 37>: 5.70ns
ST_37: tmp_30 [1/4] 5.70ns
:9  %tmp_30 = fmul float %melfb_load, %z2_load


 <State 38>: 7.26ns
ST_38: sum [5/5] 7.26ns
:10  %sum = fadd float %p_x_assign, %tmp_30


 <State 39>: 7.26ns
ST_39: sum [4/5] 7.26ns
:10  %sum = fadd float %p_x_assign, %tmp_30


 <State 40>: 7.26ns
ST_40: sum [3/5] 7.26ns
:10  %sum = fadd float %p_x_assign, %tmp_30


 <State 41>: 7.26ns
ST_41: sum [2/5] 7.26ns
:10  %sum = fadd float %p_x_assign, %tmp_30


 <State 42>: 7.26ns
ST_42: sum [1/5] 7.26ns
:10  %sum = fadd float %p_x_assign, %tmp_30

ST_42: stg_338 [1/1] 0.00ns
:11  br label %.preheader68


 <State 43>: 7.09ns
ST_43: tmp_i [12/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 44>: 7.09ns
ST_44: tmp_i [11/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 45>: 7.09ns
ST_45: tmp_i [10/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 46>: 7.09ns
ST_46: tmp_i [9/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 47>: 7.09ns
ST_47: tmp_i [8/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 48>: 7.09ns
ST_48: tmp_i [7/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind

ST_48: tmp_47 [1/1] 1.84ns
:1  %tmp_47 = add i10 %tmp_17_cast, %phi_mul6


 <State 49>: 7.09ns
ST_49: tmp_i [6/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 50>: 7.09ns
ST_50: tmp_i [5/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 51>: 7.09ns
ST_51: tmp_i [4/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 52>: 7.09ns
ST_52: tmp_i [3/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 53>: 7.09ns
ST_53: tmp_i [2/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 54>: 7.09ns
ST_54: tmp_i [1/13] 7.09ns
:0  %tmp_i = call float @llvm.log.f32(float %p_x_assign) nounwind


 <State 55>: 2.71ns
ST_55: tmp_53_cast [1/1] 0.00ns
:2  %tmp_53_cast = zext i10 %tmp_47 to i64

ST_55: z_addr [1/1] 0.00ns
:3  %z_addr = getelementptr [980 x float]* %z, i64 0, i64 %tmp_53_cast

ST_55: stg_354 [1/1] 2.71ns
:4  store float %tmp_i, float* %z_addr, align 4

ST_55: stg_355 [1/1] 0.00ns
:5  br label %.preheader69


 <State 56>: 6.41ns
ST_56: k [1/1] 0.00ns
.preheader67:0  %k = phi i5 [ %k_1, %13 ], [ 0, %.preheader69 ]

ST_56: phi_mul1 [1/1] 0.00ns
.preheader67:1  %phi_mul1 = phi i10 [ %next_mul1, %13 ], [ 0, %.preheader69 ]

ST_56: next_mul1 [1/1] 1.84ns
.preheader67:2  %next_mul1 = add i10 %phi_mul1, 49

ST_56: k_cast3 [1/1] 0.00ns
.preheader67:3  %k_cast3 = zext i5 %k to i32

ST_56: exitcond10 [1/1] 1.91ns
.preheader67:4  %exitcond10 = icmp eq i5 %k, -12

ST_56: empty_63 [1/1] 0.00ns
.preheader67:5  %empty_63 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_56: k_1 [1/1] 1.72ns
.preheader67:6  %k_1 = add i5 %k, 1

ST_56: stg_363 [1/1] 0.00ns
.preheader67:7  br i1 %exitcond10, label %.preheader71, label %._crit_edge78

ST_56: tmp_24 [1/1] 1.91ns
._crit_edge78:0  %tmp_24 = icmp eq i5 %k, 0

ST_56: tmp_25 [6/6] 6.41ns
._crit_edge78:2  %tmp_25 = sitofp i32 %k_cast3 to float


 <State 57>: 6.41ns
ST_57: tmp_25 [5/6] 6.41ns
._crit_edge78:2  %tmp_25 = sitofp i32 %k_cast3 to float


 <State 58>: 6.41ns
ST_58: tmp_25 [4/6] 6.41ns
._crit_edge78:2  %tmp_25 = sitofp i32 %k_cast3 to float


 <State 59>: 6.41ns
ST_59: tmp_25 [3/6] 6.41ns
._crit_edge78:2  %tmp_25 = sitofp i32 %k_cast3 to float


 <State 60>: 6.41ns
ST_60: tmp_25 [2/6] 6.41ns
._crit_edge78:2  %tmp_25 = sitofp i32 %k_cast3 to float


 <State 61>: 6.41ns
ST_61: p_s [1/1] 1.37ns
._crit_edge78:1  %p_s = select i1 %tmp_24, float 0x3FCC9F25C0000000, float 0x3FD43D1360000000

ST_61: tmp_25 [1/6] 6.41ns
._crit_edge78:2  %tmp_25 = sitofp i32 %k_cast3 to float

ST_61: stg_372 [1/1] 1.57ns
._crit_edge78:3  br label %11


 <State 62>: 6.41ns
ST_62: sum9 [1/1] 0.00ns
:0  %sum9 = phi float [ 0.000000e+00, %._crit_edge78 ], [ %sum_1, %12 ]

ST_62: n1 [1/1] 0.00ns
:1  %n1 = phi i5 [ 0, %._crit_edge78 ], [ %n, %12 ]

ST_62: phi_mul8 [1/1] 0.00ns
:2  %phi_mul8 = phi i10 [ 0, %._crit_edge78 ], [ %next_mul9, %12 ]

ST_62: n1_cast2 [1/1] 0.00ns
:3  %n1_cast2 = zext i5 %n1 to i32

ST_62: exitcond12 [1/1] 1.91ns
:4  %exitcond12 = icmp eq i5 %n1, -12

ST_62: empty_64 [1/1] 0.00ns
:5  %empty_64 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)

ST_62: n [1/1] 1.72ns
:6  %n = add i5 %n1, 1

ST_62: stg_380 [1/1] 0.00ns
:7  br i1 %exitcond12, label %13, label %12

ST_62: next_mul9 [1/1] 1.84ns
:0  %next_mul9 = add i10 %phi_mul8, 49

ST_62: tmp_49 [1/1] 1.84ns
:1  %tmp_49 = add i10 %tmp_17_cast, %phi_mul8

ST_62: tmp_34 [6/6] 6.41ns
:5  %tmp_34 = sitofp i32 %n1_cast2 to float

ST_62: tmp_31 [4/4] 5.70ns
:0  %tmp_31 = fmul float %p_s, %sum9

ST_62: tmp_48 [1/1] 1.84ns
:1  %tmp_48 = add i10 %tmp_17_cast, %phi_mul1


 <State 63>: 6.41ns
ST_63: tmp_34 [5/6] 6.41ns
:5  %tmp_34 = sitofp i32 %n1_cast2 to float


 <State 64>: 6.41ns
ST_64: tmp_34 [4/6] 6.41ns
:5  %tmp_34 = sitofp i32 %n1_cast2 to float


 <State 65>: 6.41ns
ST_65: tmp_34 [3/6] 6.41ns
:5  %tmp_34 = sitofp i32 %n1_cast2 to float


 <State 66>: 6.41ns
ST_66: tmp_34 [2/6] 6.41ns
:5  %tmp_34 = sitofp i32 %n1_cast2 to float


 <State 67>: 6.41ns
ST_67: tmp_34 [1/6] 6.41ns
:5  %tmp_34 = sitofp i32 %n1_cast2 to float


 <State 68>: 5.70ns
ST_68: tmp_35 [4/4] 5.70ns
:6  %tmp_35 = fmul float %tmp_34, 2.000000e+00


 <State 69>: 5.70ns
ST_69: tmp_35 [3/4] 5.70ns
:6  %tmp_35 = fmul float %tmp_34, 2.000000e+00


 <State 70>: 5.70ns
ST_70: tmp_35 [2/4] 5.70ns
:6  %tmp_35 = fmul float %tmp_34, 2.000000e+00


 <State 71>: 5.70ns
ST_71: tmp_35 [1/4] 5.70ns
:6  %tmp_35 = fmul float %tmp_34, 2.000000e+00


 <State 72>: 7.26ns
ST_72: tmp_36 [5/5] 7.26ns
:7  %tmp_36 = fadd float %tmp_35, 1.000000e+00


 <State 73>: 7.26ns
ST_73: tmp_36 [4/5] 7.26ns
:7  %tmp_36 = fadd float %tmp_35, 1.000000e+00


 <State 74>: 7.26ns
ST_74: tmp_36 [3/5] 7.26ns
:7  %tmp_36 = fadd float %tmp_35, 1.000000e+00


 <State 75>: 7.26ns
ST_75: tmp_36 [2/5] 7.26ns
:7  %tmp_36 = fadd float %tmp_35, 1.000000e+00


 <State 76>: 7.26ns
ST_76: tmp_36 [1/5] 7.26ns
:7  %tmp_36 = fadd float %tmp_35, 1.000000e+00


 <State 77>: 5.70ns
ST_77: tmp_37 [4/4] 5.70ns
:8  %tmp_37 = fmul float %tmp_36, 0x400921FB00000000


 <State 78>: 5.70ns
ST_78: tmp_37 [3/4] 5.70ns
:8  %tmp_37 = fmul float %tmp_36, 0x400921FB00000000


 <State 79>: 5.70ns
ST_79: tmp_37 [2/4] 5.70ns
:8  %tmp_37 = fmul float %tmp_36, 0x400921FB00000000


 <State 80>: 5.70ns
ST_80: tmp_37 [1/4] 5.70ns
:8  %tmp_37 = fmul float %tmp_36, 0x400921FB00000000


 <State 81>: 5.70ns
ST_81: tmp_38 [4/4] 5.70ns
:9  %tmp_38 = fmul float %tmp_37, %tmp_25


 <State 82>: 5.70ns
ST_82: tmp_38 [3/4] 5.70ns
:9  %tmp_38 = fmul float %tmp_37, %tmp_25


 <State 83>: 5.70ns
ST_83: tmp_38 [2/4] 5.70ns
:9  %tmp_38 = fmul float %tmp_37, %tmp_25


 <State 84>: 5.70ns
ST_84: tmp_38 [1/4] 5.70ns
:9  %tmp_38 = fmul float %tmp_37, %tmp_25


 <State 85>: 6.08ns
ST_85: p_x_assign_2 [16/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 86>: 6.08ns
ST_86: p_x_assign_2 [15/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 87>: 6.08ns
ST_87: p_x_assign_2 [14/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 88>: 6.08ns
ST_88: p_x_assign_2 [13/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 89>: 6.08ns
ST_89: p_x_assign_2 [12/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 90>: 6.08ns
ST_90: p_x_assign_2 [11/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 91>: 6.08ns
ST_91: p_x_assign_2 [10/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 92>: 6.08ns
ST_92: p_x_assign_2 [9/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 93>: 6.08ns
ST_93: p_x_assign_2 [8/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 94>: 6.08ns
ST_94: p_x_assign_2 [7/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 95>: 6.08ns
ST_95: p_x_assign_2 [6/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 96>: 6.08ns
ST_96: p_x_assign_2 [5/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 97>: 6.08ns
ST_97: p_x_assign_2 [4/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 98>: 6.08ns
ST_98: p_x_assign_2 [3/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 99>: 6.08ns
ST_99: p_x_assign_2 [2/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 100>: 6.08ns
ST_100: p_x_assign_2 [1/16] 6.08ns
:10  %p_x_assign_2 = fdiv float %tmp_38, 4.000000e+01


 <State 101>: 4.74ns
ST_101: tmp_i_i_i_i [2/2] 4.74ns
:11  %tmp_i_i_i_i = call fastcc float @dut_sinf_or_cosf(float %p_x_assign_2) nounwind


 <State 102>: 8.14ns
ST_102: tmp_57_cast [1/1] 0.00ns
:2  %tmp_57_cast = zext i10 %tmp_49 to i64

ST_102: z_addr_1 [1/1] 0.00ns
:3  %z_addr_1 = getelementptr [980 x float]* %z, i64 0, i64 %tmp_57_cast

ST_102: z_load [2/2] 2.71ns
:4  %z_load = load float* %z_addr_1, align 4

ST_102: tmp_i_i_i_i [1/2] 8.14ns
:11  %tmp_i_i_i_i = call fastcc float @dut_sinf_or_cosf(float %p_x_assign_2) nounwind


 <State 103>: 8.41ns
ST_103: z_load [1/2] 2.71ns
:4  %z_load = load float* %z_addr_1, align 4

ST_103: tmp_39 [4/4] 5.70ns
:12  %tmp_39 = fmul float %z_load, %tmp_i_i_i_i


 <State 104>: 5.70ns
ST_104: tmp_39 [3/4] 5.70ns
:12  %tmp_39 = fmul float %z_load, %tmp_i_i_i_i


 <State 105>: 5.70ns
ST_105: tmp_39 [2/4] 5.70ns
:12  %tmp_39 = fmul float %z_load, %tmp_i_i_i_i


 <State 106>: 5.70ns
ST_106: tmp_39 [1/4] 5.70ns
:12  %tmp_39 = fmul float %z_load, %tmp_i_i_i_i


 <State 107>: 7.26ns
ST_107: sum_1 [5/5] 7.26ns
:13  %sum_1 = fadd float %sum9, %tmp_39


 <State 108>: 7.26ns
ST_108: sum_1 [4/5] 7.26ns
:13  %sum_1 = fadd float %sum9, %tmp_39


 <State 109>: 7.26ns
ST_109: sum_1 [3/5] 7.26ns
:13  %sum_1 = fadd float %sum9, %tmp_39


 <State 110>: 7.26ns
ST_110: sum_1 [2/5] 7.26ns
:13  %sum_1 = fadd float %sum9, %tmp_39


 <State 111>: 7.26ns
ST_111: sum_1 [1/5] 7.26ns
:13  %sum_1 = fadd float %sum9, %tmp_39

ST_111: stg_439 [1/1] 0.00ns
:14  br label %11


 <State 112>: 5.70ns
ST_112: tmp_31 [3/4] 5.70ns
:0  %tmp_31 = fmul float %p_s, %sum9


 <State 113>: 5.70ns
ST_113: tmp_31 [2/4] 5.70ns
:0  %tmp_31 = fmul float %p_s, %sum9


 <State 114>: 8.41ns
ST_114: tmp_31 [1/4] 5.70ns
:0  %tmp_31 = fmul float %p_s, %sum9

ST_114: tmp_55_cast [1/1] 0.00ns
:2  %tmp_55_cast = zext i10 %tmp_48 to i64

ST_114: X_addr [1/1] 0.00ns
:3  %X_addr = getelementptr [980 x float]* %X, i64 0, i64 %tmp_55_cast

ST_114: stg_445 [1/1] 2.71ns
:4  store float %tmp_31, float* %X_addr, align 4

ST_114: stg_446 [1/1] 0.00ns
:5  br label %.preheader67


 <State 115>: 3.89ns
ST_115: output1 [1/2] 3.89ns
.preheader66.preheader:0  %output1 = call fastcc i1 @dut_knn([980 x float]* %X)

ST_115: stg_448 [1/1] 0.00ns
.preheader66.preheader:1  ret i1 %output1



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 No timing violations. 


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105
	State 106
	State 107
	State 108
	State 109
	State 110
	State 111
	State 112
	State 113
	State 114
	State 115


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
