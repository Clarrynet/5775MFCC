// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_mfcc_fft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sound_file_address0,
        sound_file_ce0,
        sound_file_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_st1_fsm_0 = 25'b1;
parameter    ap_ST_st2_fsm_1 = 25'b10;
parameter    ap_ST_st3_fsm_2 = 25'b100;
parameter    ap_ST_st4_fsm_3 = 25'b1000;
parameter    ap_ST_st5_fsm_4 = 25'b10000;
parameter    ap_ST_st6_fsm_5 = 25'b100000;
parameter    ap_ST_st7_fsm_6 = 25'b1000000;
parameter    ap_ST_st8_fsm_7 = 25'b10000000;
parameter    ap_ST_st9_fsm_8 = 25'b100000000;
parameter    ap_ST_st10_fsm_9 = 25'b1000000000;
parameter    ap_ST_st11_fsm_10 = 25'b10000000000;
parameter    ap_ST_st12_fsm_11 = 25'b100000000000;
parameter    ap_ST_st13_fsm_12 = 25'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 25'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 25'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 25'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 25'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 25'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 25'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 25'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 25'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 25'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 25'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 25'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 25'b1000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv13_0 = 13'b0000000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv14_31 = 14'b110001;
parameter    ap_const_lv9_100 = 9'b100000000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv6_31 = 6'b110001;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv13_64 = 13'b1100100;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv8_81 = 8'b10000001;
parameter    ap_const_lv8_1 = 8'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] sound_file_address0;
output   sound_file_ce0;
input  [31:0] sound_file_q0;
output  [12:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [31:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg sound_file_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_42;
wire   [7:0] hamming_address0;
reg    hamming_ce0;
wire   [31:0] hamming_q0;
reg   [13:0] cx_first_address0;
reg    cx_first_ce0;
reg    cx_first_we0;
reg   [31:0] cx_first_d0;
wire   [31:0] cx_first_q0;
reg    cx_first_ce1;
wire   [31:0] cx_first_q1;
reg   [13:0] cx_second_address0;
reg    cx_second_ce0;
reg    cx_second_we0;
reg   [31:0] cx_second_d0;
wire   [31:0] cx_second_q0;
reg    cx_second_ce1;
wire   [31:0] cx_second_q1;
wire   [13:0] next_mul2_fu_302_p2;
reg   [13:0] next_mul2_reg_527;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_103;
wire   [12:0] i_cast9_fu_308_p1;
reg   [12:0] i_cast9_reg_532;
wire   [8:0] i_1_fu_318_p2;
reg   [8:0] i_1_reg_540;
wire   [0:0] exitcond6_fu_312_p2;
reg   [31:0] hamming_load_reg_550;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_121;
wire   [5:0] j_1_fu_335_p2;
reg   [5:0] j_1_reg_558;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_130;
wire   [12:0] next_mul_fu_341_p2;
reg   [12:0] next_mul_reg_563;
wire   [0:0] exitcond5_fu_329_p2;
wire   [13:0] tmp_s_fu_361_p2;
reg   [13:0] tmp_s_reg_573;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_147;
wire   [13:0] next_mul4_fu_371_p2;
reg   [13:0] next_mul4_reg_583;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_156;
wire   [8:0] i_3_fu_383_p2;
reg   [8:0] i_3_reg_591;
wire   [14:0] tmp_3_cast_fu_389_p1;
reg   [14:0] tmp_3_cast_reg_596;
wire   [0:0] exitcond4_fu_377_p2;
wire   [5:0] j_2_fu_399_p2;
reg   [5:0] j_2_reg_604;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_172;
wire   [0:0] exitcond3_fu_393_p2;
wire   [14:0] tmp_9_fu_432_p2;
reg   [14:0] tmp_9_reg_614;
wire   [5:0] i_2_fu_448_p2;
reg   [5:0] i_2_reg_622;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_188;
wire   [5:0] frame_1_fu_460_p2;
reg   [5:0] frame_1_reg_630;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_197;
wire   [13:0] tmp_3_fu_482_p2;
reg   [13:0] tmp_3_reg_635;
wire   [0:0] exitcond1_fu_454_p2;
wire   [7:0] i_4_fu_494_p2;
reg   [7:0] i_4_reg_643;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_211;
wire   [13:0] tmp_13_fu_504_p2;
reg   [13:0] tmp_13_reg_648;
wire   [0:0] exitcond_fu_488_p2;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_228;
wire   [31:0] grp_fu_288_p2;
reg   [31:0] tmp_10_reg_675;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_238;
wire   [31:0] grp_fu_296_p2;
reg   [31:0] tmp_11_reg_680;
wire   [31:0] grp_fu_284_p2;
reg   [31:0] tmp_12_reg_685;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_249;
reg   [13:0] M_address0;
reg    M_ce0;
reg    M_we0;
wire   [31:0] M_q0;
wire    grp_dut_fft_fu_272_ap_start;
wire    grp_dut_fft_fu_272_ap_done;
wire    grp_dut_fft_fu_272_ap_idle;
wire    grp_dut_fft_fu_272_ap_ready;
wire   [13:0] grp_dut_fft_fu_272_f_first_address0;
wire    grp_dut_fft_fu_272_f_first_ce0;
wire    grp_dut_fft_fu_272_f_first_we0;
wire   [31:0] grp_dut_fft_fu_272_f_first_d0;
wire   [13:0] grp_dut_fft_fu_272_f_first_address1;
wire    grp_dut_fft_fu_272_f_first_ce1;
wire    grp_dut_fft_fu_272_f_first_we1;
wire   [31:0] grp_dut_fft_fu_272_f_first_d1;
wire   [13:0] grp_dut_fft_fu_272_f_second_address0;
wire    grp_dut_fft_fu_272_f_second_ce0;
wire    grp_dut_fft_fu_272_f_second_we0;
wire   [31:0] grp_dut_fft_fu_272_f_second_d0;
wire   [13:0] grp_dut_fft_fu_272_f_second_address1;
wire    grp_dut_fft_fu_272_f_second_ce1;
wire    grp_dut_fft_fu_272_f_second_we1;
wire   [31:0] grp_dut_fft_fu_272_f_second_d1;
reg   [8:0] i_reg_158;
reg   [13:0] phi_mul1_reg_169;
reg   [5:0] j_reg_181;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_307;
reg   [12:0] phi_mul_reg_192;
reg   [8:0] i1_reg_203;
reg   [13:0] phi_mul3_reg_214;
reg   [5:0] j2_reg_226;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_328;
reg   [5:0] i3_reg_237;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_337;
reg   [5:0] frame_reg_249;
wire   [0:0] exitcond2_fu_442_p2;
reg   [7:0] i4_reg_261;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_359;
reg    ap_reg_grp_dut_fft_fu_272_ap_start;
wire   [63:0] tmp_2_fu_324_p1;
wire   [63:0] tmp_7_fu_352_p1;
wire   [63:0] tmp_14_cast_fu_367_p1;
wire   [63:0] tmp_15_cast_fu_415_p1;
wire   [63:0] tmp_18_cast_fu_437_p1;
wire   [63:0] tmp_15_fu_517_p1;
wire   [63:0] tmp_21_cast_fu_523_p1;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_388;
reg   [31:0] grp_fu_288_p0;
reg   [31:0] grp_fu_288_p1;
wire   [12:0] tmp_6_fu_347_p2;
wire   [13:0] tmp_9_cast_fu_357_p1;
wire   [13:0] tmp_4_cast_fu_405_p1;
wire   [13:0] tmp_4_fu_409_p2;
wire   [13:0] tmp_5_fu_420_p3;
wire   [14:0] tmp_17_cast_fu_428_p1;
wire   [12:0] tmp_1_fu_470_p3;
wire   [13:0] tmp_1_cast_fu_466_p1;
wire   [13:0] p_shl_cast_fu_478_p1;
wire   [13:0] tmp_cast5_fu_500_p1;
wire   [13:0] tmp_14_fu_509_p3;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'b1;
#0 ap_reg_grp_dut_fft_fu_272_ap_start = 1'b0;
end

dut_mfcc_fft_hamming #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
hamming_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(hamming_address0),
    .ce0(hamming_ce0),
    .q0(hamming_q0)
);

dut_mfcc_fft_cx_first #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
cx_first_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cx_first_address0),
    .ce0(cx_first_ce0),
    .we0(cx_first_we0),
    .d0(cx_first_d0),
    .q0(cx_first_q0),
    .address1(grp_dut_fft_fu_272_f_first_address1),
    .ce1(cx_first_ce1),
    .we1(grp_dut_fft_fu_272_f_first_we1),
    .d1(grp_dut_fft_fu_272_f_first_d1),
    .q1(cx_first_q1)
);

dut_mfcc_fft_cx_first #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
cx_second_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cx_second_address0),
    .ce0(cx_second_ce0),
    .we0(cx_second_we0),
    .d0(cx_second_d0),
    .q0(cx_second_q0),
    .address1(grp_dut_fft_fu_272_f_second_address1),
    .ce1(cx_second_ce1),
    .we1(grp_dut_fft_fu_272_f_second_we1),
    .d1(grp_dut_fft_fu_272_f_second_d1),
    .q1(cx_second_q1)
);

dut_mfcc_fft_M #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
M_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(M_address0),
    .ce0(M_ce0),
    .we0(M_we0),
    .d0(grp_fu_288_p2),
    .q0(M_q0)
);

dut_fft grp_dut_fft_fu_272(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_fft_fu_272_ap_start),
    .ap_done(grp_dut_fft_fu_272_ap_done),
    .ap_idle(grp_dut_fft_fu_272_ap_idle),
    .ap_ready(grp_dut_fft_fu_272_ap_ready),
    .f_first_address0(grp_dut_fft_fu_272_f_first_address0),
    .f_first_ce0(grp_dut_fft_fu_272_f_first_ce0),
    .f_first_we0(grp_dut_fft_fu_272_f_first_we0),
    .f_first_d0(grp_dut_fft_fu_272_f_first_d0),
    .f_first_q0(cx_first_q0),
    .f_first_address1(grp_dut_fft_fu_272_f_first_address1),
    .f_first_ce1(grp_dut_fft_fu_272_f_first_ce1),
    .f_first_we1(grp_dut_fft_fu_272_f_first_we1),
    .f_first_d1(grp_dut_fft_fu_272_f_first_d1),
    .f_first_q1(cx_first_q1),
    .tmp_s(i3_reg_237),
    .f_second_address0(grp_dut_fft_fu_272_f_second_address0),
    .f_second_ce0(grp_dut_fft_fu_272_f_second_ce0),
    .f_second_we0(grp_dut_fft_fu_272_f_second_we0),
    .f_second_d0(grp_dut_fft_fu_272_f_second_d0),
    .f_second_q0(cx_second_q0),
    .f_second_address1(grp_dut_fft_fu_272_f_second_address1),
    .f_second_ce1(grp_dut_fft_fu_272_f_second_ce1),
    .f_second_we1(grp_dut_fft_fu_272_f_second_we1),
    .f_second_d1(grp_dut_fft_fu_272_f_second_d1),
    .f_second_q1(cx_second_q1),
    .tmp_1(i3_reg_237)
);

dut_fadd_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fadd_32ns_32ns_32_5_full_dsp_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_10_reg_675),
    .din1(tmp_11_reg_680),
    .ce(1'b1),
    .dout(grp_fu_284_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_288_p0),
    .din1(grp_fu_288_p1),
    .ce(1'b1),
    .dout(grp_fu_288_p2)
);

dut_fmul_32ns_32ns_32_4_max_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fmul_32ns_32ns_32_4_max_dsp_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cx_second_q0),
    .din1(cx_second_q0),
    .ce(1'b1),
    .dout(grp_fu_296_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_fft_fu_272_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & (1'b0 == exitcond2_fu_442_p2))) begin
            ap_reg_grp_dut_fft_fu_272_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_fft_fu_272_ap_ready)) begin
            ap_reg_grp_dut_fft_fu_272_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & ~(1'b0 == exitcond_fu_488_p2))) begin
        frame_reg_249 <= frame_1_reg_630;
    end else if (((1'b1 == ap_sig_cseq_ST_st12_fsm_11) & ~(1'b0 == exitcond2_fu_442_p2))) begin
        frame_reg_249 <= ap_const_lv6_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond3_fu_393_p2))) begin
        i1_reg_203 <= i_3_reg_591;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond6_fu_312_p2 == 1'b0))) begin
        i1_reg_203 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & ~(1'b0 == exitcond4_fu_377_p2))) begin
        i3_reg_237 <= ap_const_lv6_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st13_fsm_12) & ~(1'b0 == grp_dut_fft_fu_272_ap_done))) begin
        i3_reg_237 <= i_2_reg_622;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == exitcond1_fu_454_p2))) begin
        i4_reg_261 <= ap_const_lv8_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        i4_reg_261 <= i_4_reg_643;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond5_fu_329_p2))) begin
        i_reg_158 <= i_1_reg_540;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_158 <= ap_const_lv9_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond4_fu_377_p2))) begin
        j2_reg_226 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        j2_reg_226 <= j_2_reg_604;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        j_reg_181 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        j_reg_181 <= j_1_reg_558;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(1'b0 == exitcond5_fu_329_p2))) begin
        phi_mul1_reg_169 <= next_mul2_reg_527;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        phi_mul1_reg_169 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & ~(1'b0 == exitcond3_fu_393_p2))) begin
        phi_mul3_reg_214 <= next_mul4_reg_583;
    end else if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(exitcond6_fu_312_p2 == 1'b0))) begin
        phi_mul3_reg_214 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        phi_mul_reg_192 <= ap_const_lv13_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        phi_mul_reg_192 <= next_mul_reg_563;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        frame_1_reg_630 <= frame_1_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        hamming_load_reg_550 <= hamming_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_1_reg_540 <= i_1_fu_318_p2;
        i_cast9_reg_532[8 : 0] <= i_cast9_fu_308_p1[8 : 0];
        next_mul2_reg_527 <= next_mul2_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        i_2_reg_622 <= i_2_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        i_3_reg_591 <= i_3_fu_383_p2;
        next_mul4_reg_583 <= next_mul4_fu_371_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        i_4_reg_643 <= i_4_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_1_reg_558 <= j_1_fu_335_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        j_2_reg_604 <= j_2_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (1'b0 == exitcond5_fu_329_p2))) begin
        next_mul_reg_563 <= next_mul_fu_341_p2;
        tmp_s_reg_573 <= tmp_s_fu_361_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        tmp_10_reg_675 <= grp_fu_288_p2;
        tmp_11_reg_680 <= grp_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        tmp_12_reg_685 <= grp_fu_284_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) & (1'b0 == exitcond_fu_488_p2))) begin
        tmp_13_reg_648 <= tmp_13_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st9_fsm_8) & (1'b0 == exitcond4_fu_377_p2))) begin
        tmp_3_cast_reg_596[8 : 0] <= tmp_3_cast_fu_389_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & (1'b0 == exitcond1_fu_454_p2))) begin
        tmp_3_reg_635 <= tmp_3_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) & (1'b0 == exitcond3_fu_393_p2))) begin
        tmp_9_reg_614 <= tmp_9_fu_432_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_address0 = tmp_14_cast_fu_367_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        M_address0 = tmp_15_cast_fu_415_p1;
    end else begin
        M_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st10_fsm_9) | (1'b1 == ap_sig_cseq_ST_st8_fsm_7))) begin
        M_ce0 = 1'b1;
    end else begin
        M_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        M_we0 = 1'b1;
    end else begin
        M_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~(1'b0 == exitcond1_fu_454_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st14_fsm_13) & ~(1'b0 == exitcond1_fu_454_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_172) begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_328) begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_188) begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_337) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_197) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_211) begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_228) begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_238) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_42) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_388) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_249) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_359) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_103) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_121) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_130) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_147) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_307) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_156) begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        cx_first_address0 = tmp_18_cast_fu_437_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        cx_first_address0 = tmp_15_fu_517_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_first_address0 = grp_dut_fft_fu_272_f_first_address0;
    end else begin
        cx_first_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        cx_first_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_first_ce0 = grp_dut_fft_fu_272_f_first_ce0;
    end else begin
        cx_first_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_first_ce1 = grp_dut_fft_fu_272_f_first_ce1;
    end else begin
        cx_first_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        cx_first_d0 = M_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_first_d0 = grp_dut_fft_fu_272_f_first_d0;
    end else begin
        cx_first_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        cx_first_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_first_we0 = grp_dut_fft_fu_272_f_first_we0;
    end else begin
        cx_first_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        cx_second_address0 = tmp_18_cast_fu_437_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        cx_second_address0 = tmp_15_fu_517_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_second_address0 = grp_dut_fft_fu_272_f_second_address0;
    end else begin
        cx_second_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st15_fsm_14) | (1'b1 == ap_sig_cseq_ST_st11_fsm_10))) begin
        cx_second_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_second_ce0 = grp_dut_fft_fu_272_f_second_ce0;
    end else begin
        cx_second_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_second_ce1 = grp_dut_fft_fu_272_f_second_ce1;
    end else begin
        cx_second_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        cx_second_d0 = ap_const_lv32_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_second_d0 = grp_dut_fft_fu_272_f_second_d0;
    end else begin
        cx_second_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        cx_second_we0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        cx_second_we0 = grp_dut_fft_fu_272_f_second_we0;
    end else begin
        cx_second_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_288_p0 = cx_first_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_288_p0 = sound_file_q0;
    end else begin
        grp_fu_288_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        grp_fu_288_p1 = cx_first_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        grp_fu_288_p1 = hamming_load_reg_550;
    end else begin
        grp_fu_288_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        hamming_ce0 = 1'b1;
    end else begin
        hamming_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        sound_file_ce0 = 1'b1;
    end else begin
        sound_file_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if (~(exitcond6_fu_312_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : begin
            if ((1'b0 == exitcond5_fu_329_p2)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st9_fsm_8 : begin
            if ((1'b0 == exitcond4_fu_377_p2)) begin
                ap_NS_fsm = ap_ST_st10_fsm_9;
            end else begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end
        end
        ap_ST_st10_fsm_9 : begin
            if ((1'b0 == exitcond3_fu_393_p2)) begin
                ap_NS_fsm = ap_ST_st11_fsm_10;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st12_fsm_11 : begin
            if (~(1'b0 == exitcond2_fu_442_p2)) begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st13_fsm_12 : begin
            if (~(1'b0 == grp_dut_fft_fu_272_ap_done)) begin
                ap_NS_fsm = ap_ST_st12_fsm_11;
            end else begin
                ap_NS_fsm = ap_ST_st13_fsm_12;
            end
        end
        ap_ST_st14_fsm_13 : begin
            if (~(1'b0 == exitcond1_fu_454_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end
        end
        ap_ST_st15_fsm_14 : begin
            if ((1'b0 == exitcond_fu_488_p2)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st14_fsm_13;
            end
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_103 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_121 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_130 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_147 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_156 = (1'b1 == ap_CS_fsm[ap_const_lv32_8]);
end

always @ (*) begin
    ap_sig_172 = (1'b1 == ap_CS_fsm[ap_const_lv32_9]);
end

always @ (*) begin
    ap_sig_188 = (1'b1 == ap_CS_fsm[ap_const_lv32_B]);
end

always @ (*) begin
    ap_sig_197 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_211 = (1'b1 == ap_CS_fsm[ap_const_lv32_E]);
end

always @ (*) begin
    ap_sig_228 = (1'b1 == ap_CS_fsm[ap_const_lv32_F]);
end

always @ (*) begin
    ap_sig_238 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_249 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_307 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_328 = (1'b1 == ap_CS_fsm[ap_const_lv32_A]);
end

always @ (*) begin
    ap_sig_337 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_359 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_388 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_42 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

assign exitcond1_fu_454_p2 = ((frame_reg_249 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond2_fu_442_p2 = ((i3_reg_237 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond3_fu_393_p2 = ((j2_reg_226 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond4_fu_377_p2 = ((i1_reg_203 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond5_fu_329_p2 = ((j_reg_181 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond6_fu_312_p2 = ((i_reg_158 == ap_const_lv9_100) ? 1'b1 : 1'b0);

assign exitcond_fu_488_p2 = ((i4_reg_261 == ap_const_lv8_81) ? 1'b1 : 1'b0);

assign frame_1_fu_460_p2 = (frame_reg_249 + ap_const_lv6_1);

assign grp_dut_fft_fu_272_ap_start = ap_reg_grp_dut_fft_fu_272_ap_start;

assign hamming_address0 = tmp_2_fu_324_p1;

assign i_1_fu_318_p2 = (i_reg_158 + ap_const_lv9_1);

assign i_2_fu_448_p2 = (i3_reg_237 + ap_const_lv6_1);

assign i_3_fu_383_p2 = (i1_reg_203 + ap_const_lv9_1);

assign i_4_fu_494_p2 = (i4_reg_261 + ap_const_lv8_1);

assign i_cast9_fu_308_p1 = i_reg_158;

assign j_1_fu_335_p2 = (j_reg_181 + ap_const_lv6_1);

assign j_2_fu_399_p2 = (j2_reg_226 + ap_const_lv6_1);

assign next_mul2_fu_302_p2 = (phi_mul1_reg_169 + ap_const_lv14_31);

assign next_mul4_fu_371_p2 = (phi_mul3_reg_214 + ap_const_lv14_31);

assign next_mul_fu_341_p2 = (phi_mul_reg_192 + ap_const_lv13_64);

assign output_r_address0 = tmp_21_cast_fu_523_p1;

assign output_r_d0 = tmp_12_reg_685;

assign p_shl_cast_fu_478_p1 = tmp_1_fu_470_p3;

assign sound_file_address0 = tmp_7_fu_352_p1;

assign tmp_13_fu_504_p2 = (tmp_3_reg_635 + tmp_cast5_fu_500_p1);

assign tmp_14_cast_fu_367_p1 = tmp_s_reg_573;

assign tmp_14_fu_509_p3 = {{frame_reg_249}, {i4_reg_261}};

assign tmp_15_cast_fu_415_p1 = tmp_4_fu_409_p2;

assign tmp_15_fu_517_p1 = tmp_14_fu_509_p3;

assign tmp_17_cast_fu_428_p1 = tmp_5_fu_420_p3;

assign tmp_18_cast_fu_437_p1 = tmp_9_reg_614;

assign tmp_1_cast_fu_466_p1 = frame_reg_249;

assign tmp_1_fu_470_p3 = {{frame_reg_249}, {ap_const_lv7_0}};

assign tmp_21_cast_fu_523_p1 = tmp_13_reg_648;

assign tmp_2_fu_324_p1 = i_reg_158;

assign tmp_3_cast_fu_389_p1 = i1_reg_203;

assign tmp_3_fu_482_p2 = (tmp_1_cast_fu_466_p1 + p_shl_cast_fu_478_p1);

assign tmp_4_cast_fu_405_p1 = j2_reg_226;

assign tmp_4_fu_409_p2 = (tmp_4_cast_fu_405_p1 + phi_mul3_reg_214);

assign tmp_5_fu_420_p3 = {{j2_reg_226}, {ap_const_lv8_0}};

assign tmp_6_fu_347_p2 = (phi_mul_reg_192 + i_cast9_reg_532);

assign tmp_7_fu_352_p1 = tmp_6_fu_347_p2;

assign tmp_9_cast_fu_357_p1 = j_reg_181;

assign tmp_9_fu_432_p2 = (tmp_3_cast_reg_596 + tmp_17_cast_fu_428_p1);

assign tmp_cast5_fu_500_p1 = i4_reg_261;

assign tmp_s_fu_361_p2 = (phi_mul1_reg_169 + tmp_9_cast_fu_357_p1);

always @ (posedge ap_clk) begin
    i_cast9_reg_532[12:9] <= 4'b0000;
    tmp_3_cast_reg_596[14:9] <= 6'b000000;
end

endmodule //dut_mfcc_fft
