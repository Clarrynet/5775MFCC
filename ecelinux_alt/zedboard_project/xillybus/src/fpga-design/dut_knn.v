// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dut_knn (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0
);

parameter    ap_ST_st1_fsm_0 = 36'b1;
parameter    ap_ST_st2_fsm_1 = 36'b10;
parameter    ap_ST_st3_fsm_2 = 36'b100;
parameter    ap_ST_st4_fsm_3 = 36'b1000;
parameter    ap_ST_st5_fsm_4 = 36'b10000;
parameter    ap_ST_st6_fsm_5 = 36'b100000;
parameter    ap_ST_st7_fsm_6 = 36'b1000000;
parameter    ap_ST_st8_fsm_7 = 36'b10000000;
parameter    ap_ST_st9_fsm_8 = 36'b100000000;
parameter    ap_ST_st10_fsm_9 = 36'b1000000000;
parameter    ap_ST_st11_fsm_10 = 36'b10000000000;
parameter    ap_ST_st12_fsm_11 = 36'b100000000000;
parameter    ap_ST_st13_fsm_12 = 36'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 36'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 36'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 36'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 36'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 36'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 36'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 36'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 36'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 36'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 36'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 36'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 36'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 36'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 36'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 36'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 36'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 36'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 36'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 36'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 36'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 36'b1000000000000000000000000000000000;
parameter    ap_ST_st35_fsm_34 = 36'b10000000000000000000000000000000000;
parameter    ap_ST_st36_fsm_35 = 36'b100000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_const_lv5_0 = 5'b00000;
parameter    ap_const_lv4_0 = 4'b0000;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_23 = 32'b100011;
parameter    ap_const_lv32_22 = 32'b100010;
parameter    ap_const_lv32_31 = 32'b110001;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_3F666666 = 32'b111111011001100110011001100110;
parameter    ap_const_lv5_14 = 5'b10100;
parameter    ap_const_lv5_1 = 5'b1;
parameter    ap_const_lv4_E = 4'b1110;
parameter    ap_const_lv4_1 = 4'b1;
parameter    ap_const_lv14_3D5 = 14'b1111010101;
parameter    ap_const_lv14_3E8 = 14'b1111101000;
parameter    ap_const_lv9_13 = 9'b10011;
parameter    ap_const_lv14_3D4 = 14'b1111010100;
parameter    ap_const_lv10_32 = 10'b110010;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv6_31 = 6'b110001;
parameter    ap_const_lv6_1 = 6'b1;
parameter    ap_const_lv14_2AE = 14'b1010101110;
parameter    ap_const_lv10_31 = 10'b110001;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv23_0 = 23'b00000000000000000000000;
parameter    ap_const_lv5_4 = 5'b100;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_r_address0;
output   input_r_ce0;
input  [31:0] input_r_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;

(* fsm_encoding = "none" *) reg   [35:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_53;
wire   [13:0] training_data_V_address0;
reg    training_data_V_ce0;
wire   [5:0] training_data_V_q0;
wire   [4:0] i_5_fu_484_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_78;
wire   [3:0] i_6_fu_501_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_87;
wire   [13:0] next_mul8_fu_512_p2;
reg   [13:0] next_mul8_reg_929;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_96;
wire   [13:0] next_mul6_fu_518_p2;
reg   [13:0] next_mul6_reg_934;
wire   [8:0] next_mul4_fu_524_p2;
reg   [8:0] next_mul4_reg_939;
wire   [3:0] j_4_fu_536_p2;
reg   [3:0] j_4_reg_947;
reg   [13:0] training_data2_addr_reg_952;
wire   [0:0] exitcond8_fu_530_p2;
wire   [9:0] next_mul2_fu_553_p2;
reg   [9:0] next_mul2_reg_957;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_117;
wire   [9:0] i2_cast_cast_fu_559_p1;
reg   [9:0] i2_cast_cast_reg_962;
wire   [4:0] i_8_fu_569_p2;
reg   [4:0] i_8_reg_970;
wire   [0:0] exitcond7_fu_563_p2;
wire   [5:0] k_2_fu_600_p2;
reg   [5:0] k_2_reg_983;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_136;
wire   [0:0] exitcond6_fu_594_p2;
wire   [9:0] next_mul_fu_627_p2;
reg   [9:0] next_mul_reg_993;
wire   [13:0] tmp_38_fu_636_p2;
reg   [13:0] tmp_38_reg_998;
reg   [5:0] training_data_V_load_reg_1003;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_153;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_162;
wire   [31:0] grp_fu_467_p1;
reg   [31:0] tmp_35_reg_1013;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_171;
wire   [31:0] grp_fu_470_p1;
reg   [31:0] tmp_28_reg_1018;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_180;
wire   [13:0] next_mul1_fu_650_p2;
reg   [13:0] next_mul1_reg_1023;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_189;
wire   [9:0] i3_cast_cast_fu_656_p1;
reg   [9:0] i3_cast_cast_reg_1028;
wire   [4:0] i_7_fu_666_p2;
reg   [4:0] i_7_reg_1036;
wire   [13:0] next_mul7_fu_672_p2;
reg   [13:0] next_mul7_reg_1041;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_202;
wire   [9:0] j4_cast_fu_678_p1;
reg   [9:0] j4_cast_reg_1046;
wire   [3:0] j_5_fu_688_p2;
reg   [3:0] j_5_reg_1054;
wire   [5:0] k_3_fu_700_p2;
reg   [5:0] k_3_reg_1062;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_215;
wire   [9:0] next_mul9_fu_706_p2;
reg   [9:0] next_mul9_reg_1067;
wire   [0:0] exitcond3_fu_694_p2;
wire   [9:0] next_mul10_fu_726_p2;
reg   [9:0] next_mul10_reg_1077;
wire   [13:0] tmp_32_fu_735_p2;
reg   [13:0] tmp_32_reg_1082;
wire   [13:0] next_mul3_fu_745_p2;
reg   [13:0] next_mul3_reg_1087;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_235;
wire   [9:0] next_mul5_fu_751_p2;
reg   [9:0] next_mul5_reg_1092;
wire   [4:0] i_9_fu_763_p2;
reg   [4:0] i_9_reg_1100;
reg   [4:0] min_distance_addr_1_reg_1105;
wire   [0:0] exitcond2_fu_757_p2;
wire   [9:0] j7_cast6_fu_774_p1;
reg   [9:0] j7_cast6_reg_1110;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_253;
wire   [3:0] j_6_fu_784_p2;
reg   [3:0] j_6_reg_1118;
reg   [3:0] distance_addr_1_reg_1123;
wire   [0:0] exitcond1_fu_778_p2;
wire   [5:0] k_4_fu_801_p2;
reg   [5:0] k_4_reg_1131;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_269;
wire   [0:0] exitcond_fu_795_p2;
wire   [9:0] next_mul11_fu_822_p2;
reg   [9:0] next_mul11_reg_1141;
reg   [31:0] input_load_reg_1151;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_286;
wire   [31:0] training_instance_q0;
reg   [31:0] training_instance_load_reg_1156;
wire   [31:0] grp_fu_463_p2;
reg   [31:0] x_assign_reg_1161;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_297;
wire   [0:0] tmp_7_fu_894_p2;
reg   [0:0] tmp_7_reg_1166;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_306;
reg   [13:0] training_data2_address0;
reg    training_data2_ce0;
reg    training_data2_we0;
reg   [31:0] training_data2_d0;
wire   [31:0] training_data2_q0;
reg   [13:0] training_instance_address0;
reg    training_instance_ce0;
reg    training_instance_we0;
reg   [4:0] min_distance_address0;
reg    min_distance_ce0;
reg    min_distance_we0;
reg   [31:0] min_distance_d0;
wire   [31:0] min_distance_q0;
reg   [3:0] distance_address0;
reg    distance_ce0;
reg    distance_we0;
reg   [31:0] distance_d0;
wire   [31:0] distance_q0;
reg   [4:0] i_reg_202;
wire   [0:0] exitcond10_fu_478_p2;
reg   [3:0] i1_reg_213;
wire   [0:0] exitcond9_fu_495_p2;
reg   [3:0] j_reg_224;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_371;
reg   [8:0] phi_mul3_reg_235;
reg   [13:0] phi_mul5_reg_247;
reg   [13:0] phi_mul7_reg_259;
reg   [4:0] i2_reg_271;
reg   [9:0] phi_mul1_reg_282;
reg   [5:0] k_reg_294;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_397;
reg   [9:0] phi_mul_reg_305;
reg   [4:0] i3_reg_316;
wire   [0:0] exitcond4_fu_682_p2;
reg   [13:0] phi_mul2_reg_327;
reg   [3:0] j4_reg_339;
wire   [0:0] exitcond5_fu_660_p2;
reg   [13:0] phi_mul8_reg_350;
reg   [5:0] k5_reg_362;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_429;
reg   [9:0] phi_mul9_reg_373;
reg   [9:0] phi_mul10_reg_384;
reg   [4:0] i6_reg_395;
reg   [9:0] phi_mul4_reg_406;
reg   [13:0] phi_mul6_reg_418;
reg   [3:0] j7_reg_430;
reg    ap_sig_cseq_ST_st36_fsm_35;
reg    ap_sig_453;
reg   [5:0] k8_reg_441;
reg    ap_sig_cseq_ST_st35_fsm_34;
reg    ap_sig_462;
reg   [9:0] phi_mul11_reg_452;
wire   [63:0] tmp_fu_490_p1;
wire   [63:0] tmp_s_fu_507_p1;
wire   [63:0] tmp_50_cast_fu_548_p1;
wire   [63:0] tmp_34_fu_622_p1;
wire   [63:0] tmp_55_cast_fu_646_p1;
wire   [63:0] tmp_58_cast_fu_721_p1;
wire   [63:0] tmp_59_cast_fu_741_p1;
wire   [63:0] tmp_30_fu_769_p1;
wire   [63:0] tmp_37_fu_790_p1;
wire   [63:0] tmp_60_cast_fu_817_p1;
wire   [63:0] tmp_61_cast_fu_837_p1;
wire   [0:0] tmp_39_fu_907_p2;
wire   [31:0] tmp_42_fu_900_p2;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_511;
wire   [31:0] grp_fu_467_p0;
wire   [31:0] grp_fu_470_p0;
wire   [31:0] tmp_6_fu_473_p0;
wire   [13:0] tmp_29_fu_542_p2;
wire   [1:0] tmp_1_fu_575_p4;
wire   [9:0] k_cast1_fu_590_p1;
wire   [9:0] tmp1_fu_606_p2;
wire   [13:0] tmp1_cast_fu_612_p1;
wire   [13:0] tmp_33_fu_616_p2;
wire   [13:0] tmp_39_cast_fu_632_p1;
wire   [13:0] tmp_41_cast_fu_711_p1;
wire   [13:0] tmp_31_fu_715_p2;
wire   [13:0] tmp_43_cast_fu_731_p1;
wire   [9:0] tmp_45_cast_fu_807_p1;
wire   [9:0] tmp_40_fu_811_p2;
wire   [13:0] tmp_47_cast_fu_827_p1;
wire   [13:0] tmp_41_fu_831_p2;
wire   [31:0] p_Val2_s_fu_842_p1;
wire   [30:0] tmp_2_fu_845_p1;
wire   [31:0] p_Result_s_fu_853_p3;
wire   [7:0] tmp_4_fu_866_p4;
wire   [22:0] tmp_3_fu_849_p1;
wire   [0:0] notrhs_fu_882_p2;
wire   [0:0] notlhs_fu_876_p2;
wire   [0:0] tmp_5_fu_888_p2;
wire   [0:0] tmp_6_fu_473_p2;
reg   [35:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 36'b1;
end

dut_knn_training_data_V #(
    .DataWidth( 6 ),
    .AddressRange( 14000 ),
    .AddressWidth( 14 ))
training_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data_V_address0),
    .ce0(training_data_V_ce0),
    .q0(training_data_V_q0)
);

dut_knn_training_data2 #(
    .DataWidth( 32 ),
    .AddressRange( 13734 ),
    .AddressWidth( 14 ))
training_data2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_data2_address0),
    .ce0(training_data2_ce0),
    .we0(training_data2_we0),
    .d0(training_data2_d0),
    .q0(training_data2_q0)
);

dut_knn_training_instance #(
    .DataWidth( 32 ),
    .AddressRange( 13720 ),
    .AddressWidth( 14 ))
training_instance_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(training_instance_address0),
    .ce0(training_instance_ce0),
    .we0(training_instance_we0),
    .d0(training_data2_q0),
    .q0(training_instance_q0)
);

dut_knn_min_distance #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
min_distance_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(min_distance_address0),
    .ce0(min_distance_ce0),
    .we0(min_distance_we0),
    .d0(min_distance_d0),
    .q0(min_distance_q0)
);

dut_knn_distance #(
    .DataWidth( 32 ),
    .AddressRange( 14 ),
    .AddressWidth( 4 ))
distance_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(distance_address0),
    .ce0(distance_ce0),
    .we0(distance_we0),
    .d0(distance_d0),
    .q0(distance_q0)
);

dut_fsub_32ns_32ns_32_5_full_dsp #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_fsub_32ns_32ns_32_5_full_dsp_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_load_reg_1151),
    .din1(training_instance_load_reg_1156),
    .ce(1'b1),
    .dout(grp_fu_463_p2)
);

dut_uitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_uitofp_32ns_32_6_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_467_p0),
    .ce(1'b1),
    .dout(grp_fu_467_p1)
);

dut_sitofp_32ns_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
dut_sitofp_32ns_32_6_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_470_p0),
    .ce(1'b1),
    .dout(grp_fu_470_p1)
);

dut_fcmp_32ns_32ns_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
dut_fcmp_32ns_32ns_1_1_U22(
    .din0(tmp_6_fu_473_p0),
    .din1(ap_const_lv32_3F666666),
    .opcode(ap_const_lv5_4),
    .dout(tmp_6_fu_473_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~(1'b0 == exitcond10_fu_478_p2))) begin
        i1_reg_213 <= ap_const_lv4_0;
    end else if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_495_p2))) begin
        i1_reg_213 <= i_6_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond6_fu_594_p2))) begin
        i2_reg_271 <= i_8_reg_970;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond8_fu_530_p2 == 1'b0))) begin
        i2_reg_271 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == exitcond4_fu_682_p2))) begin
        i3_reg_316 <= i_7_reg_1036;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond8_fu_530_p2 == 1'b0))) begin
        i3_reg_316 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & ~(1'b0 == exitcond1_fu_778_p2))) begin
        i6_reg_395 <= i_9_reg_1100;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond5_fu_660_p2))) begin
        i6_reg_395 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond10_fu_478_p2))) begin
        i_reg_202 <= i_5_fu_484_p2;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_202 <= ap_const_lv5_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(1'b0 == exitcond3_fu_694_p2))) begin
        j4_reg_339 <= j_5_reg_1054;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond5_fu_660_p2))) begin
        j4_reg_339 <= ap_const_lv4_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond2_fu_757_p2))) begin
        j7_reg_430 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        j7_reg_430 <= j_6_reg_1118;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond9_fu_495_p2))) begin
        j_reg_224 <= ap_const_lv4_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        j_reg_224 <= j_4_reg_947;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b0 == exitcond4_fu_682_p2))) begin
        k5_reg_362 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        k5_reg_362 <= k_3_reg_1062;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond1_fu_778_p2))) begin
        k8_reg_441 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        k8_reg_441 <= k_4_reg_1131;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond7_fu_563_p2))) begin
        k_reg_294 <= ap_const_lv6_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        k_reg_294 <= k_2_reg_983;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b0 == exitcond4_fu_682_p2))) begin
        phi_mul10_reg_384 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        phi_mul10_reg_384 <= next_mul10_reg_1077;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond1_fu_778_p2))) begin
        phi_mul11_reg_452 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        phi_mul11_reg_452 <= next_mul11_reg_1141;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~(1'b0 == exitcond6_fu_594_p2))) begin
        phi_mul1_reg_282 <= next_mul2_reg_957;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond8_fu_530_p2 == 1'b0))) begin
        phi_mul1_reg_282 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & ~(1'b0 == exitcond4_fu_682_p2))) begin
        phi_mul2_reg_327 <= next_mul1_reg_1023;
    end else if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond8_fu_530_p2 == 1'b0))) begin
        phi_mul2_reg_327 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond9_fu_495_p2))) begin
        phi_mul3_reg_235 <= ap_const_lv9_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        phi_mul3_reg_235 <= next_mul4_reg_939;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & ~(1'b0 == exitcond1_fu_778_p2))) begin
        phi_mul4_reg_406 <= next_mul5_reg_1092;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond5_fu_660_p2))) begin
        phi_mul4_reg_406 <= ap_const_lv10_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond9_fu_495_p2))) begin
        phi_mul5_reg_247 <= ap_const_lv14_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        phi_mul5_reg_247 <= next_mul6_reg_934;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & ~(1'b0 == exitcond1_fu_778_p2))) begin
        phi_mul6_reg_418 <= next_mul3_reg_1087;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & ~(1'b0 == exitcond5_fu_660_p2))) begin
        phi_mul6_reg_418 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(1'b0 == exitcond9_fu_495_p2))) begin
        phi_mul7_reg_259 <= ap_const_lv14_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        phi_mul7_reg_259 <= next_mul8_reg_929;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & ~(1'b0 == exitcond3_fu_694_p2))) begin
        phi_mul8_reg_350 <= next_mul7_reg_1041;
    end else if (((1'b1 == ap_sig_cseq_ST_st21_fsm_20) & (1'b0 == exitcond5_fu_660_p2))) begin
        phi_mul8_reg_350 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st22_fsm_21) & (1'b0 == exitcond4_fu_682_p2))) begin
        phi_mul9_reg_373 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        phi_mul9_reg_373 <= next_mul9_reg_1067;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st5_fsm_4) & (1'b0 == exitcond7_fu_563_p2))) begin
        phi_mul_reg_305 <= ap_const_lv10_0;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        phi_mul_reg_305 <= next_mul_reg_993;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st26_fsm_25) & (1'b0 == exitcond1_fu_778_p2))) begin
        distance_addr_1_reg_1123 <= tmp_37_fu_790_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        i2_cast_cast_reg_962[4 : 0] <= i2_cast_cast_fu_559_p1[4 : 0];
        i_8_reg_970 <= i_8_fu_569_p2;
        next_mul2_reg_957 <= next_mul2_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        i3_cast_cast_reg_1028[4 : 0] <= i3_cast_cast_fu_656_p1[4 : 0];
        i_7_reg_1036 <= i_7_fu_666_p2;
        next_mul1_reg_1023 <= next_mul1_fu_650_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        i_9_reg_1100 <= i_9_fu_763_p2;
        next_mul3_reg_1087 <= next_mul3_fu_745_p2;
        next_mul5_reg_1092 <= next_mul5_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        input_load_reg_1151 <= input_r_q0;
        training_instance_load_reg_1156 <= training_instance_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        j4_cast_reg_1046[3 : 0] <= j4_cast_fu_678_p1[3 : 0];
        j_5_reg_1054 <= j_5_fu_688_p2;
        next_mul7_reg_1041 <= next_mul7_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        j7_cast6_reg_1110[3 : 0] <= j7_cast6_fu_774_p1[3 : 0];
        j_6_reg_1118 <= j_6_fu_784_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        j_4_reg_947 <= j_4_fu_536_p2;
        next_mul4_reg_939 <= next_mul4_fu_524_p2;
        next_mul6_reg_934 <= next_mul6_fu_518_p2;
        next_mul8_reg_929 <= next_mul8_fu_512_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        k_2_reg_983 <= k_2_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        k_3_reg_1062 <= k_3_fu_700_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        k_4_reg_1131 <= k_4_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & (1'b0 == exitcond2_fu_757_p2))) begin
        min_distance_addr_1_reg_1105 <= tmp_30_fu_769_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) & (1'b0 == exitcond3_fu_694_p2))) begin
        next_mul10_reg_1077 <= next_mul10_fu_726_p2;
        next_mul9_reg_1067 <= next_mul9_fu_706_p2;
        tmp_32_reg_1082 <= tmp_32_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st27_fsm_26) & (1'b0 == exitcond_fu_795_p2))) begin
        next_mul11_reg_1141 <= next_mul11_fu_822_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & (1'b0 == exitcond6_fu_594_p2))) begin
        next_mul_reg_993 <= next_mul_fu_627_p2;
        tmp_38_reg_998 <= tmp_38_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        tmp_28_reg_1018 <= grp_fu_470_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_35_reg_1013 <= grp_fu_467_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        tmp_7_reg_1166 <= tmp_7_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond8_fu_530_p2 == 1'b0))) begin
        training_data2_addr_reg_952 <= tmp_50_cast_fu_548_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        training_data_V_load_reg_1003 <= training_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        x_assign_reg_1161 <= grp_fu_463_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0)) | ((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond2_fu_757_p2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st25_fsm_24) & ~(1'b0 == exitcond2_fu_757_p2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_171) begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_397) begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_180) begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_53) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_371) begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_189) begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_202) begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_215) begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_429) begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_235) begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_253) begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_269) begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_286) begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_511) begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_78) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_297) begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_306) begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_462) begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st35_fsm_34 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_453) begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st36_fsm_35 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_87) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_96) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_117) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_136) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_153) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_162) begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        distance_address0 = tmp_s_fu_507_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34))) begin
        distance_address0 = distance_addr_1_reg_1123;
    end else begin
        distance_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st34_fsm_33) | (1'b1 == ap_sig_cseq_ST_st35_fsm_34))) begin
        distance_ce0 = 1'b1;
    end else begin
        distance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st35_fsm_34)) begin
        distance_d0 = tmp_42_fu_900_p2;
    end else if ((1'b1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        distance_d0 = ap_const_lv32_0;
    end else begin
        distance_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & (1'b0 == exitcond9_fu_495_p2)) | ((1'b1 == ap_sig_cseq_ST_st35_fsm_34) & ~(1'b0 == tmp_7_reg_1166)))) begin
        distance_we0 = 1'b1;
    end else begin
        distance_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        min_distance_address0 = tmp_fu_490_p1;
    end else if (((1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        min_distance_address0 = min_distance_addr_1_reg_1105;
    end else begin
        min_distance_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) | (1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st36_fsm_35))) begin
        min_distance_ce0 = 1'b1;
    end else begin
        min_distance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st36_fsm_35)) begin
        min_distance_d0 = distance_q0;
    end else if ((1'b1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        min_distance_d0 = ap_const_lv32_31;
    end else begin
        min_distance_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (1'b0 == exitcond10_fu_478_p2)) | ((1'b1 == ap_sig_cseq_ST_st36_fsm_35) & ~(1'b0 == tmp_39_fu_907_p2)))) begin
        min_distance_we0 = 1'b1;
    end else begin
        min_distance_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        training_data2_address0 = training_data2_addr_reg_952;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        training_data2_address0 = tmp_55_cast_fu_646_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        training_data2_address0 = tmp_58_cast_fu_721_p1;
    end else begin
        training_data2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st23_fsm_22) | (1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        training_data2_ce0 = 1'b1;
    end else begin
        training_data2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        training_data2_d0 = tmp_28_reg_1018;
    end else if ((1'b1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        training_data2_d0 = tmp_35_reg_1013;
    end else begin
        training_data2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st20_fsm_19) | (1'b1 == ap_sig_cseq_ST_st14_fsm_13))) begin
        training_data2_we0 = 1'b1;
    end else begin
        training_data2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        training_data_V_ce0 = 1'b1;
    end else begin
        training_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        training_instance_address0 = tmp_59_cast_fu_741_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        training_instance_address0 = tmp_61_cast_fu_837_p1;
    end else begin
        training_instance_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st27_fsm_26) | (1'b1 == ap_sig_cseq_ST_st24_fsm_23))) begin
        training_instance_ce0 = 1'b1;
    end else begin
        training_instance_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        training_instance_we0 = 1'b1;
    end else begin
        training_instance_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((1'b0 == exitcond10_fu_478_p2)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if ((1'b0 == exitcond9_fu_495_p2)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if ((exitcond8_fu_530_p2 == 1'b0)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        end
        ap_ST_st5_fsm_4 : begin
            if (~(1'b0 == exitcond7_fu_563_p2)) begin
                ap_NS_fsm = ap_ST_st15_fsm_14;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st6_fsm_5 : begin
            if ((1'b0 == exitcond6_fu_594_p2)) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end
        end
        ap_ST_st7_fsm_6 : begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st15_fsm_14 : begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st21_fsm_20 : begin
            if (~(1'b0 == exitcond5_fu_660_p2)) begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st22_fsm_21 : begin
            if ((1'b0 == exitcond4_fu_682_p2)) begin
                ap_NS_fsm = ap_ST_st23_fsm_22;
            end else begin
                ap_NS_fsm = ap_ST_st21_fsm_20;
            end
        end
        ap_ST_st23_fsm_22 : begin
            if ((1'b0 == exitcond3_fu_694_p2)) begin
                ap_NS_fsm = ap_ST_st24_fsm_23;
            end else begin
                ap_NS_fsm = ap_ST_st22_fsm_21;
            end
        end
        ap_ST_st24_fsm_23 : begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st25_fsm_24 : begin
            if (~(1'b0 == exitcond2_fu_757_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st26_fsm_25;
            end
        end
        ap_ST_st26_fsm_25 : begin
            if ((1'b0 == exitcond1_fu_778_p2)) begin
                ap_NS_fsm = ap_ST_st27_fsm_26;
            end else begin
                ap_NS_fsm = ap_ST_st25_fsm_24;
            end
        end
        ap_ST_st27_fsm_26 : begin
            if (~(1'b0 == exitcond_fu_795_p2)) begin
                ap_NS_fsm = ap_ST_st36_fsm_35;
            end else begin
                ap_NS_fsm = ap_ST_st28_fsm_27;
            end
        end
        ap_ST_st28_fsm_27 : begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : begin
            ap_NS_fsm = ap_ST_st35_fsm_34;
        end
        ap_ST_st35_fsm_34 : begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st36_fsm_35 : begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_117 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_136 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_153 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_162 = (1'b1 == ap_CS_fsm[ap_const_lv32_7]);
end

always @ (*) begin
    ap_sig_171 = (1'b1 == ap_CS_fsm[ap_const_lv32_C]);
end

always @ (*) begin
    ap_sig_180 = (1'b1 == ap_CS_fsm[ap_const_lv32_12]);
end

always @ (*) begin
    ap_sig_189 = (1'b1 == ap_CS_fsm[ap_const_lv32_14]);
end

always @ (*) begin
    ap_sig_202 = (1'b1 == ap_CS_fsm[ap_const_lv32_15]);
end

always @ (*) begin
    ap_sig_215 = (1'b1 == ap_CS_fsm[ap_const_lv32_16]);
end

always @ (*) begin
    ap_sig_235 = (1'b1 == ap_CS_fsm[ap_const_lv32_18]);
end

always @ (*) begin
    ap_sig_253 = (1'b1 == ap_CS_fsm[ap_const_lv32_19]);
end

always @ (*) begin
    ap_sig_269 = (1'b1 == ap_CS_fsm[ap_const_lv32_1A]);
end

always @ (*) begin
    ap_sig_286 = (1'b1 == ap_CS_fsm[ap_const_lv32_1B]);
end

always @ (*) begin
    ap_sig_297 = (1'b1 == ap_CS_fsm[ap_const_lv32_20]);
end

always @ (*) begin
    ap_sig_306 = (1'b1 == ap_CS_fsm[ap_const_lv32_21]);
end

always @ (*) begin
    ap_sig_371 = (1'b1 == ap_CS_fsm[ap_const_lv32_13]);
end

always @ (*) begin
    ap_sig_397 = (1'b1 == ap_CS_fsm[ap_const_lv32_D]);
end

always @ (*) begin
    ap_sig_429 = (1'b1 == ap_CS_fsm[ap_const_lv32_17]);
end

always @ (*) begin
    ap_sig_453 = (1'b1 == ap_CS_fsm[ap_const_lv32_23]);
end

always @ (*) begin
    ap_sig_462 = (1'b1 == ap_CS_fsm[ap_const_lv32_22]);
end

always @ (*) begin
    ap_sig_511 = (1'b1 == ap_CS_fsm[ap_const_lv32_1C]);
end

always @ (*) begin
    ap_sig_53 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_78 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_87 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_96 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

assign exitcond10_fu_478_p2 = ((i_reg_202 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond1_fu_778_p2 = ((j7_reg_430 == ap_const_lv4_E) ? 1'b1 : 1'b0);

assign exitcond2_fu_757_p2 = ((i6_reg_395 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond3_fu_694_p2 = ((k5_reg_362 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond4_fu_682_p2 = ((j4_reg_339 == ap_const_lv4_E) ? 1'b1 : 1'b0);

assign exitcond5_fu_660_p2 = ((i3_reg_316 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond6_fu_594_p2 = ((k_reg_294 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign exitcond7_fu_563_p2 = ((i2_reg_271 == ap_const_lv5_14) ? 1'b1 : 1'b0);

assign exitcond8_fu_530_p2 = ((j_reg_224 == ap_const_lv4_E) ? 1'b1 : 1'b0);

assign exitcond9_fu_495_p2 = ((i1_reg_213 == ap_const_lv4_E) ? 1'b1 : 1'b0);

assign exitcond_fu_795_p2 = ((k8_reg_441 == ap_const_lv6_31) ? 1'b1 : 1'b0);

assign grp_fu_467_p0 = training_data_V_load_reg_1003;

assign grp_fu_470_p0 = tmp_1_fu_575_p4;

assign i2_cast_cast_fu_559_p1 = i2_reg_271;

assign i3_cast_cast_fu_656_p1 = i3_reg_316;

assign i_5_fu_484_p2 = (i_reg_202 + ap_const_lv5_1);

assign i_6_fu_501_p2 = (i1_reg_213 + ap_const_lv4_1);

assign i_7_fu_666_p2 = (i3_reg_316 + ap_const_lv5_1);

assign i_8_fu_569_p2 = (i2_reg_271 + ap_const_lv5_1);

assign i_9_fu_763_p2 = (i6_reg_395 + ap_const_lv5_1);

assign input_r_address0 = tmp_60_cast_fu_817_p1;

assign j4_cast_fu_678_p1 = j4_reg_339;

assign j7_cast6_fu_774_p1 = j7_reg_430;

assign j_4_fu_536_p2 = (j_reg_224 + ap_const_lv4_1);

assign j_5_fu_688_p2 = (j4_reg_339 + ap_const_lv4_1);

assign j_6_fu_784_p2 = (j7_reg_430 + ap_const_lv4_1);

assign k_2_fu_600_p2 = (k_reg_294 + ap_const_lv6_1);

assign k_3_fu_700_p2 = (k5_reg_362 + ap_const_lv6_1);

assign k_4_fu_801_p2 = (k8_reg_441 + ap_const_lv6_1);

assign k_cast1_fu_590_p1 = k_reg_294;

assign next_mul10_fu_726_p2 = (j4_cast_reg_1046 + phi_mul10_reg_384);

assign next_mul11_fu_822_p2 = (phi_mul11_reg_452 + j7_cast6_reg_1110);

assign next_mul1_fu_650_p2 = (phi_mul2_reg_327 + ap_const_lv14_2AE);

assign next_mul2_fu_553_p2 = (phi_mul1_reg_282 + ap_const_lv10_32);

assign next_mul3_fu_745_p2 = (phi_mul6_reg_418 + ap_const_lv14_2AE);

assign next_mul4_fu_524_p2 = (phi_mul3_reg_235 + ap_const_lv9_13);

assign next_mul5_fu_751_p2 = (phi_mul4_reg_406 + ap_const_lv10_31);

assign next_mul6_fu_518_p2 = (phi_mul5_reg_247 + ap_const_lv14_3E8);

assign next_mul7_fu_672_p2 = (phi_mul8_reg_350 + ap_const_lv14_3D5);

assign next_mul8_fu_512_p2 = (phi_mul7_reg_259 + ap_const_lv14_3D5);

assign next_mul9_fu_706_p2 = (i3_cast_cast_reg_1028 + phi_mul9_reg_373);

assign next_mul_fu_627_p2 = (i2_cast_cast_reg_962 + phi_mul_reg_305);

assign notlhs_fu_876_p2 = ((tmp_4_fu_866_p4 != ap_const_lv8_FF) ? 1'b1 : 1'b0);

assign notrhs_fu_882_p2 = ((tmp_3_fu_849_p1 == ap_const_lv23_0) ? 1'b1 : 1'b0);

assign p_Result_s_fu_853_p3 = {{1'b0}, {tmp_2_fu_845_p1}};

assign p_Val2_s_fu_842_p1 = x_assign_reg_1161;

assign tmp1_cast_fu_612_p1 = tmp1_fu_606_p2;

assign tmp1_fu_606_p2 = (k_cast1_fu_590_p1 + phi_mul1_reg_282);

assign tmp_1_fu_575_p4 = {{phi_mul3_reg_235[ap_const_lv32_8 : ap_const_lv32_7]}};

assign tmp_29_fu_542_p2 = (phi_mul7_reg_259 + ap_const_lv14_3D4);

assign tmp_2_fu_845_p1 = p_Val2_s_fu_842_p1[30:0];

assign tmp_30_fu_769_p1 = i6_reg_395;

assign tmp_31_fu_715_p2 = (phi_mul8_reg_350 + tmp_41_cast_fu_711_p1);

assign tmp_32_fu_735_p2 = (phi_mul2_reg_327 + tmp_43_cast_fu_731_p1);

assign tmp_33_fu_616_p2 = (phi_mul5_reg_247 + tmp1_cast_fu_612_p1);

assign tmp_34_fu_622_p1 = tmp_33_fu_616_p2;

assign tmp_37_fu_790_p1 = j7_reg_430;

assign tmp_38_fu_636_p2 = (phi_mul7_reg_259 + tmp_39_cast_fu_632_p1);

assign tmp_39_cast_fu_632_p1 = phi_mul_reg_305;

assign tmp_39_fu_907_p2 = (($signed(distance_q0) < $signed(min_distance_q0)) ? 1'b1 : 1'b0);

assign tmp_3_fu_849_p1 = p_Val2_s_fu_842_p1[22:0];

assign tmp_40_fu_811_p2 = (tmp_45_cast_fu_807_p1 + phi_mul4_reg_406);

assign tmp_41_cast_fu_711_p1 = phi_mul9_reg_373;

assign tmp_41_fu_831_p2 = (tmp_47_cast_fu_827_p1 + phi_mul6_reg_418);

assign tmp_42_fu_900_p2 = (distance_q0 + ap_const_lv32_1);

assign tmp_43_cast_fu_731_p1 = phi_mul10_reg_384;

assign tmp_45_cast_fu_807_p1 = k8_reg_441;

assign tmp_47_cast_fu_827_p1 = phi_mul11_reg_452;

assign tmp_4_fu_866_p4 = {{p_Val2_s_fu_842_p1[ap_const_lv32_1E : ap_const_lv32_17]}};

assign tmp_50_cast_fu_548_p1 = tmp_29_fu_542_p2;

assign tmp_55_cast_fu_646_p1 = tmp_38_reg_998;

assign tmp_58_cast_fu_721_p1 = tmp_31_fu_715_p2;

assign tmp_59_cast_fu_741_p1 = tmp_32_reg_1082;

assign tmp_5_fu_888_p2 = (notrhs_fu_882_p2 | notlhs_fu_876_p2);

assign tmp_60_cast_fu_817_p1 = tmp_40_fu_811_p2;

assign tmp_61_cast_fu_837_p1 = tmp_41_fu_831_p2;

assign tmp_6_fu_473_p0 = p_Result_s_fu_853_p3;

assign tmp_7_fu_894_p2 = (tmp_5_fu_888_p2 & tmp_6_fu_473_p2);

assign tmp_fu_490_p1 = i_reg_202;

assign tmp_s_fu_507_p1 = i1_reg_213;

assign training_data_V_address0 = tmp_34_fu_622_p1;

always @ (posedge ap_clk) begin
    i2_cast_cast_reg_962[9:5] <= 5'b00000;
    i3_cast_cast_reg_1028[9:5] <= 5'b00000;
    j4_cast_reg_1046[9:4] <= 6'b000000;
    j7_cast6_reg_1110[9:4] <= 6'b000000;
end

endmodule //dut_knn
