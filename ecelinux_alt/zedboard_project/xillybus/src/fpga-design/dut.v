// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.2
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dut,hls_ip_2016_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.412000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=228,HLS_SYN_DSP=44,HLS_SYN_FF=5522,HLS_SYN_LUT=8922}" *)

module dut (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        strm_in_V_V_dout,
        strm_in_V_V_empty_n,
        strm_in_V_V_read,
        strm_out_V_V_din,
        strm_out_V_V_full_n,
        strm_out_V_V_write
);

parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_st5_fsm_4 = 7'b10000;
parameter    ap_ST_st6_fsm_5 = 7'b100000;
parameter    ap_ST_st7_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv14_0 = 14'b00000000000000;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv14_3100 = 14'b11000100000000;
parameter    ap_const_lv14_1 = 14'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] strm_in_V_V_dout;
input   strm_in_V_V_empty_n;
output   strm_in_V_V_read;
output  [31:0] strm_out_V_V_din;
input   strm_out_V_V_full_n;
output   strm_out_V_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg strm_in_V_V_read;
reg[31:0] strm_out_V_V_din;
reg strm_out_V_V_write;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_22;
reg    strm_in_V_V_blk_n;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_43;
wire   [0:0] exitcond_fu_125_p2;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_54;
reg    strm_out_V_V_blk_n;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_63;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_70;
wire   [13:0] i_10_fu_131_p2;
reg   [13:0] i_10_reg_155;
reg    ap_sig_77;
reg   [12:0] stage1_address0;
reg    stage1_ce0;
wire   [31:0] stage1_q0;
reg   [13:0] sound_in_address0;
reg    sound_in_ce0;
reg    sound_in_we0;
wire   [31:0] sound_in_d0;
wire   [31:0] sound_in_q0;
wire    grp_dut_mel_into_dct_fu_102_ap_start;
wire    grp_dut_mel_into_dct_fu_102_ap_done;
wire    grp_dut_mel_into_dct_fu_102_ap_idle;
wire    grp_dut_mel_into_dct_fu_102_ap_ready;
wire   [12:0] grp_dut_mel_into_dct_fu_102_z2_address0;
wire    grp_dut_mel_into_dct_fu_102_z2_ce0;
wire   [1:0] grp_dut_mel_into_dct_fu_102_ap_return;
wire    grp_dut_mfcc_fft_fu_113_ap_start;
wire    grp_dut_mfcc_fft_fu_113_ap_done;
wire    grp_dut_mfcc_fft_fu_113_ap_idle;
wire    grp_dut_mfcc_fft_fu_113_ap_ready;
wire   [13:0] grp_dut_mfcc_fft_fu_113_sound_file_address0;
wire    grp_dut_mfcc_fft_fu_113_sound_file_ce0;
wire   [12:0] grp_dut_mfcc_fft_fu_113_output_r_address0;
wire    grp_dut_mfcc_fft_fu_113_output_r_ce0;
wire    grp_dut_mfcc_fft_fu_113_output_r_we0;
wire   [31:0] grp_dut_mfcc_fft_fu_113_output_r_d0;
reg   [13:0] i_reg_91;
reg    ap_reg_grp_dut_mel_into_dct_fu_102_ap_start;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_138;
reg    ap_reg_grp_dut_mfcc_fft_fu_113_ap_start;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_173;
wire   [63:0] tmp_54_fu_142_p1;
wire   [31:0] output_fu_147_p1;
reg   [6:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'b1;
#0 ap_reg_grp_dut_mel_into_dct_fu_102_ap_start = 1'b0;
#0 ap_reg_grp_dut_mfcc_fft_fu_113_ap_start = 1'b0;
end

dut_stage1 #(
    .DataWidth( 32 ),
    .AddressRange( 6321 ),
    .AddressWidth( 13 ))
stage1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(stage1_address0),
    .ce0(stage1_ce0),
    .we0(grp_dut_mfcc_fft_fu_113_output_r_we0),
    .d0(grp_dut_mfcc_fft_fu_113_output_r_d0),
    .q0(stage1_q0)
);

dut_mfcc_fft_M #(
    .DataWidth( 32 ),
    .AddressRange( 12544 ),
    .AddressWidth( 14 ))
sound_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sound_in_address0),
    .ce0(sound_in_ce0),
    .we0(sound_in_we0),
    .d0(sound_in_d0),
    .q0(sound_in_q0)
);

dut_mel_into_dct grp_dut_mel_into_dct_fu_102(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_mel_into_dct_fu_102_ap_start),
    .ap_done(grp_dut_mel_into_dct_fu_102_ap_done),
    .ap_idle(grp_dut_mel_into_dct_fu_102_ap_idle),
    .ap_ready(grp_dut_mel_into_dct_fu_102_ap_ready),
    .z2_address0(grp_dut_mel_into_dct_fu_102_z2_address0),
    .z2_ce0(grp_dut_mel_into_dct_fu_102_z2_ce0),
    .z2_q0(stage1_q0),
    .ap_return(grp_dut_mel_into_dct_fu_102_ap_return)
);

dut_mfcc_fft grp_dut_mfcc_fft_fu_113(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dut_mfcc_fft_fu_113_ap_start),
    .ap_done(grp_dut_mfcc_fft_fu_113_ap_done),
    .ap_idle(grp_dut_mfcc_fft_fu_113_ap_idle),
    .ap_ready(grp_dut_mfcc_fft_fu_113_ap_ready),
    .sound_file_address0(grp_dut_mfcc_fft_fu_113_sound_file_address0),
    .sound_file_ce0(grp_dut_mfcc_fft_fu_113_sound_file_ce0),
    .sound_file_q0(sound_in_q0),
    .output_r_address0(grp_dut_mfcc_fft_fu_113_output_r_address0),
    .output_r_ce0(grp_dut_mfcc_fft_fu_113_output_r_ce0),
    .output_r_we0(grp_dut_mfcc_fft_fu_113_output_r_we0),
    .output_r_d0(grp_dut_mfcc_fft_fu_113_output_r_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_mel_into_dct_fu_102_ap_start <= 1'b0;
    end else begin
        if ((1'b1 == ap_sig_cseq_ST_st5_fsm_4)) begin
            ap_reg_grp_dut_mel_into_dct_fu_102_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_mel_into_dct_fu_102_ap_ready)) begin
            ap_reg_grp_dut_mel_into_dct_fu_102_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_dut_mfcc_fft_fu_113_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_77 & ~(exitcond_fu_125_p2 == 1'b0))) begin
            ap_reg_grp_dut_mfcc_fft_fu_113_ap_start <= 1'b1;
        end else if ((1'b1 == grp_dut_mfcc_fft_fu_113_ap_ready)) begin
            ap_reg_grp_dut_mfcc_fft_fu_113_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0))) begin
        i_reg_91 <= i_10_reg_155;
    end else if (((1'b1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == 1'b0))) begin
        i_reg_91 <= ap_const_lv14_0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & ~ap_sig_77)) begin
        i_10_reg_155 <= i_10_fu_131_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(strm_out_V_V_full_n == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(strm_out_V_V_full_n == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_22) begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_43) begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_54) begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_173) begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_138) begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_63) begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = 1'b0;
    end
end

always @ (*) begin
    if (ap_sig_70) begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_125_p2 == 1'b0))) begin
        sound_in_address0 = tmp_54_fu_142_p1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        sound_in_address0 = grp_dut_mfcc_fft_fu_113_sound_file_address0;
    end else begin
        sound_in_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_125_p2 == 1'b0) & ~ap_sig_77)) begin
        sound_in_ce0 = 1'b1;
    end else if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        sound_in_ce0 = grp_dut_mfcc_fft_fu_113_sound_file_ce0;
    end else begin
        sound_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_125_p2 == 1'b0) & ~ap_sig_77)) begin
        sound_in_we0 = 1'b1;
    end else begin
        sound_in_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        stage1_address0 = grp_dut_mfcc_fft_fu_113_output_r_address0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        stage1_address0 = grp_dut_mel_into_dct_fu_102_z2_address0;
    end else begin
        stage1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        stage1_ce0 = grp_dut_mfcc_fft_fu_113_output_r_ce0;
    end else if ((1'b1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        stage1_ce0 = grp_dut_mel_into_dct_fu_102_z2_ce0;
    end else begin
        stage1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_125_p2 == 1'b0)) | (1'b1 == ap_sig_cseq_ST_st3_fsm_2))) begin
        strm_in_V_V_blk_n = strm_in_V_V_empty_n;
    end else begin
        strm_in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st3_fsm_2) & ~(strm_in_V_V_empty_n == 1'b0)) | ((1'b1 == ap_sig_cseq_ST_st2_fsm_1) & (exitcond_fu_125_p2 == 1'b0) & ~ap_sig_77))) begin
        strm_in_V_V_read = 1'b1;
    end else begin
        strm_in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) | (1'b1 == ap_sig_cseq_ST_st7_fsm_6))) begin
        strm_out_V_V_blk_n = strm_out_V_V_full_n;
    end else begin
        strm_out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(strm_out_V_V_full_n == 1'b0))) begin
        strm_out_V_V_din = ap_const_lv32_1;
    end else if (((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~((strm_out_V_V_full_n == 1'b0) | (1'b0 == grp_dut_mel_into_dct_fu_102_ap_done)))) begin
        strm_out_V_V_din = output_fu_147_p1;
    end else begin
        strm_out_V_V_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_sig_cseq_ST_st6_fsm_5) & ~((strm_out_V_V_full_n == 1'b0) | (1'b0 == grp_dut_mel_into_dct_fu_102_ap_done))) | ((1'b1 == ap_sig_cseq_ST_st7_fsm_6) & ~(strm_out_V_V_full_n == 1'b0)))) begin
        strm_out_V_V_write = 1'b1;
    end else begin
        strm_out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : begin
            if (~(ap_start == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : begin
            if ((~ap_sig_77 & ~(exitcond_fu_125_p2 == 1'b0))) begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end else if (((exitcond_fu_125_p2 == 1'b0) & ~ap_sig_77)) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : begin
            if (~(strm_in_V_V_empty_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end
        end
        ap_ST_st4_fsm_3 : begin
            if (~(1'b0 == grp_dut_mfcc_fft_fu_113_ap_done)) begin
                ap_NS_fsm = ap_ST_st5_fsm_4;
            end else begin
                ap_NS_fsm = ap_ST_st4_fsm_3;
            end
        end
        ap_ST_st5_fsm_4 : begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : begin
            if (~((strm_out_V_V_full_n == 1'b0) | (1'b0 == grp_dut_mel_into_dct_fu_102_ap_done))) begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st6_fsm_5;
            end
        end
        ap_ST_st7_fsm_6 : begin
            if (~(strm_out_V_V_full_n == 1'b0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

always @ (*) begin
    ap_sig_138 = (1'b1 == ap_CS_fsm[ap_const_lv32_4]);
end

always @ (*) begin
    ap_sig_173 = (1'b1 == ap_CS_fsm[ap_const_lv32_3]);
end

always @ (*) begin
    ap_sig_22 = (ap_CS_fsm[ap_const_lv32_0] == 1'b1);
end

always @ (*) begin
    ap_sig_43 = (1'b1 == ap_CS_fsm[ap_const_lv32_1]);
end

always @ (*) begin
    ap_sig_54 = (1'b1 == ap_CS_fsm[ap_const_lv32_2]);
end

always @ (*) begin
    ap_sig_63 = (1'b1 == ap_CS_fsm[ap_const_lv32_5]);
end

always @ (*) begin
    ap_sig_70 = (1'b1 == ap_CS_fsm[ap_const_lv32_6]);
end

always @ (*) begin
    ap_sig_77 = ((exitcond_fu_125_p2 == 1'b0) & (strm_in_V_V_empty_n == 1'b0));
end

assign exitcond_fu_125_p2 = ((i_reg_91 == ap_const_lv14_3100) ? 1'b1 : 1'b0);

assign grp_dut_mel_into_dct_fu_102_ap_start = ap_reg_grp_dut_mel_into_dct_fu_102_ap_start;

assign grp_dut_mfcc_fft_fu_113_ap_start = ap_reg_grp_dut_mfcc_fft_fu_113_ap_start;

assign i_10_fu_131_p2 = (i_reg_91 + ap_const_lv14_1);

assign output_fu_147_p1 = grp_dut_mel_into_dct_fu_102_ap_return;

assign sound_in_d0 = strm_in_V_V_dout;

assign tmp_54_fu_142_p1 = i_reg_91;

endmodule //dut
